[{"C:\\Users\\moreh\\OneDrive\\שולחן העבודה\\Sprint 4\\jammit\\frontend\\src\\index.js":"1","C:\\Users\\moreh\\OneDrive\\שולחן העבודה\\Sprint 4\\jammit\\frontend\\src\\serviceWorkerRegistration.js":"2","C:\\Users\\moreh\\OneDrive\\שולחן העבודה\\Sprint 4\\jammit\\frontend\\src\\reportWebVitals.js":"3","C:\\Users\\moreh\\OneDrive\\שולחן העבודה\\Sprint 4\\jammit\\frontend\\src\\store\\store.js":"4","C:\\Users\\moreh\\OneDrive\\שולחן העבודה\\Sprint 4\\jammit\\frontend\\src\\App.jsx":"5","C:\\Users\\moreh\\OneDrive\\שולחן העבודה\\Sprint 4\\jammit\\frontend\\src\\pages\\LoginSignup.jsx":"6","C:\\Users\\moreh\\OneDrive\\שולחן העבודה\\Sprint 4\\jammit\\frontend\\src\\pages\\UserProfile.jsx":"7","C:\\Users\\moreh\\OneDrive\\שולחן העבודה\\Sprint 4\\jammit\\frontend\\src\\pages\\MembersList.jsx":"8","C:\\Users\\moreh\\OneDrive\\שולחן העבודה\\Sprint 4\\jammit\\frontend\\src\\pages\\JamCreate.jsx":"9","C:\\Users\\moreh\\OneDrive\\שולחן העבודה\\Sprint 4\\jammit\\frontend\\src\\pages\\JamsList.jsx":"10","C:\\Users\\moreh\\OneDrive\\שולחן העבודה\\Sprint 4\\jammit\\frontend\\src\\pages\\JamDetails.jsx":"11","C:\\Users\\moreh\\OneDrive\\שולחן העבודה\\Sprint 4\\jammit\\frontend\\src\\pages\\Home.jsx":"12","C:\\Users\\moreh\\OneDrive\\שולחן העבודה\\Sprint 4\\jammit\\frontend\\src\\pages\\UserSection.jsx":"13","C:\\Users\\moreh\\OneDrive\\שולחן העבודה\\Sprint 4\\jammit\\frontend\\src\\cmps\\MainNav.jsx":"14","C:\\Users\\moreh\\OneDrive\\שולחן העבודה\\Sprint 4\\jammit\\frontend\\src\\pages\\JamExplore.jsx":"15","C:\\Users\\moreh\\OneDrive\\שולחן העבודה\\Sprint 4\\jammit\\frontend\\src\\store\\reducers\\index.js":"16","C:\\Users\\moreh\\OneDrive\\שולחן העבודה\\Sprint 4\\jammit\\frontend\\src\\services\\authService.js":"17","C:\\Users\\moreh\\OneDrive\\שולחן העבודה\\Sprint 4\\jammit\\frontend\\src\\store\\actions\\userActions.js":"18","C:\\Users\\moreh\\OneDrive\\שולחן העבודה\\Sprint 4\\jammit\\frontend\\src\\store\\actions\\jamActions.js":"19","C:\\Users\\moreh\\OneDrive\\שולחן העבודה\\Sprint 4\\jammit\\frontend\\src\\cmps\\UserList.jsx":"20","C:\\Users\\moreh\\OneDrive\\שולחן העבודה\\Sprint 4\\jammit\\frontend\\src\\cmps\\JamList.jsx":"21","C:\\Users\\moreh\\OneDrive\\שולחן העבודה\\Sprint 4\\jammit\\frontend\\src\\services\\mainNavService.js":"22","C:\\Users\\moreh\\OneDrive\\שולחן העבודה\\Sprint 4\\jammit\\frontend\\src\\cmps\\JamScroll.jsx":"23","C:\\Users\\moreh\\OneDrive\\שולחן העבודה\\Sprint 4\\jammit\\frontend\\src\\cmps\\HeroSection.jsx":"24","C:\\Users\\moreh\\OneDrive\\שולחן העבודה\\Sprint 4\\jammit\\frontend\\src\\services\\userService.js":"25","C:\\Users\\moreh\\OneDrive\\שולחן העבודה\\Sprint 4\\jammit\\frontend\\src\\services\\utilService.js":"26","C:\\Users\\moreh\\OneDrive\\שולחן העבודה\\Sprint 4\\jammit\\frontend\\src\\services\\socketService.js":"27","C:\\Users\\moreh\\OneDrive\\שולחן העבודה\\Sprint 4\\jammit\\frontend\\src\\cmps\\JamCreateForm.jsx":"28","C:\\Users\\moreh\\OneDrive\\שולחן העבודה\\Sprint 4\\jammit\\frontend\\src\\services\\jamService.js":"29","C:\\Users\\moreh\\OneDrive\\שולחן העבודה\\Sprint 4\\jammit\\frontend\\src\\store\\reducers\\reviewReducer.js":"30","C:\\Users\\moreh\\OneDrive\\שולחן העבודה\\Sprint 4\\jammit\\frontend\\src\\store\\reducers\\userReducer.js":"31","C:\\Users\\moreh\\OneDrive\\שולחן העבודה\\Sprint 4\\jammit\\frontend\\src\\store\\reducers\\jamReducer.js":"32","C:\\Users\\moreh\\OneDrive\\שולחן העבודה\\Sprint 4\\jammit\\frontend\\src\\store\\reducers\\systemReducer.js":"33","C:\\Users\\moreh\\OneDrive\\שולחן העבודה\\Sprint 4\\jammit\\frontend\\src\\cmps\\UserProfile\\UserTalents.jsx":"34","C:\\Users\\moreh\\OneDrive\\שולחן העבודה\\Sprint 4\\jammit\\frontend\\src\\cmps\\UserProfile\\UserInfo.jsx":"35","C:\\Users\\moreh\\OneDrive\\שולחן העבודה\\Sprint 4\\jammit\\frontend\\src\\cmps\\UserPreview.jsx":"36","C:\\Users\\moreh\\OneDrive\\שולחן העבודה\\Sprint 4\\jammit\\frontend\\src\\cmps\\JamUserPreview.jsx":"37","C:\\Users\\moreh\\OneDrive\\שולחן העבודה\\Sprint 4\\jammit\\frontend\\src\\cmps\\JamGoingModal.jsx":"38","C:\\Users\\moreh\\OneDrive\\שולחן העבודה\\Sprint 4\\jammit\\frontend\\src\\cmps\\StaticMap.jsx":"39","C:\\Users\\moreh\\OneDrive\\שולחן העבודה\\Sprint 4\\jammit\\frontend\\src\\cmps\\JamChat.jsx":"40","C:\\Users\\moreh\\OneDrive\\שולחן העבודה\\Sprint 4\\jammit\\frontend\\src\\services\\httpService.js":"41","C:\\Users\\moreh\\OneDrive\\שולחן העבודה\\Sprint 4\\jammit\\frontend\\src\\cmps\\LoginModal.jsx":"42","C:\\Users\\moreh\\OneDrive\\שולחן העבודה\\Sprint 4\\jammit\\frontend\\src\\cmps\\InviteModal.jsx":"43","C:\\Users\\moreh\\OneDrive\\שולחן העבודה\\Sprint 4\\jammit\\frontend\\src\\cmps\\InviteFriends.jsx":"44","C:\\Users\\moreh\\OneDrive\\שולחן העבודה\\Sprint 4\\jammit\\frontend\\src\\cmps\\JamPreview.jsx":"45","C:\\Users\\moreh\\OneDrive\\שולחן העבודה\\Sprint 4\\jammit\\frontend\\src\\cmps\\JamDetailsNavbar.jsx":"46","C:\\Users\\moreh\\OneDrive\\שולחן העבודה\\Sprint 4\\jammit\\frontend\\src\\services\\iconService.js":"47","C:\\Users\\moreh\\OneDrive\\שולחן העבודה\\Sprint 4\\jammit\\frontend\\src\\cmps\\Scrollbar.jsx":"48"},{"size":935,"mtime":1610550371936,"results":"49","hashOfConfig":"50"},{"size":5201,"mtime":1610550371942,"results":"51","hashOfConfig":"50"},{"size":377,"mtime":1610550371940,"results":"52","hashOfConfig":"50"},{"size":323,"mtime":1610550371960,"results":"53","hashOfConfig":"50"},{"size":1601,"mtime":1611575609540,"results":"54","hashOfConfig":"50"},{"size":4878,"mtime":1610979314998,"results":"55","hashOfConfig":"50"},{"size":2642,"mtime":1611567221828,"results":"56","hashOfConfig":"50"},{"size":3949,"mtime":1611329761023,"results":"57","hashOfConfig":"50"},{"size":1790,"mtime":1610890606431,"results":"58","hashOfConfig":"50"},{"size":4613,"mtime":1611329761021,"results":"59","hashOfConfig":"50"},{"size":8569,"mtime":1611569028131,"results":"60","hashOfConfig":"50"},{"size":3559,"mtime":1611570797906,"results":"61","hashOfConfig":"50"},{"size":4846,"mtime":1611567196150,"results":"62","hashOfConfig":"50"},{"size":3208,"mtime":1611567557131,"results":"63","hashOfConfig":"50"},{"size":16202,"mtime":1611569028137,"results":"64","hashOfConfig":"50"},{"size":396,"mtime":1610550371955,"results":"65","hashOfConfig":"50"},{"size":1596,"mtime":1610612281805,"results":"66","hashOfConfig":"50"},{"size":1628,"mtime":1611182734684,"results":"67","hashOfConfig":"50"},{"size":1544,"mtime":1611310760673,"results":"68","hashOfConfig":"50"},{"size":278,"mtime":1610808500930,"results":"69","hashOfConfig":"50"},{"size":268,"mtime":1611085963156,"results":"70","hashOfConfig":"50"},{"size":1592,"mtime":1611256702735,"results":"71","hashOfConfig":"50"},{"size":1628,"mtime":1611478986493,"results":"72","hashOfConfig":"50"},{"size":1448,"mtime":1611567634272,"results":"73","hashOfConfig":"50"},{"size":2017,"mtime":1611182734678,"results":"74","hashOfConfig":"50"},{"size":1052,"mtime":1610660112295,"results":"75","hashOfConfig":"50"},{"size":1628,"mtime":1610550371948,"results":"76","hashOfConfig":"50"},{"size":5249,"mtime":1611130795384,"results":"77","hashOfConfig":"50"},{"size":1656,"mtime":1611310760672,"results":"78","hashOfConfig":"50"},{"size":669,"mtime":1610550371957,"results":"79","hashOfConfig":"50"},{"size":731,"mtime":1611569028148,"results":"80","hashOfConfig":"50"},{"size":1066,"mtime":1611229457189,"results":"81","hashOfConfig":"50"},{"size":322,"mtime":1610550371958,"results":"82","hashOfConfig":"50"},{"size":1199,"mtime":1611567730506,"results":"83","hashOfConfig":"50"},{"size":2082,"mtime":1611567394520,"results":"84","hashOfConfig":"50"},{"size":1215,"mtime":1611569028112,"results":"85","hashOfConfig":"50"},{"size":654,"mtime":1611310760669,"results":"86","hashOfConfig":"50"},{"size":4159,"mtime":1611478986466,"results":"87","hashOfConfig":"50"},{"size":489,"mtime":1611567520394,"results":"88","hashOfConfig":"50"},{"size":2559,"mtime":1611443790861,"results":"89","hashOfConfig":"50"},{"size":1081,"mtime":1610550371944,"results":"90","hashOfConfig":"50"},{"size":1683,"mtime":1611173192026,"results":"91","hashOfConfig":"50"},{"size":5265,"mtime":1611434194178,"results":"92","hashOfConfig":"50"},{"size":1430,"mtime":1611434194157,"results":"93","hashOfConfig":"50"},{"size":2056,"mtime":1611569028106,"results":"94","hashOfConfig":"50"},{"size":3441,"mtime":1611484359206,"results":"95","hashOfConfig":"50"},{"size":1436,"mtime":1611569028142,"results":"96","hashOfConfig":"50"},{"size":302,"mtime":1611570742070,"results":"97","hashOfConfig":"50"},{"filePath":"98","messages":"99","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"100"},"14pi29",{"filePath":"101","messages":"102","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"100"},{"filePath":"103","messages":"104","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"100"},{"filePath":"105","messages":"106","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"100"},{"filePath":"107","messages":"108","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"100"},{"filePath":"109","messages":"110","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"100"},{"filePath":"111","messages":"112","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"100"},{"filePath":"113","messages":"114","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"115","usedDeprecatedRules":"100"},{"filePath":"116","messages":"117","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"100"},{"filePath":"118","messages":"119","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"100"},{"filePath":"120","messages":"121","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"122","usedDeprecatedRules":"100"},{"filePath":"123","messages":"124","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"100"},{"filePath":"125","messages":"126","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"127","usedDeprecatedRules":"100"},{"filePath":"128","messages":"129","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"100"},{"filePath":"130","messages":"131","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"100"},{"filePath":"132","messages":"133","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"100"},{"filePath":"134","messages":"135","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"100"},{"filePath":"136","messages":"137","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"100"},{"filePath":"138","messages":"139","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"100"},{"filePath":"140","messages":"141","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"100"},{"filePath":"142","messages":"143","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"100"},{"filePath":"144","messages":"145","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"100"},{"filePath":"146","messages":"147","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"100"},{"filePath":"148","messages":"149","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"100"},{"filePath":"150","messages":"151","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"100"},{"filePath":"152","messages":"153","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"100"},{"filePath":"154","messages":"155","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"100"},{"filePath":"156","messages":"157","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"100"},{"filePath":"158","messages":"159","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"160","usedDeprecatedRules":"100"},{"filePath":"161","messages":"162","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"100"},{"filePath":"163","messages":"164","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"100"},{"filePath":"165","messages":"166","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"100"},{"filePath":"167","messages":"168","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"100"},{"filePath":"169","messages":"170","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"100"},{"filePath":"171","messages":"172","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"100"},{"filePath":"173","messages":"174","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"175","usedDeprecatedRules":"100"},{"filePath":"176","messages":"177","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"100"},{"filePath":"178","messages":"179","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"100"},{"filePath":"180","messages":"181","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"100"},{"filePath":"182","messages":"183","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"100"},{"filePath":"184","messages":"185","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"100"},{"filePath":"186","messages":"187","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"100"},{"filePath":"188","messages":"189","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"190","usedDeprecatedRules":"100"},{"filePath":"191","messages":"192","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"193"},{"filePath":"194","messages":"195","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"196","usedDeprecatedRules":"100"},{"filePath":"197","messages":"198","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"100"},{"filePath":"199","messages":"200","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"201","usedDeprecatedRules":"100"},{"filePath":"202","messages":"203","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"193"},"C:\\Users\\moreh\\OneDrive\\שולחן העבודה\\Sprint 4\\jammit\\frontend\\src\\index.js",[],["204","205"],"C:\\Users\\moreh\\OneDrive\\שולחן העבודה\\Sprint 4\\jammit\\frontend\\src\\serviceWorkerRegistration.js",[],"C:\\Users\\moreh\\OneDrive\\שולחן העבודה\\Sprint 4\\jammit\\frontend\\src\\reportWebVitals.js",[],"C:\\Users\\moreh\\OneDrive\\שולחן העבודה\\Sprint 4\\jammit\\frontend\\src\\store\\store.js",[],"C:\\Users\\moreh\\OneDrive\\שולחן העבודה\\Sprint 4\\jammit\\frontend\\src\\App.jsx",[],"C:\\Users\\moreh\\OneDrive\\שולחן העבודה\\Sprint 4\\jammit\\frontend\\src\\pages\\LoginSignup.jsx",[],"C:\\Users\\moreh\\OneDrive\\שולחן העבודה\\Sprint 4\\jammit\\frontend\\src\\pages\\UserProfile.jsx",[],"C:\\Users\\moreh\\OneDrive\\שולחן העבודה\\Sprint 4\\jammit\\frontend\\src\\pages\\MembersList.jsx",["206"],"import React, { Component } from 'react'\r\nimport { connect } from 'react-redux'\r\nimport { UserList } from '../cmps/UserList'\r\nimport { loadUsers } from '../store/actions/userActions'\r\nimport SearchRoundedIcon from '@material-ui/icons/SearchRounded';\r\nimport Loader from 'react-loader-spinner';\r\n\r\nclass _MembersList extends Component {\r\n\r\n    state = {\r\n        filterBy: {\r\n            username: '',\r\n            fullname: ''\r\n        }\r\n    }\r\n\r\n    componentDidMount() {\r\n        this.props.loadUsers()\r\n    }\r\n\r\n    // handleChange = (ev) => {\r\n    //     const filterBy = { ...this.state.filterBy };\r\n    //     filterBy[ev.target.name] = ev.target.value;\r\n    //     this.setState({ filterBy }, ()=> {\r\n    //         this.props.loadUsers(this.state.filterBy)\r\n    //     });\r\n    // };\r\n    onHandleInputChange = ({ target }) => {\r\n        const field = target.name\r\n        // let value = (target.type === 'number') ? +target.value : target.value\r\n\r\n        this.setState(prevState => {\r\n            return {\r\n                ...prevState,\r\n                filterBy: {\r\n                    ...prevState.filterBy,\r\n                    [field]: target.value\r\n                }\r\n            }\r\n        }, () => {\r\n            const { filterBy } = this.state\r\n            this.props.loadUsers(filterBy)\r\n        })\r\n    }\r\n\r\n\r\n\r\n    onSetFilter = (ev) => {\r\n        ev.preventDefault();\r\n        // const { filterBy } = this.state\r\n        this.props.loadUsers(this.state.filterBy)\r\n    }\r\n\r\n    render() {\r\n        const { users } = this.props\r\n        const { username, fullname } = this.state.filterBy\r\n        if (!users) {\r\n            return <div className=\"loader main-content pos-relative\">\r\n                <Loader type=\"Bars\" color=\"#00475F\" height={200} width={200} timeout={5000} />\r\n            </div>\r\n        }\r\n        return (\r\n            <section>\r\n                <div className=\"search-area\">\r\n                <div className=\"search-title\">\r\n                        <h1 className=\"staatliches align-center\">Member Search</h1>\r\n                    </div>\r\n                <div className=\"jam-filter-container flex justify-center\">\r\n                    <div className=\"title-search\">\r\n                        <SearchRoundedIcon className=\"search-icon\" />\r\n                        <form onSubmit={this.onSetFilter}>\r\n                        <input\r\n                            type=\"text\"\r\n                            id=\"username\"\r\n                            name=\"username\"\r\n                            value={username}\r\n                            onChange={this.onHandleInputChange} \r\n                        />\r\n                        </form>\r\n                    </div>\r\n                </div>\r\n                </div>\r\n                <div className=\"members-container\">\r\n                    <UserList users={users} />\r\n                </div>\r\n                {/* <div className=\"input-box\">\r\n                        <SearchRoundedIcon className=\"search-icon\" />\r\n                        <form onSubmit={this.onSetFilter}>\r\n                            <input name=\"username\"\r\n                                type=\"text\"\r\n                                id=\"username\"\r\n                                className=\"fs18\"\r\n                                placeholder=\"Looking for someone?\"\r\n                                value={username}\r\n                                onChange={this.onHandleInputChange} />\r\n                        </form>\r\n                    </div> */}\r\n            </section>\r\n        )\r\n    }\r\n}\r\n\r\nconst mapStateToProps = state => {\r\n    return {\r\n        //   jams: state.jamModule.jams,\r\n        users: state.userModule.users,\r\n        filterBy: state.userModule.filterBy\r\n        // loggedInUser: state.userModule.loggedInUser\r\n    }\r\n}\r\nconst mapDispatchToProps = {\r\n    // loadJams,\r\n    loadUsers,\r\n}\r\n\r\nexport const MembersList = connect(mapStateToProps, mapDispatchToProps)(_MembersList)\r\n","C:\\Users\\moreh\\OneDrive\\שולחן העבודה\\Sprint 4\\jammit\\frontend\\src\\pages\\JamCreate.jsx",[],"C:\\Users\\moreh\\OneDrive\\שולחן העבודה\\Sprint 4\\jammit\\frontend\\src\\pages\\JamsList.jsx",[],"C:\\Users\\moreh\\OneDrive\\שולחן העבודה\\Sprint 4\\jammit\\frontend\\src\\pages\\JamDetails.jsx",["207"],"import React, { Component } from 'react'\r\nimport { jamService } from '../services/jamService'\r\n// import RoomRoundedIcon from '@material-ui/icons/RoomRounded';\r\nimport AccessTimeRoundedIcon from '@material-ui/icons/AccessTimeRounded';\r\nimport PeopleAltRoundedIcon from '@material-ui/icons/PeopleAltRounded';\r\nimport EmojiPeopleRoundedIcon from '@material-ui/icons/EmojiPeopleRounded';\r\n// import { MapContainer } from '../cmps/MapContainer';\r\nimport { JamUserPreview } from '../cmps/JamUserPreview';\r\nimport { utilService } from '../services/utilService';\r\nimport { Link } from 'react-router-dom';\r\nimport { JamNavbar } from '../cmps/JamDetailsNavbar';\r\nimport JamGoingListModal from '../cmps/JamGoingModal';\r\nimport { connect } from 'react-redux';\r\nimport { updateJamGoing, loadJams, saveJam } from '../store/actions/jamActions.js';\r\nimport {StaticMap} from '../cmps/StaticMap'\r\n// import { jamGoingListModal } from '../cmps/JamGoingModal'\r\n// import { loadJams } from '../store/actions/jamActions'\r\nimport HourglassEmptyRoundedIcon from '@material-ui/icons/HourglassEmptyRounded';\r\nimport RoomOutlinedIcon from '@material-ui/icons/RoomOutlined';\r\nimport Loader from 'react-loader-spinner';\r\nimport { JamChat } from '../cmps/JamChat';\r\n\r\nconst emptyJam = {\r\n    title: \"\",\r\n    description: \"\",\r\n    imgUrl: \"http://some-img\",\r\n    capacity: null,\r\n    location: {\r\n        region: \"\",\r\n        city: \"\",\r\n        address: \"\",\r\n        lat: null,\r\n        lng: null\r\n    },\r\n    createdBy: {},\r\n    startsAt: null,\r\n    tags: [],\r\n    createdAt: null,\r\n    usersGoing: []\r\n}\r\n\r\nclass _JamDetails extends Component {\r\n    state = {\r\n        jam: null,\r\n        isUserAdmin: false,\r\n        isEditMode: false\r\n    }\r\n\r\n\r\n    async componentDidMount() {\r\n        window.scrollTo(0,0)\r\n        this.props.loadJams()\r\n        if (this.props.isEditMode) {\r\n            this.setState({ jam: emptyJam, isEditMode: true, isUserAdmin: true })\r\n        }\r\n        else {\r\n            const jam = await jamService.getById(this.props.match.params.id);\r\n            this.setState({ jam }, () => {\r\n                this.checkIfUserHost()\r\n            })\r\n        }\r\n    }\r\n\r\n    componentWillReceiveProps(props) {\r\n        if (props.isSubmit) {\r\n            const miniUser = {}\r\n            miniUser._id = this.props.loggedInUser._id\r\n            miniUser.fullname = this.props.loggedInUser.fullname\r\n            miniUser.imgUrl = this.props.loggedInUser.imgUrl\r\n            miniUser.playing = this.props.loggedInUser.talents\r\n            // this.props.saveJam(this.state.jam, miniUser)\r\n            this.props.jamSaved()\r\n        }\r\n        this.setState({ jam: props.jam })\r\n    }\r\n\r\n    componentDidUpdate(prevProps) {\r\n        if (this.state.isEditMode) return\r\n        if (this.props.jams !== prevProps.jams) {\r\n            this.setState({ jam: this.props.jams.find(jam => jam._id === this.props.match.params.id) });\r\n        }\r\n    }\r\n\r\n    checkIfUserHost = () => {\r\n        if (!this.props.loggedInUser) return\r\n        if (this.props.loggedInUser._id === this.state.jam.createdBy._id) {\r\n            this.setState({ isUserAdmin: true })\r\n        }\r\n    }\r\n\r\n    render() {\r\n        const { jam, isEditMode, isUserAdmin } = this.state\r\n        return (\r\n            <section className=\"jam-details\">\r\n                {!this.state.jam && <div className=\"loader main-content pos-relative\">\r\n                    <Loader type=\"Bars\" color=\"#00475F\" height={200} width={200} timeout={5000} />\r\n                </div>}\r\n                {this.state.jam &&\r\n                    <div className=\"page-con main-container\">\r\n                        \r\n                        <div className=\"jam-top full\" >\r\n                             <div className=\"jam-image\" style={{\r\n                                 backgroundImage: 'url('+ this.state.jam.imgUrl +')'                     \r\n                             }} ></div>\r\n                            \r\n                        </div>\r\n                        <h1 className=\"jam-title\">{this.state.jam.title}</h1>\r\n                        {!this.state.isEditMode && <div>\r\n                            <JamNavbar\r\n                                history={this.props.history}\r\n                                user={this.props.loggedInUser}\r\n                                jam={this.state.jam}\r\n                                updateJamGoing={this.props.updateJamGoing}\r\n                                isUserAdmin={this.state.isUserAdmin}\r\n                            />\r\n                        </div>}\r\n                        <div className=\"page-content\">\r\n                            <div className=\"left-page-details\">\r\n                                <div className=\"details-con\">\r\n                                    <h3 className=\"title-style\">Details</h3>\r\n                                    <p><span className=\"icon-style\"><HourglassEmptyRoundedIcon /></span><span className=\"details-style\">{this.state.jam.capacity - this.state.jam.usersGoing.length} Slots Available</span></p>\r\n                                    <p><span className=\"icon-style\"><PeopleAltRoundedIcon /></span> <span className=\"details-style\">{this.state.jam.usersGoing.length} People going</span></p>\r\n                                    {!isEditMode && <p><span className=\"icon-style\"><EmojiPeopleRoundedIcon /></span> <span className=\"details-style\">Created by <Link to={\"/user/\" + this.state.jam.createdBy._id} > {this.state.jam.createdBy.fullname}</Link></span></p>}\r\n                                    <p><span className=\"icon-style\"><RoomOutlinedIcon /></span> <span className=\"details-style\">{this.state.jam.location.address}, {this.state.jam.location.city}</span></p>\r\n                                    <p><span className=\"icon-style\"><AccessTimeRoundedIcon /></span> <span className=\"details-style\">{utilService.getFormattedDate(this.state.jam.startsAt)}</span></p>\r\n                                    <div className=\"description-con\">\r\n                                        <h3 className=\"title-style\">Description</h3>\r\n                                        <p>{this.state.jam.description}</p>\r\n                                    </div>\r\n                                    <div>\r\n                                        <ul className=\"big-tags flex\">{jam.tags.map((tag, idx) => {\r\n                                            return <li key={idx}>{tag}</li>\r\n                                        })}\r\n                                        </ul>\r\n                                    </div>\r\n                                 \r\n                                </div>\r\n                                {!this.state.isEditMode && <div className=\"wall-container\">\r\n                                        <h3 className=\"title-style\">Jam Wall</h3>\r\n                                        <JamChat jamId={jam._id} msgs={jam.msgs} jam={jam}/>\r\n                                    </div>} \r\n                            </div>\r\n                            <div className=\"left-page-con\">\r\n                            <div className=\"location-con\">\r\n                                    {/* <div><MapContainer lat={this.state.jam.location.lat} lng={this.state.jam.location.lng} /></div> */}\r\n                                    <div><StaticMap lat={this.state.jam.location.lat} lng={this.state.jam.location.lng}/></div>\r\n                                </div>\r\n                                {!isEditMode && <div className=\"users-going-section\">\r\n                                    <JamGoingListModal usersGoing={this.state.jam.usersGoing} />\r\n                                    <ul className=\"users-going-con\">\r\n                                        {this.state.jam.usersGoing.slice(this.state.jam.usersGoing.length-4).map(function (user, index) {\r\n                                            return <JamUserPreview key={index} user={user} />\r\n                                        })}\r\n                                    </ul>\r\n                                   \r\n                                    \r\n                                </div>}\r\n                            \r\n                            </div>\r\n                        </div>\r\n                    </div>}\r\n            </section>\r\n        )\r\n    }\r\n}\r\n\r\n\r\nconst mapStateToProps = state => {\r\n    return {\r\n        loggedInUser: state.userModule.loggedInUser,\r\n        jams: state.jamModule.jams\r\n    }\r\n}\r\nconst mapDispatchToProps = {\r\n    loadJams,\r\n    saveJam,\r\n    updateJamGoing\r\n}\r\n\r\nexport const JamDetails = connect(mapStateToProps, mapDispatchToProps)(_JamDetails)","C:\\Users\\moreh\\OneDrive\\שולחן העבודה\\Sprint 4\\jammit\\frontend\\src\\pages\\Home.jsx",[],"C:\\Users\\moreh\\OneDrive\\שולחן העבודה\\Sprint 4\\jammit\\frontend\\src\\pages\\UserSection.jsx",["208"],"import React, { Component } from \"react\";\r\nimport { connect } from \"react-redux\";\r\nimport { loadUsers } from \"../store/actions/userActions\";\r\nimport { loadJams } from \"../store/actions/jamActions\";\r\nimport { UserInfo } from \"../cmps/UserProfile/UserInfo\";\r\nimport { UserTalents } from \"../cmps/UserProfile/UserTalents\";\r\nimport { JamList } from \"../cmps/JamList\";\r\nimport { UserList } from \"../cmps/UserList\";\r\nimport { JamCreate } from \"./JamCreate\";\r\n// import { JamScroll } from \"../cmps/JamScroll\";\r\nimport Loader from \"react-loader-spinner\";\r\n\r\nclass _UserSection extends Component {\r\n\r\n    state = {\r\n        activeTab : 'events'\r\n    }\r\n\r\n    componentDidMount() {\r\n        this.props.loadJams()\r\n        this.props.loadUsers()\r\n    }\r\n\r\n    onTabChoose = (tab)=> {\r\n        this.setState({activeTab: tab})\r\n    }\r\n\r\n    filterJamsByInst = () => {\r\n        return this.props.jams.filter((jam) => {\r\n            const user = jam.usersGoing.find((user) => {\r\n                return user.playing.some((inst) => {\r\n                    return inst === this.props.loggedInUser.talents[0];\r\n                });\r\n            });\r\n            if (!user) return jam;\r\n        });\r\n    };\r\n\r\n    filterMembersByFollow = () => {\r\n        return this.props.users.filter((user) => {\r\n            return user.followers.find(\r\n                (user) => user._id === this.props.loggedInUser._id\r\n            );\r\n        });\r\n    };\r\n\r\n    filterJamsByRegion = () => {\r\n        return this.props.jams.filter((jam) => {\r\n            return (\r\n                jam.location.region === this.props.loggedInUser.location.region\r\n            );\r\n        });\r\n    };\r\n\r\n    filterUserCreatedJams = () => {\r\n        return this.props.jams.filter(jam => jam.createdBy._id === this.props.loggedInUser._id)\r\n    }\r\n\r\n    render() {\r\n        const { jams, loggedInUser } = this.props\r\n        const { activeTab } = this.state\r\n        if (jams.length === 0 )  {\r\n             return <div className=\"loader main-content pos-relative\">\r\n             <Loader type=\"Bars\" color=\"#00475F\" height={200} width={200} timeout={5000} />\r\n           </div>\r\n        }\r\n        return (\r\n            \r\n            <main className=\"main-content user-section flex\">\r\n                <div className=\"user-details-aside flex column\">\r\n                    <UserInfo user={loggedInUser} isUserAdmin={true} />\r\n                    <UserTalents user={loggedInUser} isUserAdmin={true} />\r\n                    <button onClick={()=>this.onTabChoose('create')}>Start A New Jam</button>\r\n                </div>\r\n                <div className=\"filtered-jams section\">\r\n                    <div className=\"user-section-toolbar\">\r\n                        <ul className=\"toolbar-left\">\r\n                            <li onClick={()=>this.onTabChoose('events')} className={activeTab === 'events' ? 'active' : ''}>Explore Jams</li>\r\n                            <li onClick={()=>this.onTabChoose('members')} className={activeTab === 'members' ? 'active' : ''}>Members</li>\r\n                            <li onClick={()=>this.onTabChoose('manage')} className={activeTab === 'manage' ? 'active' : ''}>Manage Your Jams</li>\r\n                        </ul>\r\n                        \r\n                        \r\n                    </div>\r\n                   {activeTab === 'events' && <div>\r\n                        <h1>Jams Without {loggedInUser.talents[0]}</h1>\r\n                        <JamList jams={this.filterJamsByInst()} />\r\n                        <h1>Jams Around {loggedInUser.location.region} Region</h1>\r\n                        <JamList jams={this.filterJamsByRegion()} />\r\n                    </div>}\r\n                    {activeTab === 'members' && <div>\r\n                        <h1>Members You Follow</h1>\r\n                        <UserList users={this.filterMembersByFollow()}/>\r\n                    </div>}\r\n                    {activeTab === 'manage' && this.filterUserCreatedJams().length > 0 ?\r\n                        <div>\r\n                            <h1>Jams Dashboard</h1>\r\n                            <JamList jams={this.filterUserCreatedJams()}/>\r\n                    </div>:\r\n                    activeTab === 'manage' && <h1>You haven't created any jams yet... </h1>\r\n                    }\r\n                    {activeTab === 'create' &&\r\n                        <div>\r\n                            <JamCreate/>\r\n                        </div>\r\n                    }\r\n                </div>\r\n          </main>\r\n       )\r\n    }\r\n}\r\nconst mapStateToProps = (state) => {\r\n    return {\r\n        jams: state.jamModule.jams,\r\n        users: state.userModule.users,\r\n        loggedInUser: state.userModule.loggedInUser,\r\n    };\r\n};\r\nconst mapDispatchToProps = {\r\n    loadJams,\r\n    loadUsers,\r\n};\r\n\r\nexport const UserSection = connect(mapStateToProps, mapDispatchToProps)(_UserSection);","C:\\Users\\moreh\\OneDrive\\שולחן העבודה\\Sprint 4\\jammit\\frontend\\src\\cmps\\MainNav.jsx",[],"C:\\Users\\moreh\\OneDrive\\שולחן העבודה\\Sprint 4\\jammit\\frontend\\src\\pages\\JamExplore.jsx",[],"C:\\Users\\moreh\\OneDrive\\שולחן העבודה\\Sprint 4\\jammit\\frontend\\src\\store\\reducers\\index.js",[],"C:\\Users\\moreh\\OneDrive\\שולחן העבודה\\Sprint 4\\jammit\\frontend\\src\\services\\authService.js",[],"C:\\Users\\moreh\\OneDrive\\שולחן העבודה\\Sprint 4\\jammit\\frontend\\src\\store\\actions\\userActions.js",[],"C:\\Users\\moreh\\OneDrive\\שולחן העבודה\\Sprint 4\\jammit\\frontend\\src\\store\\actions\\jamActions.js",[],"C:\\Users\\moreh\\OneDrive\\שולחן העבודה\\Sprint 4\\jammit\\frontend\\src\\cmps\\UserList.jsx",[],"C:\\Users\\moreh\\OneDrive\\שולחן העבודה\\Sprint 4\\jammit\\frontend\\src\\cmps\\JamList.jsx",[],"C:\\Users\\moreh\\OneDrive\\שולחן העבודה\\Sprint 4\\jammit\\frontend\\src\\services\\mainNavService.js",[],"C:\\Users\\moreh\\OneDrive\\שולחן העבודה\\Sprint 4\\jammit\\frontend\\src\\cmps\\JamScroll.jsx",[],"C:\\Users\\moreh\\OneDrive\\שולחן העבודה\\Sprint 4\\jammit\\frontend\\src\\cmps\\HeroSection.jsx",[],"C:\\Users\\moreh\\OneDrive\\שולחן העבודה\\Sprint 4\\jammit\\frontend\\src\\services\\userService.js",[],"C:\\Users\\moreh\\OneDrive\\שולחן העבודה\\Sprint 4\\jammit\\frontend\\src\\services\\utilService.js",[],"C:\\Users\\moreh\\OneDrive\\שולחן העבודה\\Sprint 4\\jammit\\frontend\\src\\services\\socketService.js",[],"C:\\Users\\moreh\\OneDrive\\שולחן העבודה\\Sprint 4\\jammit\\frontend\\src\\cmps\\JamCreateForm.jsx",[],"C:\\Users\\moreh\\OneDrive\\שולחן העבודה\\Sprint 4\\jammit\\frontend\\src\\services\\jamService.js",["209"],"import { httpService } from './httpService'\r\n// import { storageService } from './asyncStorageService'\r\nimport userService from './userService'\r\n// import { utilService } from './utilService'\r\n// import { userService } from './userService'\r\n\r\nexport const jamService = {\r\n    query,\r\n    getById,\r\n    updateJamGoing,\r\n    save\r\n}\r\n\r\nfunction query(filterBy={}) {\r\n    var queryStr = '?'\r\n    if(filterBy.title) queryStr += `&title=${filterBy.title}`\r\n    if(filterBy.region) queryStr += `&region=${filterBy.region}`\r\n    \r\n    console.log(queryStr);\r\n    \r\n    return httpService.get(`jam${queryStr}`)\r\n    // return jams;\r\n}\r\nfunction save(jam) {\r\n    if (jam._id) {\r\n        // UPDATE\r\n        return httpService.put(`jam/${jam._id}`, jam)\r\n        // return axios.put(`${baseUrl}/${jam._id}`, jam)\r\n        // .then(res => res.data)\r\n    } \r\n    // else {\r\n    //     // CREATE\r\n    //     const newToy = { createdAt: Date.now(), ...jam }\r\n    //     return axios.post(baseUrl, newToy)\r\n    //         .then(res => res.data)\r\n            \r\n    // }\r\n}\r\n// function save(jam) {\r\n//     return httpService.post(`jam`, jam)\r\n// }\r\n\r\nfunction getById(jamId) {\r\n    // return jams.find(jam => jam._id === jamId)\r\n    // return storageService.get('jam', jamId)\r\n    return httpService.get(`jam/${jamId}`)\r\n}\r\n\r\n\r\nfunction updateJamGoing(jamId, user, isGoing) {\r\n    //UPDATE THE SERVER USER IS NOT GOING\r\n    // jams.find(jam => jam._id === jamId).usersGoing.push(user);\r\n     return httpService.put(`jam/${jamId}/isGoing`, {user:  {_id: user._id, fullname: user.fullname, imgUrl: user.imgUrl, playing: user.playing} , isGoing: isGoing})\r\n  \r\n}\r\n\r\n\r\n\r\n\r\n\r\n\r\n","C:\\Users\\moreh\\OneDrive\\שולחן העבודה\\Sprint 4\\jammit\\frontend\\src\\store\\reducers\\reviewReducer.js",[],"C:\\Users\\moreh\\OneDrive\\שולחן העבודה\\Sprint 4\\jammit\\frontend\\src\\store\\reducers\\userReducer.js",[],"C:\\Users\\moreh\\OneDrive\\שולחן העבודה\\Sprint 4\\jammit\\frontend\\src\\store\\reducers\\jamReducer.js",[],"C:\\Users\\moreh\\OneDrive\\שולחן העבודה\\Sprint 4\\jammit\\frontend\\src\\store\\reducers\\systemReducer.js",[],"C:\\Users\\moreh\\OneDrive\\שולחן העבודה\\Sprint 4\\jammit\\frontend\\src\\cmps\\UserProfile\\UserTalents.jsx",[],"C:\\Users\\moreh\\OneDrive\\שולחן העבודה\\Sprint 4\\jammit\\frontend\\src\\cmps\\UserProfile\\UserInfo.jsx",[],"C:\\Users\\moreh\\OneDrive\\שולחן העבודה\\Sprint 4\\jammit\\frontend\\src\\cmps\\UserPreview.jsx",["210","211"],"import { useHistory } from \"react-router-dom\";\r\nimport LocationOnOutlinedIcon from '@material-ui/icons/LocationOnOutlined';\r\nimport { iconService } from '../services/iconService.js'\r\n\r\nexport function UserPreview({ user }) {\r\n\r\n    const history = useHistory()\r\n    return (\r\n        <li className=\"user-card flex column\" onClick={()=>history.push(`/user/${user._id}`)}>\r\n            <div className=\"thumb flex column pos-relative\">\r\n                <div className=\"img-wrapper flex justify-center\">\r\n                    <img className=\"user-card thumb userThumb\" src={user.imgUrl}  alt=\"user-thumbnail\"/>\r\n                    <div className=\"user-inst-icons-wrapper\">\r\n                        {iconService.displayUserIcons(user)}\r\n                    </div>\r\n                </div>\r\n            </div>\r\n            <div className=\"user-card-content flex column\">\r\n                <h2>{user.username}</h2>\r\n                <ul className=\"user-card-tags flex\">{user.tags.map((tag, idx) => {\r\n                    if (idx < 3) return <li key={idx}>{tag}</li> })}\r\n                </ul>\r\n                <p className=\"gray\"><LocationOnOutlinedIcon/>{user.location.city}</p>\r\n            </div>\r\n        </li>\r\n    );\r\n}","C:\\Users\\moreh\\OneDrive\\שולחן העבודה\\Sprint 4\\jammit\\frontend\\src\\cmps\\JamUserPreview.jsx",[],"C:\\Users\\moreh\\OneDrive\\שולחן העבודה\\Sprint 4\\jammit\\frontend\\src\\cmps\\JamGoingModal.jsx",[],"C:\\Users\\moreh\\OneDrive\\שולחן העבודה\\Sprint 4\\jammit\\frontend\\src\\cmps\\StaticMap.jsx",[],"C:\\Users\\moreh\\OneDrive\\שולחן העבודה\\Sprint 4\\jammit\\frontend\\src\\cmps\\JamChat.jsx",[],"C:\\Users\\moreh\\OneDrive\\שולחן העבודה\\Sprint 4\\jammit\\frontend\\src\\services\\httpService.js",[],"C:\\Users\\moreh\\OneDrive\\שולחן העבודה\\Sprint 4\\jammit\\frontend\\src\\cmps\\LoginModal.jsx",[],"C:\\Users\\moreh\\OneDrive\\שולחן העבודה\\Sprint 4\\jammit\\frontend\\src\\cmps\\InviteModal.jsx",["212"],"import { connect } from 'react-redux'\r\nimport ReactModal from 'react-modal';\r\nimport React from 'react';\r\nimport { FriendsInvitePreview } from './InviteFriends'\r\nimport { socketService } from '../services/socketService'\r\n\r\nclass _InviteModal extends React.Component {\r\n\r\n    constructor() {\r\n        super();\r\n        this.state = {\r\n            showModal: false,\r\n            selectAll: false,\r\n            following: [],\r\n            invited: []\r\n        };\r\n\r\n        this.handleOpenModal = this.handleOpenModal.bind(this);\r\n        this.handleCloseModal = this.handleCloseModal.bind(this);\r\n    }\r\n\r\n    handleOpenModal() {\r\n        this.setState({\r\n            showModal: true\r\n        });\r\n    }\r\n\r\n    handleCloseModal() {\r\n        this.props.handleCloseModal()\r\n\r\n    }\r\n    componentWillReceiveProps(nextProps){\r\n        if(nextProps.showModal!==this.state.showModal){\r\n          this.setState({showModal: nextProps.showModal });\r\n        }\r\n        if(nextProps.following!==this.state.following){\r\n            this.setState({following: nextProps.following.map((following) => {\r\n                return {...following,  isChecked: false};\r\n            })})\r\n          }\r\n      }\r\n    componentDidMount() {\r\n        const {invited} = this.state\r\n        document.addEventListener('keyup', (e) => {\r\n            if (e.keyCode === 27) this.handleCloseModal();\r\n        });\r\n        if (this.props.loggedInUser){\r\n            socketService.setup()\r\n            socketService.emit('user connection', this.props.loggedInUser._id);\r\n        }\r\n    }\r\n\r\n    componentWillUnmount(){\r\n        if (this.props.loggedInUser){\r\n            socketService.off('user connection', this.props.loggedInUser._id)\r\n            clearTimeout(this.timeout)\r\n        }\r\n    }\r\n\r\n    handleChange(user, invited) {\r\n        if (invited) {\r\n            let joined = this.state.invited.concat(user)\r\n            this.setState({invited: joined})\r\n        } else {\r\n            let removed = this.state.invited.filter( (userInvited)=> userInvited._id !== user._id)\r\n            this.setState({invited: removed})\r\n        }\r\n    }\r\n\r\n    selectAll () {\r\n        this.setState( {following: this.state.following.map((following) => {\r\n            return {...following, isChecked: true};\r\n        }), invited: this.state.following.slice()});\r\n    }\r\n    sendInvites() {\r\n        const link = `jam/${this.props.jamId}`\r\n        const msg = \r\n            `${this.props.loggedInUser.username} \r\n            has invited you to ${this.props.jamTitle}!!!`\r\n\r\n        this.state.invited.forEach(user=>{\r\n            console.log(user._id);\r\n            socketService.emit('user connection', user._id);\r\n            socketService.emit('invite', { msg, link })\r\n            socketService.emit('user connection', this.props.loggedInUser._id);\r\n        })\r\n    }\r\n    \r\n    render() {\r\n        const customStyles = {\r\n            content: {\r\n                top: '50%',\r\n                left: '50%',\r\n                right: 'auto',\r\n                bottom: 'auto',\r\n                marginRight: '-50%',\r\n                transform: 'translate(-50%, -50%)',\r\n                width: '550px',\r\n                height: '450px'\r\n                \r\n             \r\n\r\n            }\r\n        };\r\n        return (\r\n                <ReactModal\r\n                    isOpen={this.state.showModal}\r\n                    contentLabel=\"invite-modal\"\r\n                    style={customStyles}\r\n                    closeOnEsc={true}\r\n                    ariaHideApp={false}\r\n                >\r\n                    <button className=\"esc-btn-modal\" onClick={this.handleCloseModal}>X</button>\r\n                    <div className=\"invite-modal-title\">\r\n                    <h2>Invite Your Friends!</h2>\r\n                    </div>\r\n                    {/* <input type=\"checkbox\" name=\"select-all-box\" id=\"select-all-box\"></input>\r\n                    <label for=\"select-all-box\">Select All</label> */}\r\n                    <button className=\"select-all-btn\" onClick={() => this.selectAll()}>Select All</button>\r\n                    <div className=\"following-friends-list\">\r\n                   \r\n                    <ul className=\"following-list-con\">\r\n                        {this.state.following && this.state.following.map(function (user, index) {\r\n                            return <FriendsInvitePreview handleChange={this.handleChange.bind(this)}  key={index} user={user} />\r\n                        }.bind(this))}\r\n\r\n                    </ul>\r\n                    </div>\r\n                    <button className=\"send-invites-btn\" onClick={() => this.sendInvites()} >Send Invites</button>\r\n                </ReactModal>\r\n    \r\n        );\r\n    }\r\n}\r\nconst mapStateToProps = state => {\r\n    return {\r\n      loggedInUser: state.userModule.loggedInUser\r\n    }\r\n  }\r\n  const mapDispatchToProps = {\r\n  }\r\n  \r\n  export const InviteModal = connect(mapStateToProps, mapDispatchToProps)(_InviteModal)\r\n","C:\\Users\\moreh\\OneDrive\\שולחן העבודה\\Sprint 4\\jammit\\frontend\\src\\cmps\\InviteFriends.jsx",[],["213","214"],"C:\\Users\\moreh\\OneDrive\\שולחן העבודה\\Sprint 4\\jammit\\frontend\\src\\cmps\\JamPreview.jsx",["215"],"import { iconService } from '../services/iconService.js'\r\nimport { Link } from \"react-router-dom\";\r\nimport LocationOnOutlinedIcon from '@material-ui/icons/LocationOnOutlined';\r\nimport LazyLoad from 'react-lazyload';\r\n\r\nexport function JamPreview({ jam }) {\r\n\r\n    const slotsLeft = jam.capacity - jam.usersGoing.length\r\n    \r\n    return (\r\n    <li className=\"jam-card flex column\">\r\n            <Link to={`/jam/${jam._id}`}>\r\n            <div className=\"thumb-wrapper flex column pos-relative\">\r\n                <LazyLoad height={200}>\r\n                <img className=\"jam-thumb\"  src={jam.thumbUrl} alt=\"jam-thumbnail\"/>\r\n                </LazyLoad>\r\n                <div className=\"inst-icons-wrapper\">\r\n                    {iconService.displayJamIcons(jam)}\r\n                </div>\r\n            </div>\r\n            <div className=\"jam-card-content flex\">\r\n                <div className=\"jam-details-wrapper\">\r\n                    <div className=\"first-row\">\r\n                        <h2>{jam.title}</h2>\r\n                        <div className=\"date\">\r\n                            <span>{new Intl.DateTimeFormat('il', { month: 'short' }).format(new Date(jam.startsAt))} {new Date(jam.startsAt).toLocaleString('he-IL',{day: '2-digit'})}</span>\r\n                        </div>\r\n                    </div>\r\n                    <ul className=\"jam-card-tags flex \">{jam.tags.map((tag, idx) => {\r\n                        return <li key={idx}>{tag}</li> })}\r\n                    </ul>\r\n                    <div className=\"going-wrapper flex\">\r\n                        <div className=\"align-self\">\r\n                            <p className=\"gray-dark\"><LocationOnOutlinedIcon style={{ fontSize: 15 }}/>{jam.location.city}</p>\r\n                        </div>\r\n                        <span className={slotsLeft < 5 ? 'red' : 'green'}>\r\n                                {jam.usersGoing.length}/{jam.capacity} Slots\r\n                        </span>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        </Link>\r\n        </li> \r\n    );\r\n}","C:\\Users\\moreh\\OneDrive\\שולחן העבודה\\Sprint 4\\jammit\\frontend\\src\\cmps\\JamDetailsNavbar.jsx",[],"C:\\Users\\moreh\\OneDrive\\שולחן העבודה\\Sprint 4\\jammit\\frontend\\src\\services\\iconService.js",["216","217"],"import Bass from '../assets/img/inst-icons/Bass.svg'\r\nimport Drums from '../assets/img/inst-icons/Drums.svg'\r\nimport ElectricGuitar from '../assets/img/inst-icons/ElectricGuitar.png'\r\nimport Keyboard from '../assets/img/inst-icons/Keyboard.svg'\r\nimport Singer from '../assets/img/inst-icons/Singer.svg'\r\nimport Saxophone from '../assets/img/inst-icons/Saxophone.svg'\r\nimport Trumpet from '../assets/img/inst-icons/Trumpet.svg'\r\n\r\nconst instIcons = [\r\n    {Bass},\r\n    {Drums},\r\n    {ElectricGuitar},\r\n    {Keyboard},\r\n    {Singer},\r\n    {Saxophone},\r\n    {Trumpet}\r\n]\r\n\r\nfunction displayJamIcons (jam){\r\n    return instIcons.map((icon, idx)=>{\r\n        const user = jam.usersGoing.find(currUser => {\r\n            return currUser.playing.some(inst=>{\r\n                const instName = Object.keys(icon)[0]\r\n                return instName === inst\r\n            })\r\n        })\r\n        if (user) return <div key={idx} className=\"inst-icon\">\r\n            <img src={Object.values(icon)[0]} alt=\"instrument\"/>\r\n        </div>\r\n    })\r\n}\r\n\r\nfunction displayUserIcons(user) {\r\n    return instIcons.map((icon, idx)=>{\r\n        const talent = user.talents.find(talent=>{\r\n            return (talent === Object.keys(icon)[0])\r\n        })\r\n        if (talent) return <img key={idx} className=\"user-inst-icon\" src={Object.values(icon)[0]} alt=\"instrument\"/>\r\n    })\r\n}\r\n\r\nexport const iconService = {\r\n    displayJamIcons,\r\n    displayUserIcons,\r\n}","C:\\Users\\moreh\\OneDrive\\שולחן העבודה\\Sprint 4\\jammit\\frontend\\src\\cmps\\Scrollbar.jsx",[],{"ruleId":"218","replacedBy":"219"},{"ruleId":"220","replacedBy":"221"},{"ruleId":"222","severity":1,"message":"223","line":56,"column":27,"nodeType":"224","messageId":"225","endLine":56,"endColumn":35},{"ruleId":"222","severity":1,"message":"226","line":92,"column":34,"nodeType":"224","messageId":"225","endLine":92,"endColumn":45},{"ruleId":"227","severity":1,"message":"228","line":29,"column":45,"nodeType":"229","messageId":"230","endLine":29,"endColumn":47},{"ruleId":"222","severity":1,"message":"231","line":3,"column":8,"nodeType":"224","messageId":"225","endLine":3,"endColumn":19},{"ruleId":"227","severity":1,"message":"232","line":7,"column":41,"nodeType":"229","messageId":"230","endLine":7,"endColumn":43},{"ruleId":"227","severity":1,"message":"232","line":28,"column":79,"nodeType":"229","messageId":"230","endLine":28,"endColumn":81},{"ruleId":"222","severity":1,"message":"233","line":43,"column":16,"nodeType":"224","messageId":"225","endLine":43,"endColumn":23},{"ruleId":"218","replacedBy":"234"},{"ruleId":"220","replacedBy":"235"},{"ruleId":"227","severity":1,"message":"232","line":8,"column":41,"nodeType":"229","messageId":"230","endLine":8,"endColumn":43},{"ruleId":"227","severity":1,"message":"232","line":20,"column":37,"nodeType":"229","messageId":"230","endLine":20,"endColumn":39},{"ruleId":"227","severity":1,"message":"232","line":34,"column":37,"nodeType":"229","messageId":"230","endLine":34,"endColumn":39},"no-native-reassign",["236"],"no-negated-in-lhs",["237"],"no-unused-vars","'fullname' is assigned a value but never used.","Identifier","unusedVar","'isUserAdmin' is assigned a value but never used.","array-callback-return","Array.prototype.filter() expects a value to be returned at the end of arrow function.","ArrowFunctionExpression","expectedAtEnd","'userService' is defined but never used.","Array.prototype.map() expects a value to be returned at the end of arrow function.","'invited' is assigned a value but never used.",["236"],["237"],"no-global-assign","no-unsafe-negation"]