[{"/Users/evyatarmintz/Desktop/jammit/frontend/src/index.js":"1","/Users/evyatarmintz/Desktop/jammit/frontend/src/serviceWorkerRegistration.js":"2","/Users/evyatarmintz/Desktop/jammit/frontend/src/reportWebVitals.js":"3","/Users/evyatarmintz/Desktop/jammit/frontend/src/store/store.js":"4","/Users/evyatarmintz/Desktop/jammit/frontend/src/App.jsx":"5","/Users/evyatarmintz/Desktop/jammit/frontend/src/pages/Home.jsx":"6","/Users/evyatarmintz/Desktop/jammit/frontend/src/pages/LoginSignup.jsx":"7","/Users/evyatarmintz/Desktop/jammit/frontend/src/pages/UserProfile.jsx":"8","/Users/evyatarmintz/Desktop/jammit/frontend/src/pages/JamDetails.jsx":"9","/Users/evyatarmintz/Desktop/jammit/frontend/src/pages/JamExplore.jsx":"10","/Users/evyatarmintz/Desktop/jammit/frontend/src/pages/MembersList.jsx":"11","/Users/evyatarmintz/Desktop/jammit/frontend/src/cmps/MainNav.jsx":"12","/Users/evyatarmintz/Desktop/jammit/frontend/src/pages/JamCreate.jsx":"13","/Users/evyatarmintz/Desktop/jammit/frontend/src/pages/UserSection.jsx":"14","/Users/evyatarmintz/Desktop/jammit/frontend/src/store/reducers/index.js":"15","/Users/evyatarmintz/Desktop/jammit/frontend/src/cmps/UserList.jsx":"16","/Users/evyatarmintz/Desktop/jammit/frontend/src/cmps/JamScroll.jsx":"17","/Users/evyatarmintz/Desktop/jammit/frontend/src/cmps/HeroSection.jsx":"18","/Users/evyatarmintz/Desktop/jammit/frontend/src/cmps/JamPreview.jsx":"19","/Users/evyatarmintz/Desktop/jammit/frontend/src/cmps/LoaderSpinner.jsx":"20","/Users/evyatarmintz/Desktop/jammit/frontend/src/cmps/JamList.jsx":"21","/Users/evyatarmintz/Desktop/jammit/frontend/src/store/actions/jamActions.js":"22","/Users/evyatarmintz/Desktop/jammit/frontend/src/store/actions/userActions.js":"23","/Users/evyatarmintz/Desktop/jammit/frontend/src/services/authService.js":"24","/Users/evyatarmintz/Desktop/jammit/frontend/src/services/mainNavService.js":"25","/Users/evyatarmintz/Desktop/jammit/frontend/src/services/userService.js":"26","/Users/evyatarmintz/Desktop/jammit/frontend/src/services/jamService.js":"27","/Users/evyatarmintz/Desktop/jammit/frontend/src/services/utilService.js":"28","/Users/evyatarmintz/Desktop/jammit/frontend/src/cmps/UserPreview.jsx":"29","/Users/evyatarmintz/Desktop/jammit/frontend/src/cmps/MapContainer.jsx":"30","/Users/evyatarmintz/Desktop/jammit/frontend/src/cmps/JamDetailsNavbar.jsx":"31","/Users/evyatarmintz/Desktop/jammit/frontend/src/cmps/JamUserPreview.jsx":"32","/Users/evyatarmintz/Desktop/jammit/frontend/src/cmps/JamGoingModal.jsx":"33","/Users/evyatarmintz/Desktop/jammit/frontend/src/assets/img/inst-icons/icons.js":"34","/Users/evyatarmintz/Desktop/jammit/frontend/src/cmps/JamCreateForm.jsx":"35","/Users/evyatarmintz/Desktop/jammit/frontend/src/store/reducers/userReducer.js":"36","/Users/evyatarmintz/Desktop/jammit/frontend/src/store/reducers/reviewReducer.js":"37","/Users/evyatarmintz/Desktop/jammit/frontend/src/store/reducers/systemReducer.js":"38","/Users/evyatarmintz/Desktop/jammit/frontend/src/store/reducers/jamReducer.js":"39","/Users/evyatarmintz/Desktop/jammit/frontend/src/cmps/UserProfile/UserInfo.jsx":"40","/Users/evyatarmintz/Desktop/jammit/frontend/src/cmps/UserProfile/UserTalents.jsx":"41","/Users/evyatarmintz/Desktop/jammit/frontend/src/services/httpService.js":"42","/Users/evyatarmintz/Desktop/jammit/frontend/src/cmps/InviteModal.jsx":"43","/Users/evyatarmintz/Desktop/jammit/frontend/src/cmps/LoginModal.jsx":"44","/Users/evyatarmintz/Desktop/jammit/frontend/src/cmps/InviteFriends.jsx":"45","/Users/evyatarmintz/Desktop/jammit/frontend/src/cmps/StaticMap.jsx":"46","/Users/evyatarmintz/Desktop/jammit/frontend/src/pages/JamsList.jsx":"47","/Users/evyatarmintz/Desktop/jammit/frontend/src/services/socketService.js":"48"},{"size":910,"mtime":1610196596000,"results":"49","hashOfConfig":"50"},{"size":5064,"mtime":499162500000,"results":"51","hashOfConfig":"50"},{"size":364,"mtime":499162500000,"results":"52","hashOfConfig":"50"},{"size":323,"mtime":1609071193000,"results":"53","hashOfConfig":"50"},{"size":1382,"mtime":1611168238796,"results":"54","hashOfConfig":"50"},{"size":2929,"mtime":1611262657523,"results":"55","hashOfConfig":"50"},{"size":4731,"mtime":1610982187179,"results":"56","hashOfConfig":"50"},{"size":2935,"mtime":1611229389904,"results":"57","hashOfConfig":"50"},{"size":7805,"mtime":1611229389898,"results":"58","hashOfConfig":"50"},{"size":15113,"mtime":1611263858377,"results":"59","hashOfConfig":"50"},{"size":3060,"mtime":1611229389901,"results":"60","hashOfConfig":"50"},{"size":1837,"mtime":1611261159325,"results":"61","hashOfConfig":"50"},{"size":1723,"mtime":1610878828751,"results":"62","hashOfConfig":"50"},{"size":4519,"mtime":1611229389907,"results":"63","hashOfConfig":"50"},{"size":396,"mtime":1610546436417,"results":"64","hashOfConfig":"50"},{"size":268,"mtime":1610807381185,"results":"65","hashOfConfig":"50"},{"size":1341,"mtime":1611230551048,"results":"66","hashOfConfig":"50"},{"size":1403,"mtime":1611233621598,"results":"67","hashOfConfig":"50"},{"size":2402,"mtime":1611229389947,"results":"68","hashOfConfig":"50"},{"size":485,"mtime":1611075733228,"results":"69","hashOfConfig":"50"},{"size":258,"mtime":1611066595840,"results":"70","hashOfConfig":"50"},{"size":1432,"mtime":1611229389932,"results":"71","hashOfConfig":"50"},{"size":1628,"mtime":1611263402159,"results":"72","hashOfConfig":"50"},{"size":1539,"mtime":1610560658938,"results":"73","hashOfConfig":"50"},{"size":1538,"mtime":1611229389908,"results":"74","hashOfConfig":"50"},{"size":2017,"mtime":1611229389908,"results":"75","hashOfConfig":"50"},{"size":1185,"mtime":1611228900173,"results":"76","hashOfConfig":"50"},{"size":1052,"mtime":1610708489092,"results":"77","hashOfConfig":"50"},{"size":1476,"mtime":1611147595025,"results":"78","hashOfConfig":"50"},{"size":1010,"mtime":1611062130197,"results":"79","hashOfConfig":"50"},{"size":2609,"mtime":1611263858361,"results":"80","hashOfConfig":"50"},{"size":635,"mtime":1611011462424,"results":"81","hashOfConfig":"50"},{"size":2849,"mtime":1611089830986,"results":"82","hashOfConfig":"50"},{"size":335,"mtime":1610751806747,"results":"83","hashOfConfig":"50"},{"size":5112,"mtime":1611096704711,"results":"84","hashOfConfig":"50"},{"size":849,"mtime":1611263424956,"results":"85","hashOfConfig":"50"},{"size":669,"mtime":1609956874000,"results":"86","hashOfConfig":"50"},{"size":322,"mtime":1609071005000,"results":"87","hashOfConfig":"50"},{"size":1040,"mtime":1611226567649,"results":"88","hashOfConfig":"50"},{"size":1812,"mtime":1611229389889,"results":"89","hashOfConfig":"50"},{"size":1002,"mtime":1611229389892,"results":"90","hashOfConfig":"50"},{"size":1081,"mtime":1611095239674,"results":"91","hashOfConfig":"50"},{"size":2725,"mtime":1611263858359,"results":"92","hashOfConfig":"50"},{"size":1615,"mtime":1611229389878,"results":"93","hashOfConfig":"50"},{"size":824,"mtime":1611263858356,"results":"94","hashOfConfig":"50"},{"size":453,"mtime":1611229389885,"results":"95","hashOfConfig":"50"},{"size":4266,"mtime":1611226597893,"results":"96","hashOfConfig":"50"},{"size":1628,"mtime":1609425218000,"results":"97","hashOfConfig":"50"},{"filePath":"98","messages":"99","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"100"},"1noxppp",{"filePath":"101","messages":"102","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"100"},{"filePath":"103","messages":"104","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"100"},{"filePath":"105","messages":"106","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"100"},{"filePath":"107","messages":"108","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"100"},{"filePath":"109","messages":"110","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"111","messages":"112","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"100"},{"filePath":"113","messages":"114","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"100"},{"filePath":"115","messages":"116","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"117","usedDeprecatedRules":"100"},{"filePath":"118","messages":"119","errorCount":1,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"120","messages":"121","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"122","usedDeprecatedRules":"100"},{"filePath":"123","messages":"124","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"125","messages":"126","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"100"},{"filePath":"127","messages":"128","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"129","usedDeprecatedRules":"100"},{"filePath":"130","messages":"131","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"100"},{"filePath":"132","messages":"133","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"100"},{"filePath":"134","messages":"135","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"100"},{"filePath":"136","messages":"137","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"100"},{"filePath":"138","messages":"139","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"140","usedDeprecatedRules":"100"},{"filePath":"141","messages":"142","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"143"},{"filePath":"144","messages":"145","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"100"},{"filePath":"146","messages":"147","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"148","usedDeprecatedRules":"100"},{"filePath":"149","messages":"150","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"151","messages":"152","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"100"},{"filePath":"153","messages":"154","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"100"},{"filePath":"155","messages":"156","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"100"},{"filePath":"157","messages":"158","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"159","usedDeprecatedRules":"100"},{"filePath":"160","messages":"161","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"100"},{"filePath":"162","messages":"163","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"164","usedDeprecatedRules":"100"},{"filePath":"165","messages":"166","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"143"},{"filePath":"167","messages":"168","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"100"},{"filePath":"169","messages":"170","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"100"},{"filePath":"171","messages":"172","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"100"},{"filePath":"173","messages":"174","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"100"},{"filePath":"175","messages":"176","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"100"},{"filePath":"177","messages":"178","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"179","messages":"180","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"100"},{"filePath":"181","messages":"182","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"100"},{"filePath":"183","messages":"184","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"100"},{"filePath":"185","messages":"186","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"187","usedDeprecatedRules":"100"},{"filePath":"188","messages":"189","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"190","usedDeprecatedRules":"100"},{"filePath":"191","messages":"192","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"100"},{"filePath":"193","messages":"194","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"100"},{"filePath":"195","messages":"196","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"100"},{"filePath":"197","messages":"198","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"100"},{"filePath":"199","messages":"200","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"201","usedDeprecatedRules":"100"},{"filePath":"202","messages":"203","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"100"},{"filePath":"204","messages":"205","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"100"},"/Users/evyatarmintz/Desktop/jammit/frontend/src/index.js",[],["206","207"],"/Users/evyatarmintz/Desktop/jammit/frontend/src/serviceWorkerRegistration.js",[],"/Users/evyatarmintz/Desktop/jammit/frontend/src/reportWebVitals.js",[],"/Users/evyatarmintz/Desktop/jammit/frontend/src/store/store.js",[],"/Users/evyatarmintz/Desktop/jammit/frontend/src/App.jsx",[],"/Users/evyatarmintz/Desktop/jammit/frontend/src/pages/Home.jsx",[],"/Users/evyatarmintz/Desktop/jammit/frontend/src/pages/LoginSignup.jsx",[],"/Users/evyatarmintz/Desktop/jammit/frontend/src/pages/UserProfile.jsx",[],"/Users/evyatarmintz/Desktop/jammit/frontend/src/pages/JamDetails.jsx",["208"],"import React, { Component } from 'react'\nimport { jamService } from '../services/jamService'\nimport RoomRoundedIcon from '@material-ui/icons/RoomRounded';\nimport AccessTimeRoundedIcon from '@material-ui/icons/AccessTimeRounded';\nimport PeopleAltRoundedIcon from '@material-ui/icons/PeopleAltRounded';\nimport EmojiPeopleRoundedIcon from '@material-ui/icons/EmojiPeopleRounded';\n// import { MapContainer } from '../cmps/MapContainer';\nimport { JamUserPreview } from '../cmps/JamUserPreview';\nimport { utilService } from '../services/utilService';\nimport { Link } from 'react-router-dom';\nimport { JamNavbar } from '../cmps/JamDetailsNavbar';\nimport JamGoingListModal from '../cmps/JamGoingModal';\nimport { connect } from 'react-redux';\nimport { updateJamGoing, loadJams, saveJam } from '../store/actions/jamActions.js';\nimport {StaticMap} from '../cmps/StaticMap'\n// import { jamGoingListModal } from '../cmps/JamGoingModal'\n// import { loadJams } from '../store/actions/jamActions'\nimport HourglassEmptyRoundedIcon from '@material-ui/icons/HourglassEmptyRounded';\nimport Loader from 'react-loader-spinner';\n\nconst emptyJam = {\n    title: \"\",\n    description: \"\",\n    imgUrl: \"http://some-img\",\n    capacity: null,\n    location: {\n        region: \"\",\n        city: \"\",\n        address: \"\",\n        lat: null,\n        lng: null\n    },\n    createdBy: {},\n    startsAt: null,\n    tags: [],\n    createdAt: null,\n    usersGoing: []\n}\n\nclass _JamDetails extends Component {\n    state = {\n        jam: null,\n        isUserAdmin: false,\n        isEditMode: false\n    }\n\n\n    async componentDidMount() {\n        this.props.loadJams()\n        if (this.props.isEditMode) {\n            this.setState({ jam: emptyJam, isEditMode: true, isUserAdmin: true })\n        }\n        else {\n            const jam = await jamService.getById(this.props.match.params.id);\n            this.setState({ jam }, () => {\n                this.checkIfUserHost()\n            })\n        }\n    }\n\n    componentWillReceiveProps(props) {\n        if (props.isSubmit) {\n            const miniUser = {}\n            miniUser._id = this.props.loggedInUser._id\n            miniUser.fullname = this.props.loggedInUser.fullname\n            miniUser.imgUrl = this.props.loggedInUser.imgUrl\n            miniUser.playing = this.props.loggedInUser.talents\n            // this.props.saveJam(this.state.jam, miniUser)\n            this.props.jamSaved()\n        }\n        this.setState({ jam: props.jam })\n    }\n\n    componentDidUpdate(prevProps) {\n        if (this.state.isEditMode) return\n        if (this.props.jams !== prevProps.jams) {\n            this.setState({ jam: this.props.jams.find(jam => jam._id === this.props.match.params.id) });\n        }\n    }\n\n    checkIfUserHost = () => {\n        if (!this.props.loggedInUser) return\n        if (this.props.loggedInUser._id === this.state.jam.createdBy._id) {\n            this.setState({ isUserAdmin: true })\n        }\n    }\n\n    render() {\n        const { jam, isEditMode, isUserAdmin } = this.state\n        return (\n            <section className=\"jam-details\">\n                {!this.state.jam && <div className=\"loader main-content pos-relative\">\n                    <Loader type=\"Bars\" color=\"#00475F\" height={200} width={200} timeout={5000} />\n                </div>}\n                {this.state.jam &&\n                    <div className=\"page-con main-container\">\n                        <div className=\"jam-top full\" >\n                             <div className=\"jam-image\" style={{\n                                 backgroundImage: 'url('+ this.state.jam.imgUrl +')'                     \n                             }} ></div>\n                            <h1 className=\"jam-title\">{this.state.jam.title}</h1>\n                        </div>\n                        {!this.state.isEditMode && <div>\n                            <JamNavbar\n                                history={this.props.history}\n                                user={this.props.loggedInUser}\n                                jam={this.state.jam}\n                                updateJamGoing={this.props.updateJamGoing}\n                                isUserAdmin={this.state.isUserAdmin}\n                            />\n                        </div>}\n                        <div className=\"page-content\">\n                            <div className=\"left-page-details\">\n                                <div className=\"details-con\">\n                                    <h3 className=\"title-style\">Details</h3>\n                                    <p><span className=\"icon-style\"><HourglassEmptyRoundedIcon /></span><span className=\"details-style\">{this.state.jam.capacity - this.state.jam.usersGoing.length} Slots Available</span></p>\n                                    <p><span className=\"icon-style\"><PeopleAltRoundedIcon /></span> <span className=\"details-style\">{this.state.jam.usersGoing.length} People going</span></p>\n                                    {!isEditMode && <p><span className=\"icon-style\"><EmojiPeopleRoundedIcon /></span> <span className=\"details-style\">Created by <Link to={\"/user/\" + this.state.jam.createdBy._id} > {this.state.jam.createdBy.fullname}</Link></span></p>}\n                                    <p><span className=\"icon-style\"><RoomRoundedIcon /></span> <span className=\"details-style\">{this.state.jam.location.address}, {this.state.jam.location.city}</span></p>\n                                    <p><span className=\"icon-style\"><AccessTimeRoundedIcon /></span> <span className=\"details-style\">{utilService.getFormattedDate(this.state.jam.startsAt)}</span></p>\n                                    <div className=\"description-con\">\n                                        <h3 className=\"title-style\">Description</h3>\n                                        <p>{this.state.jam.description}</p>\n                                    </div>\n                                        <ul className=\"jam-card-tags flex\">{jam.tags.map((tag, idx) => {\n                                            return <li key={idx}>{tag}</li>\n                                        })}\n                                        </ul>                               \n                                </div>\n                            </div>\n                            <div className=\"left-page-con\">\n                                <div className=\"location-con\">\n                                    <h3 className=\"title-style\">Location</h3>\n                                    {/* <div><MapContainer lat={this.state.jam.location.lat} lng={this.state.jam.location.lng} /></div> */}\n                                    <div><StaticMap lat={this.state.jam.location.lat} lng={this.state.jam.location.lng}/></div>\n                                </div>\n                                {!isEditMode && <div className=\"users-going-con-section\">\n                                    <ul className=\"users-going-con\">\n                                        {this.state.jam.usersGoing.slice(0, 3).map(function (user, index) {\n                                            return <JamUserPreview key={index} user={user} />\n                                        })}\n\n                                    </ul>\n                                    <div className=\"users-going-actions\"> <JamGoingListModal usersGoing={this.state.jam.usersGoing} /> </div>\n                                </div>}\n                            </div>\n                        </div>\n                    </div>}\n            </section>\n        )\n    }\n}\n\n\nconst mapStateToProps = state => {\n    return {\n        loggedInUser: state.userModule.loggedInUser,\n        jams: state.jamModule.jams\n    }\n}\nconst mapDispatchToProps = {\n    loadJams,\n    saveJam,\n    updateJamGoing\n}\n\nexport const JamDetails = connect(mapStateToProps, mapDispatchToProps)(_JamDetails)","/Users/evyatarmintz/Desktop/jammit/frontend/src/pages/JamExplore.jsx",["209"],"/Users/evyatarmintz/Desktop/jammit/frontend/src/pages/MembersList.jsx",["210"],"import React, { Component } from 'react'\nimport { connect } from 'react-redux'\nimport { UserList } from '../cmps/UserList'\nimport { loadUsers } from '../store/actions/userActions'\nimport SearchRoundedIcon from '@material-ui/icons/SearchRounded';\nimport Loader from 'react-loader-spinner';\n\nclass _MembersList extends Component {\n    \n    state = {\n        filterBy: {\n            username: ''\n        }\n    }\n\n    componentDidMount() {\n        this.props.loadUsers()\n    }\n\n    handleChange = (ev) => {\n        const filterBy = { ...this.state.filterBy };\n        filterBy[ev.target.name] = ev.target.value;\n        this.setState({ filterBy }, ()=> {\n            this.props.loadUsers(this.state.filterBy)\n        });\n    };\n\n    render() {\n        const { users } = this.props\n        if (!users) {\n            return <div className=\"loader main-content pos-relative\">\n              <Loader type=\"Bars\" color=\"#00475F\" height={200} width={200} timeout={5000} />\n           </div>}\n        return (\n            <section>\n                <div className=\"search-area flex justify-center\">\n                    <div className=\"input-box\">\n                        <SearchRoundedIcon className=\"search-icon\" />\n                        <input name=\"username\" \n                                type=\"text\" \n                                className=\"fs18\" \n                                placeholder=\"Looking for someone?\" \n                                name=\"username\"\n                                onChange={this.handleChange}/>\n                    </div>\n                </div>\n                <div className=\"members-container\">\n                    <UserList users={users} />\n                </div>\n            </section>\n        )\n    }\n}\n\nconst mapStateToProps = state => {\n    return {\n        //   jams: state.jamModule.jams,\n        users: state.userModule.users,\n        // loggedInUser: state.userModule.loggedInUser\n    }\n}\nconst mapDispatchToProps = {\n    // loadJams,\n    loadUsers,\n}\n\nexport const MembersList = connect(mapStateToProps, mapDispatchToProps)(_MembersList)\n","/Users/evyatarmintz/Desktop/jammit/frontend/src/cmps/MainNav.jsx",["211","212"],"/Users/evyatarmintz/Desktop/jammit/frontend/src/pages/JamCreate.jsx",[],"/Users/evyatarmintz/Desktop/jammit/frontend/src/pages/UserSection.jsx",["213","214"],"import React, { Component } from \"react\";\nimport { connect } from \"react-redux\";\nimport { loadUsers } from \"../store/actions/userActions\";\nimport { loadJams } from \"../store/actions/jamActions\";\nimport { UserInfo } from \"../cmps/UserProfile/UserInfo\";\nimport { UserTalents } from \"../cmps/UserProfile/UserTalents\";\nimport { JamList } from \"../cmps/JamList\";\nimport { UserList } from \"../cmps/UserList\";\nimport { JamCreate } from \"./JamCreate\";\nimport { JamScroll } from \"../cmps/JamScroll\";\n\nclass _UserSection extends Component {\n\n    state = {\n        activeTab : 'events'\n    }\n\n    componentDidMount() {\n        this.props.loadJams()\n        this.props.loadUsers()\n    }\n\n    onTabChoose = (tab)=> {\n        this.setState({activeTab: tab})\n    }\n\n    filterJamsByInst = () => {\n        return this.props.jams.filter((jam) => {\n            const user = jam.usersGoing.find((user) => {\n                return user.playing.some((inst) => {\n                    return inst === this.props.loggedInUser.talents[0];\n                });\n            });\n            if (!user) return jam;\n        });\n    };\n\n    filterMembersByFollow = () => {\n        return this.props.users.filter((user) => {\n            return user.followers.find(\n                (user) => user._id === this.props.loggedInUser._id\n            );\n        });\n    };\n\n    filterJamsByRegion = () => {\n        return this.props.jams.filter((jam) => {\n            return (\n                jam.location.region === this.props.loggedInUser.location.region\n            );\n        });\n    };\n\n    filterUserCreatedJams = () => {\n        return this.props.jams.filter(jam => jam.createdBy._id === this.props.loggedInUser._id)\n    }\n\n    render() {\n        const { jams, loggedInUser } = this.props\n        const { activeTab } = this.state\n        if (jams.length === 0 ) return <h2>loading...</h2>\n        return (\n            \n            <main className=\"main-content user-section flex\">\n                <div className=\"user-details-aside flex column\">\n                    <UserInfo user={loggedInUser} isUserAdmin={true} />\n                    <UserTalents user={loggedInUser} isUserAdmin={true} />\n                    <button onClick={()=>this.onTabChoose('create')}>Start A New Jam</button>\n                </div>\n                <div className=\"filtered-jams section\">\n                    <div className=\"user-section-toolbar\">\n                        <ul className=\"toolbar-left\">\n                            <li onClick={()=>this.onTabChoose('events')} className={activeTab === 'events' ? 'active' : ''}>Explore Jams</li>\n                            <li onClick={()=>this.onTabChoose('members')} className={activeTab === 'members' ? 'active' : ''}>Members</li>\n                            <li onClick={()=>this.onTabChoose('manage')} className={activeTab === 'manage' ? 'active' : ''}>Manage Your Jams</li>\n                        </ul>\n                        \n                        \n                    </div>\n                   {activeTab === 'events' && <div>\n                        <h1>Jams Without {loggedInUser.talents[0]}</h1>\n                        <JamList jams={this.filterJamsByInst()} />\n                        <h1>Jams Around {loggedInUser.location.region} Region</h1>\n                        <JamList jams={this.filterJamsByRegion()} />\n                    </div>}\n                    {activeTab === 'members' && <div>\n                        <h1>Members You Follow</h1>\n                        <UserList users={this.filterMembersByFollow()}/>\n                    </div>}\n                    {activeTab === 'manage' && this.filterUserCreatedJams().length > 0 && \n                        <div>\n                            <h1>Jams Dashboard</h1>\n                            <JamList users={this.this.filterUserCreatedJams()}/>\n                    </div>}\n                    {activeTab === 'manage' && <h1>You haven't created any jams yet... </h1>\n                    }\n                    {activeTab === 'create' &&\n                        <div>\n                            <JamCreate/>\n                        </div>\n                    }\n                </div>\n          </main>\n       )\n    }\n}\nconst mapStateToProps = (state) => {\n    return {\n        jams: state.jamModule.jams,\n        users: state.userModule.users,\n        loggedInUser: state.userModule.loggedInUser,\n    };\n};\nconst mapDispatchToProps = {\n    loadJams,\n    loadUsers,\n};\n\nexport const UserSection = connect(mapStateToProps, mapDispatchToProps)(_UserSection);","/Users/evyatarmintz/Desktop/jammit/frontend/src/store/reducers/index.js",[],"/Users/evyatarmintz/Desktop/jammit/frontend/src/cmps/UserList.jsx",[],"/Users/evyatarmintz/Desktop/jammit/frontend/src/cmps/JamScroll.jsx",[],"/Users/evyatarmintz/Desktop/jammit/frontend/src/cmps/HeroSection.jsx",[],"/Users/evyatarmintz/Desktop/jammit/frontend/src/cmps/JamPreview.jsx",["215"],"import LocationOnIcon from '@material-ui/icons/LocationOn';\nimport {instIcons} from '../assets/img/inst-icons/icons.js'\nimport { Link } from \"react-router-dom\";\nimport LocationOnOutlinedIcon from '@material-ui/icons/LocationOnOutlined';\nexport function JamPreview({ jam }) {\n\n    function showIcons (){\n\n        return instIcons.map(icon=>{\n            const user = jam.usersGoing.find(user => {\n                return user.playing.some(inst=>{\n                    const instName = Object.keys(icon)[0]\n                    return instName === inst\n                })\n            })\n            if (user) return <img className=\"inst-icon\" src={Object.values(icon)[0]} alt=\"instrument\"/>\n        })\n    }\n    const slotsLeft = jam.capacity - jam.usersGoing.length\n    \n    return (\n        <Link to={`/jam/${jam._id}`}><li className=\"jam-card flex column\">\n            <div className=\"thumb-wrapper flex column pos-relative\">\n                <img className=\"jam-thumb\" src={jam.imgUrl} alt=\"jam-thumbnail\"/>\n                <div className=\"inst-icons-wrapper\">\n                    {showIcons()}\n                </div>\n            </div>\n            <h2>{jam.title}</h2>\n            <div className=\"jam-card-content flex\">\n                <div className=\"date-wrapper\">\n                    <div className=\"date-month\">\n                        {new Intl.DateTimeFormat('il', { month: 'short' }).format(new Date(jam.startsAt))}\n                    </div>\n                    <div className=\"date-day\">\n                        \n                        {new Date(jam.startsAt).toLocaleString('he-IL',{day: '2-digit'})}\n                    </div>\n                </div>\n                <div className=\"jam-details-wrapper\">         \n                    <ul className=\"jam-card-tags flex\">{jam.tags.map((tag, idx) => {\n                        return <li key={idx}>{tag}</li> })}\n                    </ul>\n                    <div className=\"going-wrapper flex\">\n                        <div>\n                            <p><LocationOnOutlinedIcon style={{ fontSize: 15 }}/>{jam.location.city}</p>\n                        </div>\n                        <span className={slotsLeft < 5 ? 'red' : 'green'}>\n                                {jam.usersGoing.length}/{jam.capacity} Slots\n                        </span>\n                    </div>\n                </div>\n            </div>\n        </li></Link> \n    );\n}","/Users/evyatarmintz/Desktop/jammit/frontend/src/cmps/LoaderSpinner.jsx",[],["216","217"],"/Users/evyatarmintz/Desktop/jammit/frontend/src/cmps/JamList.jsx",[],"/Users/evyatarmintz/Desktop/jammit/frontend/src/store/actions/jamActions.js",["218"],"import { jamService } from '../../services/jamService'\n\nexport function loadJams(filterBy) {\n  return async dispatch => {\n    try {\n      const jams = await jamService.query(filterBy)\n      dispatch({ type: 'SET_JAMS', jams })\n\n    } catch (err) {\n      console.log('JamActions: err in loadJams', err)\n    }\n  }\n}\n\nexport function saveJam(jam, creatingUser) {\n  return async dispatch => {\n    try {\n      jam.createdAt = Date.now()\n      jam.createdBy = creatingUser\n      jam.usersGoing.push(creatingUser)\n      console.log(creatingUser);\n      \n      jam = await jamService.save(jam)\n      dispatch({ type: 'ADD_JAM', jam })\n    } catch (err) {\n      console.log('JamActions: err in saveJam', err)\n    }\n  }\n}\n\n\n\nexport function updateJamGoing(jam, user, isGoing) {\n  return async dispatch => {\n    try {\n     jamService.updateJamGoing(jam._id, user, isGoing);\n      if (isGoing) {\n        dispatch({ type: 'UPDATE_JAM_IS_GOING', data:  {jam: jam, user: user} });\n      } else {\n        dispatch({ type: 'UPDATE_JAM_IS_NOT_GOING', data:  {jam: jam, user: user} });\n      }\n     \n\n    } catch (err) {\n      console.log('JamActions: err in loadJams', err)\n    }\n  }\n}\n\n\nfunction makeId(length = 6) {\n  var txt = '';\n  var possible = 'ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789';\n\n  for (var i = 0; i < length; i++) {\n      txt += possible.charAt(Math.floor(Math.random() * possible.length));\n  }\n\n  return txt;\n}","/Users/evyatarmintz/Desktop/jammit/frontend/src/store/actions/userActions.js",[],"/Users/evyatarmintz/Desktop/jammit/frontend/src/services/authService.js",[],"/Users/evyatarmintz/Desktop/jammit/frontend/src/services/mainNavService.js",[],"/Users/evyatarmintz/Desktop/jammit/frontend/src/services/userService.js",[],"/Users/evyatarmintz/Desktop/jammit/frontend/src/services/jamService.js",["219"],"import { httpService } from './httpService'\n// import { storageService } from './asyncStorageService'\nimport userService from './userService'\n// import { utilService } from './utilService'\n// import { userService } from './userService'\n\nexport const jamService = {\n    query,\n    getById,\n    updateJamGoing,\n    // save\n}\n\nfunction query(filterBy={}) {\n    var queryStr = '?'\n    if(filterBy.title) queryStr += `&title=${filterBy.title}`\n    if(filterBy.region) queryStr += `&region=${filterBy.region}`\n    \n    console.log(queryStr);\n    \n    return httpService.get(`jam${queryStr}`)\n    // return jams;\n}\n\n// function save(jam) {\n//     return httpService.post(`jam`, jam)\n// }\n\nfunction getById(jamId) {\n    // return jams.find(jam => jam._id === jamId)\n    // return storageService.get('jam', jamId)\n    return httpService.get(`jam/${jamId}`)\n}\n\n\nfunction updateJamGoing(jamId, user, isGoing) {\n    //UPDATE THE SERVER USER IS NOT GOING\n    // jams.find(jam => jam._id === jamId).usersGoing.push(user);\n     return httpService.put(`jam/${jamId}/isGoing`, {user:  {_id: user._id, fullname: user.fullname, imgUrl: user.imgUrl, playing: user.playing} , isGoing: isGoing})\n  \n}\n\n\n\n\n\n\n","/Users/evyatarmintz/Desktop/jammit/frontend/src/services/utilService.js",[],"/Users/evyatarmintz/Desktop/jammit/frontend/src/cmps/UserPreview.jsx",["220","221","222"],"import { useHistory } from \"react-router-dom\";\nimport LocationOnIcon from '@material-ui/icons/LocationOn';\nimport {instIcons} from '../assets/img/inst-icons/icons.js'\n\nexport function UserPreview({ user }) {\n\n    function showIcons() {\n        return instIcons.map((icon, idx)=>{\n            const talent = user.talents.find(talent=>{\n                return (talent === Object.keys(icon)[0])\n            })\n            if (talent) return <img key={idx} className=\"user-inst-icon\" src={Object.values(icon)[0]} alt=\"instrument\"/>\n        })\n    }\n\n    const history = useHistory()\n    return (\n        <li className=\"user-card flex column\" onClick={()=>history.push(`/user/${user._id}`)}>\n            <div className=\"thumb flex column pos-relative\">\n                <div className=\"img-wrapper flex justify-center\">\n                    <img className=\"user-card thumb\" src={user.imgUrl} className=\"userThumb\" alt=\"user-thumbnail\"/>\n                    <div className=\"user-inst-icons-wrapper\">\n                        {showIcons()}\n                    </div>\n                </div>\n            </div>\n            <div className=\"user-card-content flex column\">\n                <h2>{user.username}</h2>\n                <ul className=\"user-card-tags flex\">{user.tags.map((tag, idx) => {\n                    if (idx < 3) return <li key={idx}>{tag}</li> })}\n                </ul>\n                <p><LocationOnIcon/>{user.location.city}</p>\n            </div>\n        </li>\n    );\n}","/Users/evyatarmintz/Desktop/jammit/frontend/src/cmps/MapContainer.jsx",[],"/Users/evyatarmintz/Desktop/jammit/frontend/src/cmps/JamDetailsNavbar.jsx",[],"/Users/evyatarmintz/Desktop/jammit/frontend/src/cmps/JamUserPreview.jsx",[],"/Users/evyatarmintz/Desktop/jammit/frontend/src/cmps/JamGoingModal.jsx",[],"/Users/evyatarmintz/Desktop/jammit/frontend/src/assets/img/inst-icons/icons.js",[],"/Users/evyatarmintz/Desktop/jammit/frontend/src/cmps/JamCreateForm.jsx",[],"/Users/evyatarmintz/Desktop/jammit/frontend/src/store/reducers/userReducer.js",[],"/Users/evyatarmintz/Desktop/jammit/frontend/src/store/reducers/reviewReducer.js",[],"/Users/evyatarmintz/Desktop/jammit/frontend/src/store/reducers/systemReducer.js",[],"/Users/evyatarmintz/Desktop/jammit/frontend/src/store/reducers/jamReducer.js",[],"/Users/evyatarmintz/Desktop/jammit/frontend/src/cmps/UserProfile/UserInfo.jsx",["223","224","225"],"import ChatRoundedIcon from '@material-ui/icons/ChatRounded';\nimport FavoriteBorderRoundedIcon from '@material-ui/icons/FavoriteBorderRounded';\nimport LocationOnOutlinedIcon from '@material-ui/icons/LocationOnOutlined';\nimport FavoriteRoundedIcon from '@material-ui/icons/FavoriteRounded';\nimport AddRoundedIcon from '@material-ui/icons/AddRounded';\nimport { useHistory } from 'react-router';\n\n\nexport function UserInfo({user, followToggle, onFollowIconClick, isUserAdmin}) {\n    const history = useHistory()\n    return (\n        <div className=\"user-left-box flex column\">\n            <div className=\"user-basic-info flex\">\n                <div className=\"user-img\">\n                    <img src={user.imgUrl} />\n                </div>\n                <div className=\"user-tags-name flex column\">\n                    <span className=\"user-stage-name fs30\">{user.username}</span>\n                    <div className=\"user-location\">\n                    <LocationOnOutlinedIcon className=\"location-icon\" />\n                    <span>{user.location.city}</span>\n                    </div>\n                    <ul className=\"user-tags flex\">{user.tags.map((tag, idx) => {\n                            return <li key={idx}>{tag}</li> })}\n                    </ul>\n                </div>\n            </div>\n            <div className=\"user-about\">\n                <span>{user.about}</span>\n            </div>\n            {!isUserAdmin && <div className=\"reaction-icon\">\n                <ChatRoundedIcon style={{fontSize: 40}}/>\n                {!followToggle ? <FavoriteBorderRoundedIcon style={{fontSize: 40}} onClick={()=>onFollowIconClick()}/>\n                : <FavoriteRoundedIcon style={{fontSize: 40}} onClick={()=>onFollowIconClick()}/>}  \n            </div>}\n        </div>\n        \n    )\n}","/Users/evyatarmintz/Desktop/jammit/frontend/src/cmps/UserProfile/UserTalents.jsx",["226"],"export function UserTalents({user}) {\n    return (\n        <div className=\"user-right-box flex column\">\n            <div className=\"top-card\">\n              <h1>Talents</h1>\n            <div className=\"user-talents\">\n              <ul className=\"flex column\">{user.talents.map((talent, idx) => {\n                return <li key={idx}>{talent}</li>\n              })}</ul>\n            </div>\n            </div>\n               <div className=\"followers bottom-card\">\n                <h1>Followers</h1>\n              {user.followers.map((follower, idx) => {\n                return <img className=\"follower-avatar\" src={follower.imgUrl} key={idx} />\n              })}\n            </div>\n        </div>\n    )\n}","/Users/evyatarmintz/Desktop/jammit/frontend/src/services/httpService.js",[],"/Users/evyatarmintz/Desktop/jammit/frontend/src/cmps/InviteModal.jsx",[],"/Users/evyatarmintz/Desktop/jammit/frontend/src/cmps/LoginModal.jsx",[],"/Users/evyatarmintz/Desktop/jammit/frontend/src/cmps/InviteFriends.jsx",[],"/Users/evyatarmintz/Desktop/jammit/frontend/src/cmps/StaticMap.jsx",["227"],"import React from 'react';\n\nexport class StaticMap extends React.Component {\n \n    render() {\n        const API_KEY = 'AIzaSyBTd-r9ES9me88-mTQasKgom191cNMihjY';\n        return (\n            <div>\n                <img src={`https://maps.googleapis.com/maps/api/staticmap?center=${this.props.lat},${this.props.lng}&zoom=15&size=500x300&key=${API_KEY}&markers=label:J|scale:2|${this.props.lat},${this.props.lng}` } />\n            </div>\n        )\n    }\n}\n\n","/Users/evyatarmintz/Desktop/jammit/frontend/src/pages/JamsList.jsx",[],"/Users/evyatarmintz/Desktop/jammit/frontend/src/services/socketService.js",[],{"ruleId":"228","replacedBy":"229"},{"ruleId":"230","replacedBy":"231"},{"ruleId":"232","severity":1,"message":"233","line":89,"column":34,"nodeType":"234","messageId":"235","endLine":89,"endColumn":45},{"ruleId":null,"fatal":true,"severity":2,"message":"236","line":121,"column":1},{"ruleId":"237","severity":1,"message":"238","line":43,"column":33,"nodeType":"239","endLine":43,"endColumn":48},{"ruleId":"232","severity":1,"message":"240","line":6,"column":8,"nodeType":"234","messageId":"235","endLine":6,"endColumn":18},{"ruleId":"241","severity":1,"message":"242","line":36,"column":29,"nodeType":"243","endLine":36,"endColumn":62},{"ruleId":"232","severity":1,"message":"244","line":10,"column":10,"nodeType":"234","messageId":"235","endLine":10,"endColumn":19},{"ruleId":"245","severity":1,"message":"246","line":28,"column":45,"nodeType":"247","messageId":"248","endLine":28,"endColumn":47},{"ruleId":"245","severity":1,"message":"249","line":9,"column":34,"nodeType":"247","messageId":"248","endLine":9,"endColumn":36},{"ruleId":"228","replacedBy":"250"},{"ruleId":"230","replacedBy":"251"},{"ruleId":"232","severity":1,"message":"252","line":51,"column":10,"nodeType":"234","messageId":"235","endLine":51,"endColumn":16},{"ruleId":"232","severity":1,"message":"253","line":3,"column":8,"nodeType":"234","messageId":"235","endLine":3,"endColumn":19},{"ruleId":"245","severity":1,"message":"249","line":8,"column":41,"nodeType":"247","messageId":"248","endLine":8,"endColumn":43},{"ruleId":"237","severity":1,"message":"238","line":21,"column":72,"nodeType":"239","endLine":21,"endColumn":93},{"ruleId":"245","severity":1,"message":"249","line":29,"column":79,"nodeType":"247","messageId":"248","endLine":29,"endColumn":81},{"ruleId":"232","severity":1,"message":"254","line":5,"column":8,"nodeType":"234","messageId":"235","endLine":5,"endColumn":22},{"ruleId":"232","severity":1,"message":"255","line":10,"column":11,"nodeType":"234","messageId":"235","endLine":10,"endColumn":18},{"ruleId":"241","severity":1,"message":"242","line":15,"column":21,"nodeType":"243","endLine":15,"endColumn":46},{"ruleId":"241","severity":1,"message":"242","line":15,"column":24,"nodeType":"243","endLine":15,"endColumn":91},{"ruleId":"241","severity":1,"message":"242","line":9,"column":17,"nodeType":"243","endLine":9,"endColumn":143},"no-native-reassign",["256"],"no-negated-in-lhs",["257"],"no-unused-vars","'isUserAdmin' is assigned a value but never used.","Identifier","unusedVar","Parsing error: Unexpected token\n\n\u001b[0m \u001b[90m 119 | \u001b[39m    }\u001b[0m\n\u001b[0m \u001b[90m 120 | \u001b[39m\u001b[0m\n\u001b[0m\u001b[31m\u001b[1m>\u001b[22m\u001b[39m\u001b[90m 121 | \u001b[39m\u001b[33m<<\u001b[39m\u001b[33m<<\u001b[39m\u001b[33m<<\u001b[39m\u001b[33m<\u001b[39m \u001b[33mHEAD\u001b[39m\u001b[0m\n\u001b[0m \u001b[90m     | \u001b[39m\u001b[31m\u001b[1m^\u001b[22m\u001b[39m\u001b[0m\n\u001b[0m \u001b[90m 122 | \u001b[39m\u001b[33m===\u001b[39m\u001b[33m===\u001b[39m\u001b[33m=\u001b[39m\u001b[0m\n\u001b[0m \u001b[90m 123 | \u001b[39m    componentDidUpdate(prevProps) {\u001b[0m\n\u001b[0m \u001b[90m 124 | \u001b[39m        \u001b[36mif\u001b[39m (\u001b[36mthis\u001b[39m\u001b[33m.\u001b[39mprops\u001b[33m.\u001b[39mjams \u001b[33m!==\u001b[39m prevProps\u001b[33m.\u001b[39mjams) {\u001b[0m","react/jsx-no-duplicate-props","No duplicate props allowed","JSXAttribute","'recordlogo' is defined but never used.","jsx-a11y/alt-text","img elements must have an alt prop, either with meaningful text, or an empty string for decorative images.","JSXOpeningElement","'JamScroll' is defined but never used.","array-callback-return","Array.prototype.filter() expects a value to be returned at the end of arrow function.","ArrowFunctionExpression","expectedAtEnd","Array.prototype.map() expects a value to be returned at the end of arrow function.",["256"],["257"],"'makeId' is defined but never used.","'userService' is defined but never used.","'AddRoundedIcon' is defined but never used.","'history' is assigned a value but never used.","no-global-assign","no-unsafe-negation"]