[{"/Users/evyatarmintz/Desktop/jammit/frontend/src/index.js":"1","/Users/evyatarmintz/Desktop/jammit/frontend/src/serviceWorkerRegistration.js":"2","/Users/evyatarmintz/Desktop/jammit/frontend/src/reportWebVitals.js":"3","/Users/evyatarmintz/Desktop/jammit/frontend/src/store/store.js":"4","/Users/evyatarmintz/Desktop/jammit/frontend/src/App.jsx":"5","/Users/evyatarmintz/Desktop/jammit/frontend/src/pages/LoginSignup.jsx":"6","/Users/evyatarmintz/Desktop/jammit/frontend/src/pages/Home.jsx":"7","/Users/evyatarmintz/Desktop/jammit/frontend/src/cmps/Header.jsx":"8","/Users/evyatarmintz/Desktop/jammit/frontend/src/store/reducers/index.js":"9","/Users/evyatarmintz/Desktop/jammit/frontend/src/cmps/JamList.jsx":"10","/Users/evyatarmintz/Desktop/jammit/frontend/src/services/authService.js":"11","/Users/evyatarmintz/Desktop/jammit/frontend/src/store/actions/jamActions.js":"12","/Users/evyatarmintz/Desktop/jammit/frontend/src/store/actions/userActions.js":"13","/Users/evyatarmintz/Desktop/jammit/frontend/src/services/userService.js":"14","/Users/evyatarmintz/Desktop/jammit/frontend/src/cmps/JamPreview.jsx":"15","/Users/evyatarmintz/Desktop/jammit/frontend/src/store/reducers/reviewReducer.js":"16","/Users/evyatarmintz/Desktop/jammit/frontend/src/store/reducers/userReducer.js":"17","/Users/evyatarmintz/Desktop/jammit/frontend/src/store/reducers/systemReducer.js":"18","/Users/evyatarmintz/Desktop/jammit/frontend/src/store/reducers/jamReducer.js":"19","/Users/evyatarmintz/Desktop/jammit/frontend/src/services/jamService.js":"20","/Users/evyatarmintz/Desktop/jammit/frontend/src/services/httpService.js":"21","/Users/evyatarmintz/Desktop/jammit/frontend/src/cmps/UserList.jsx":"22","/Users/evyatarmintz/Desktop/jammit/frontend/src/cmps/UserPreview.jsx":"23","/Users/evyatarmintz/Desktop/jammit/frontend/src/pages/UserProfile.jsx":"24","/Users/evyatarmintz/Desktop/jammit/frontend/src/pages/JamDetails.jsx":"25","/Users/evyatarmintz/Desktop/jammit/frontend/src/pages/JamExplore.jsx":"26","/Users/evyatarmintz/Desktop/jammit/frontend/src/cmps/MapContainer.jsx":"27","/Users/evyatarmintz/Desktop/jammit/frontend/src/cmps/JamScroll.jsx":"28","/Users/evyatarmintz/Desktop/jammit/frontend/src/services/utilService.js":"29","/Users/evyatarmintz/Desktop/jammit/frontend/src/cmps/JamUserPreview.jsx":"30","/Users/evyatarmintz/Desktop/jammit/frontend/src/cmps/JamDetailsNavbar.jsx":"31","/Users/evyatarmintz/Desktop/jammit/frontend/src/cmps/JamGoingModal.jsx":"32","/Users/evyatarmintz/Desktop/jammit/frontend/src/pages/MembersList.jsx":"33","/Users/evyatarmintz/Desktop/jammit/frontend/src/assets/img/inst-icons/icons.js":"34"},{"size":910,"mtime":1610196596000,"results":"35","hashOfConfig":"36"},{"size":5064,"mtime":499162500000,"results":"37","hashOfConfig":"36"},{"size":364,"mtime":499162500000,"results":"38","hashOfConfig":"36"},{"size":323,"mtime":1609071193000,"results":"39","hashOfConfig":"36"},{"size":1029,"mtime":1610799459852,"results":"40","hashOfConfig":"36"},{"size":4719,"mtime":1610729344654,"results":"41","hashOfConfig":"36"},{"size":3179,"mtime":1610807258047,"results":"42","hashOfConfig":"36"},{"size":1557,"mtime":1610755142704,"results":"43","hashOfConfig":"36"},{"size":396,"mtime":1610546436417,"results":"44","hashOfConfig":"36"},{"size":293,"mtime":1610723577640,"results":"45","hashOfConfig":"36"},{"size":1539,"mtime":1610560658938,"results":"46","hashOfConfig":"36"},{"size":757,"mtime":1610745252028,"results":"47","hashOfConfig":"36"},{"size":1574,"mtime":1609841288000,"results":"48","hashOfConfig":"36"},{"size":6639,"mtime":1610794293172,"results":"49","hashOfConfig":"36"},{"size":2130,"mtime":1610789266968,"results":"50","hashOfConfig":"36"},{"size":669,"mtime":1609956874000,"results":"51","hashOfConfig":"36"},{"size":737,"mtime":1609759212000,"results":"52","hashOfConfig":"36"},{"size":322,"mtime":1609071005000,"results":"53","hashOfConfig":"36"},{"size":1219,"mtime":1610745252030,"results":"54","hashOfConfig":"36"},{"size":5909,"mtime":1610794293172,"results":"55","hashOfConfig":"36"},{"size":1081,"mtime":1609673629000,"results":"56","hashOfConfig":"36"},{"size":268,"mtime":1610807381185,"results":"57","hashOfConfig":"36"},{"size":954,"mtime":1610806583687,"results":"58","hashOfConfig":"36"},{"size":3736,"mtime":1610725591041,"results":"59","hashOfConfig":"36"},{"size":5130,"mtime":1610758507954,"results":"60","hashOfConfig":"36"},{"size":8523,"mtime":1610790186365,"results":"61","hashOfConfig":"36"},{"size":1010,"mtime":1610756652420,"results":"62","hashOfConfig":"36"},{"size":1730,"mtime":1610797000494,"results":"63","hashOfConfig":"36"},{"size":1052,"mtime":1610708489092,"results":"64","hashOfConfig":"36"},{"size":559,"mtime":1610756652418,"results":"65","hashOfConfig":"36"},{"size":881,"mtime":1610756652415,"results":"66","hashOfConfig":"36"},{"size":2286,"mtime":1610756652417,"results":"67","hashOfConfig":"36"},{"size":1281,"mtime":1610725152359,"results":"68","hashOfConfig":"36"},{"size":335,"mtime":1610751806747,"results":"69","hashOfConfig":"36"},{"filePath":"70","messages":"71","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"72"},"1noxppp",{"filePath":"73","messages":"74","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"72"},{"filePath":"75","messages":"76","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"72"},{"filePath":"77","messages":"78","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"72"},{"filePath":"79","messages":"80","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"72"},{"filePath":"81","messages":"82","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"72"},{"filePath":"83","messages":"84","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"85","messages":"86","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"87","usedDeprecatedRules":"72"},{"filePath":"88","messages":"89","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"72"},{"filePath":"90","messages":"91","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"72"},{"filePath":"92","messages":"93","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"72"},{"filePath":"94","messages":"95","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"72"},{"filePath":"96","messages":"97","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"72"},{"filePath":"98","messages":"99","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"72"},{"filePath":"100","messages":"101","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"102","usedDeprecatedRules":"72"},{"filePath":"103","messages":"104","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"72"},{"filePath":"105","messages":"106","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"72"},{"filePath":"107","messages":"108","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"72"},{"filePath":"109","messages":"110","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"72"},{"filePath":"111","messages":"112","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"72"},{"filePath":"113","messages":"114","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"72"},{"filePath":"115","messages":"116","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"117","messages":"118","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"119","messages":"120","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"121","usedDeprecatedRules":"72"},{"filePath":"122","messages":"123","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"72"},{"filePath":"124","messages":"125","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"126","usedDeprecatedRules":"72"},{"filePath":"127","messages":"128","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"72"},{"filePath":"129","messages":"130","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"72"},{"filePath":"131","messages":"132","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"72"},{"filePath":"133","messages":"134","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"72"},{"filePath":"135","messages":"136","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"72"},{"filePath":"137","messages":"138","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"72"},{"filePath":"139","messages":"140","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"72"},{"filePath":"141","messages":"142","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"72"},"/Users/evyatarmintz/Desktop/jammit/frontend/src/index.js",[],["143","144"],"/Users/evyatarmintz/Desktop/jammit/frontend/src/serviceWorkerRegistration.js",[],"/Users/evyatarmintz/Desktop/jammit/frontend/src/reportWebVitals.js",[],"/Users/evyatarmintz/Desktop/jammit/frontend/src/store/store.js",[],"/Users/evyatarmintz/Desktop/jammit/frontend/src/App.jsx",[],"/Users/evyatarmintz/Desktop/jammit/frontend/src/pages/LoginSignup.jsx",[],"/Users/evyatarmintz/Desktop/jammit/frontend/src/pages/Home.jsx",["145"],"/Users/evyatarmintz/Desktop/jammit/frontend/src/cmps/Header.jsx",["146"],"import React, { Component } from 'react'\r\nimport { withRouter, NavLink, Link } from 'react-router-dom'\r\nimport { connect } from 'react-redux'\r\nimport { logout } from '../store/actions/userActions.js'\r\nimport logo from '../assets/img/logo.svg'\r\n\r\nclass _Header extends Component {\r\n    render() {\r\n        const {loggedInUser} = this.props;\r\n        return <header>\r\n            <div className=\"logo fs24\">\r\n                <NavLink to=\"/\">\r\n                    Jameet\r\n                    <span>people&music</span>\r\n                </NavLink>\r\n            </div>\r\n            <div className=\"flex nav-right-side white\">\r\n                {loggedInUser ? <div className=\"user-greet flex align-center white\">\r\n                    <Link to={`user/${loggedInUser._id}`}><h2>Welcome {loggedInUser.fullname.split(' ')[0]}</h2></Link>\r\n                    <span onClick={()=>this.props.logout()}>Sign out</span></div>\r\n                    : <div className=\"user-greet flex align-center\">Welcome Guest</div>}\r\n                <nav className=\"fs24\">\r\n                    <NavLink to=\"/search\">Jams</NavLink>\r\n                    <NavLink to=\"/members\">Members</NavLink>\r\n                    <NavLink to=\"/login\">Login</NavLink>\r\n                </nav>\r\n            </div>\r\n            \r\n        </header>\r\n    }\r\n\r\n}\r\nconst mapStateToProps = state => {\r\n    return {\r\n        loggedInUser: state.userModule.loggedInUser\r\n    }\r\n}\r\nconst mapDispatchToProps = {\r\n    logout\r\n}\r\n\r\n\r\nexport const Header = withRouter(connect(mapStateToProps, mapDispatchToProps)(_Header))","/Users/evyatarmintz/Desktop/jammit/frontend/src/store/reducers/index.js",[],"/Users/evyatarmintz/Desktop/jammit/frontend/src/cmps/JamList.jsx",[],"/Users/evyatarmintz/Desktop/jammit/frontend/src/services/authService.js",[],"/Users/evyatarmintz/Desktop/jammit/frontend/src/store/actions/jamActions.js",[],"/Users/evyatarmintz/Desktop/jammit/frontend/src/store/actions/userActions.js",[],"/Users/evyatarmintz/Desktop/jammit/frontend/src/services/userService.js",[],"/Users/evyatarmintz/Desktop/jammit/frontend/src/cmps/JamPreview.jsx",["147","148"],"import jamThumb from \"../assets/img/jam-thumb.jpg\"\nimport LocationOnIcon from '@material-ui/icons/LocationOn';\nimport EventIcon from '@material-ui/icons/Event';\n// import Bass from '../assets/img/inst-icons/Bass.svg'\nimport {instIcons} from '../assets/img/inst-icons/icons.js'\n\nexport function JamPreview({ jam, onJamClick }) {\n    const slotsLeft = jam.capacity - jam.usersGoing.length\n    return (\n        <li className=\"jam-card flex column\" onClick={()=>onJamClick(jam._id)}>\n            <div className=\"thumb flex column pos-relative\">\n                <img className=\"jam-card thumb\" src={jamThumb} className=\"jamThumb\" alt=\"jam-thumbnail\"/>\n                <div className=\"inst-icons-wrapper\">\n                    {instIcons.map(icon=>{\n                        const user = jam.usersGoing.find(user => {\n                            return user.playing.some(inst=>{\n                                const instName = Object.keys(icon)[0]\n                                return instName === inst\n                            })\n                        })\n                        if (user) return <img className=\"inst-icon\" src={Object.values(icon)[0]} alt=\"instrument\"/>\n                    })}\n                </div>\n            </div>\n            <div className=\"jam-card-content flex column\" >\n                <h2>{jam.title}</h2>\n            \n            <ul className=\"jam-card-tags flex\">{jam.tags.map((tag, idx) => {\n                return <li key={idx}>{tag}</li> })}\n            </ul>\n            \n                <div><p><LocationOnIcon/>{jam.location.city}</p></div>\n                <div className=\"date-slots\">\n                    <div className=\"date\">\n                        <EventIcon/>\n                        {new Date(jam.startsAt).toLocaleString('he-IL',{month: '2-digit', day: '2-digit', hour: '2-digit', minute:'2-digit'})}\n                    </div>\n                    {slotsLeft < 10 ? <span className=\"red\">\n                        {slotsLeft} Slots Left\n                    </span>: <span className=\"green\">Open</span> }\n                </div>\n                \n            </div>\n        </li>\n    );\n}","/Users/evyatarmintz/Desktop/jammit/frontend/src/store/reducers/reviewReducer.js",[],"/Users/evyatarmintz/Desktop/jammit/frontend/src/store/reducers/userReducer.js",[],"/Users/evyatarmintz/Desktop/jammit/frontend/src/store/reducers/systemReducer.js",[],"/Users/evyatarmintz/Desktop/jammit/frontend/src/store/reducers/jamReducer.js",[],"/Users/evyatarmintz/Desktop/jammit/frontend/src/services/jamService.js",[],"/Users/evyatarmintz/Desktop/jammit/frontend/src/services/httpService.js",[],"/Users/evyatarmintz/Desktop/jammit/frontend/src/cmps/UserList.jsx",[],"/Users/evyatarmintz/Desktop/jammit/frontend/src/cmps/UserPreview.jsx",["149","150"],"/Users/evyatarmintz/Desktop/jammit/frontend/src/pages/UserProfile.jsx",["151","152","153"],"import React, { Component } from 'react'\nimport { connect } from 'react-redux'\nimport { userService } from '../services/userService'\nimport { loadUsers } from '../store/actions/userActions'\nimport { loadJams } from '../store/actions/jamActions'\nimport ChatRoundedIcon from '@material-ui/icons/ChatRounded';\nimport FavoriteBorderRoundedIcon from '@material-ui/icons/FavoriteBorderRounded';\nimport LocationOnOutlinedIcon from '@material-ui/icons/LocationOnOutlined';\nimport { JamPreview } from '../cmps/JamPreview'\n\nclass _UserProfile extends Component {\n\n  state = {\n    user: null,\n    currUser: false\n  }\n\n  // async componentDidMount() {\n  //   const user = await userService.getById(this.props.match.params.id)\n  //   this.setState({user})\n  // }\n\n  componentDidMount() {\n    const user = userService.getById(this.props.match.params.id)\n    // console.log('userDits cmp didM', user);\n    this.setState({ user })\n    // this.props.loadUsers()\n    this.props.loadJams()\n  }\n\n  onJamClick = (jamId)=> {\n    this.props.history.push(`../jam/${jamId}`)\n  }\n\n  render() {\n    const { user } = this.state\n    const {jams} = this.props\n    if (!user) return <div>Loding..</div>\n    return (\n      <>\n        <section className=\"user-box flex\">\n\n          <div className=\"user-left-box flex column\">\n\n            <div className=\"user-basic-info flex\">\n\n              <div className=\"user-img\">\n                <img src={user.imgUrl} />\n              </div>\n\n              <div className=\"user-tags-name flex column justify-center\">\n                <span className=\"user-stage-name fs30\">{user.username}</span>\n                <br />\n                <div className=\"user-location\">\n                  <LocationOnOutlinedIcon className=\"location-icon\" />\n                  <span>{user.location.city}</span>\n                </div>\n                <ul >{user.tags.map((tag, idx) => {\n                  return <li className=\"tags fs12\" key={idx}>{tag}</li>\n                })}</ul>\n              </div>\n\n            </div>\n\n            <div className=\"user-about\">\n              <span>{user.about}</span>\n            </div>\n            <div className=\"followers\">\n              {user.followers.map((follower, idx) => {\n                return <img className=\"follower-avatar\" src={follower.imgUrl} key={idx} />\n              })}\n            </div>\n\n            <div className=\"reaction-icon\">\n              <ChatRoundedIcon />\n              <FavoriteBorderRoundedIcon />\n            </div>\n\n          </div>\n\n          <div className=\"user-right-box flex column\">\n            <div className=\"titel flex\">\n              <span className=\"talents-title fs18\">Talents</span>\n            </div>\n            <div className=\"user-talents\">\n              <ul className=\"flex column\">{user.talents.map((talent, idx) => {\n                return <li key={idx}>{talent}</li>\n              })}</ul>\n            </div>\n\n          </div>\n\n        </section>\n\n        <section className=\"user-jams-list\">\n              <div>\n                {jams.map(jam => {\n                  const userFound = jam.usersGoing.find(userGoing =>{\n                   return userGoing._id === user._id\n                  }) \n                  if(userFound){\n                    return <JamPreview key={jam._id} jam={jam} onJamClick={()=>this.onJamClick(jam._id)}/> \n                  }\n                })}\n              </div>\n        </section>\n      </>\n\n    )\n  }\n}\n\n\nconst mapStateToProps = state => {\n  return {\n    jams: state.jamModule.jams,\n    users: state.userModule.users,\n    // loggedInUser: state.userModule.loggedInUser\n  }\n}\nconst mapDispatchToProps = {\n  loadJams,\n  loadUsers,\n}\n\nexport const UserProfile = connect(mapStateToProps, mapDispatchToProps)(_UserProfile)\n\n\n","/Users/evyatarmintz/Desktop/jammit/frontend/src/pages/JamDetails.jsx",[],"/Users/evyatarmintz/Desktop/jammit/frontend/src/pages/JamExplore.jsx",["154","155","156"],"import React, { Component } from \"react\";\nimport { Map, GoogleApiWrapper, Marker, InfoWindow } from \"google-maps-react\";\nimport { connect } from \"react-redux\";\nimport { loadJams } from \"../store/actions/jamActions.js\";\nimport { loadUsers } from \"../store/actions/userActions.js\";\nimport jamThumb from \"../assets/img/jam-thumb.jpg\"\nimport { JamScroll } from \"../cmps/JamScroll.jsx\";\nimport { JamList } from \"../cmps/JamList.jsx\";\nimport { JamPreview } from \"../cmps/JamPreview.jsx\";\nimport jamMarker from \"../assets/img/marker.png\"\n\nconst mapStyles = {\n    width: \"50%\",\n    height: \"100%\",\n};\n\n// const containerStyle = {\n//     position: 'static',  \n//     width: '100%',\n//     height: '100%'\n// }\n\nconst mapStyle = [\n    {\n      featureType: 'landscape.man_made',\n      elementType: 'geometry.fill',\n      stylers: [\n        {\n          color: '#dceafa'\n        }\n      ]\n    },\n    {\n        elementType: \"labels.text\",\n        stylers: [\n            {\n                visibility: \"off\"\n            }\n        ]\n    },\n    {\n        featureType: \"road.highway\",\n        elementType: \"labels\",\n        stylers: [\n            {\n                visibility: \"on\"\n            }\n        ]\n    },\n    {\n        featureType: \"road.arterial\",\n        elementType: \"labels.text\",\n        stylers: [\n            {\n                visibility: \"on\"\n            }\n        ]\n    },\n    {\n        featureType: \"road.local\",\n        elementType: \"labels.text\",\n        stylers: [\n            {\n                visibility: \"on\"\n            }\n        ]\n    },\n    ]\nclass _JamExplore extends Component {\n    state = {\n        markers: null,\n        userPos: null,\n        mapZoom: 14,\n        showingInfoWindow: false, // Hides or shows the InfoWindow\n        activeMarker: {}, // Shows the active marker upon click\n        selectedPlace: null, // Shows the InfoWindow to the selected place upon a marker\n    };\n    mapRef = React.createRef();\n    componentDidMount() {\n        this.props.loadJams()\n        navigator.geolocation.getCurrentPosition(pos =>{\n            const userPos = {position: {lat: null, lng: null}}\n            userPos.position.lat = pos.coords.latitude\n            userPos.position.lng = pos.coords.longitude\n            this.setState({selectedPlace: userPos, userPos: userPos})\n            return pos.coords\n        })\n        this.setState({markers: this.displayMarkers()})\n    }\n\n    onMarkerClick = (props, marker) => {\n        console.log('props', props);\n        \n        this.setState({\n            activeMarker: marker,\n            showingInfoWindow: true,\n            selectedPlace: props,\n            mapZoom: 17\n        });\n    }\n\n    onJamClick = (jamId) => {\n        console.log(jamId);\n        const marker  = this.state.markers.find(marker => {\n            return marker.key === jamId\n        })\n        const props = marker.props\n        console.log(marker, props);\n        this.setState({\n            selectedPlace: props,\n            mapZoom: 17\n        });\n    }\n\n    onClose = props => {\n        if (this.state.showingInfoWindow) {\n          this.setState({\n            showingInfoWindow: false,\n            activeMarker: null\n          });\n        }\n      };\n    displayMarkers = () => {\n        return this.props.jams.map(jam => {\n                return  <Marker key={jam._id} \n                    position={{\n                        lat: jam.location.lat,\n                        lng: jam.location.lng\n                    }} \n                    onMousedown={this.onMarkerClick}\n                    name={jam.title}\n                    currMembers={jam.usersGoing.length}\n                    capacity={jam.capacity}\n                    icon={{\n                        url: jamMarker,\n                        anchor: new this.props.google.maps.Point(32,32),\n                        scaledSize:  new this.props.google.maps.Size(50,50)\n                    }}\n                />\n            });\n    }\n      \n    //   centerMoved(mapProps, map) {\n    //       console.log(map.center.lat());\n          \n    //   }\n    _mapLoaded(mapProps, map) {\n        map.setOptions({\n           styles: mapStyle\n        })\n    }    \n\n    render() {\n        const { jams, loggedInUser } = this.props\n        const {userPos, selectedPlace, mapZoom, markers} = this.state\n        if (!selectedPlace || jams.length === 0) return <h2>Loading...</h2>\n        console.log(userPos);\n        return (\n            <>\n            <section className=\"flex explore-container pos-relative\">\n                {/* <h1 className=\"jams-explore-title\">Jams In Current Area</h1> */}\n                {/* <JamScroll jams={this.props.jams} onJamClick={this.onJamClick}/> */}\n                <button onClick={()=>{\n                    const selectedPlaceCopy = {...selectedPlace}\n                    selectedPlaceCopy.position.lat = userPos.position.lat\n                    selectedPlaceCopy.position.lng = userPos.position.lng\n                    this.setState({selectedPlace: selectedPlaceCopy, mapZoom: 15})\n                    }}>Center</button>\n                <Map\n                    ref={this.mapRef}\n                    // containerStyle={containerStyle}\n                    google={this.props.google}\n                    zoom={mapZoom}\n                    style={mapStyles}\n                    // centerAroundCurrentLocation={true}\n                    initialCenter={{lat: selectedPlace.position.lat, lng: selectedPlace.position.lng}}\n                    center={{lat: selectedPlace.position.lat, lng: selectedPlace.position.lng}}\n                    onReady={(mapProps, map) => this._mapLoaded(mapProps, map)}\n                    disableDefaultUI= {true}\n                    // onBoundsChanged={this.centerMoved}\n                >\n                {markers}\n                {loggedInUser && <Marker\n                    name={'Your position'}\n                    position={userPos.position}\n                    icon={{\n                    url: loggedInUser.imgUrl,\n                    anchor: new this.props.google.maps.Point(32,32),\n                    scaledSize:  new this.props.google.maps.Size(50,50)\n                    }}\n                    />}\n                <InfoWindow\n                marker={this.state.activeMarker}\n                visible={this.state.showingInfoWindow}\n                onClose={this.onClose}\n              >\n                <div>\n                    <h2>{this.state.selectedPlace.name}</h2>\n                    <h3>Capacity: {this.state.selectedPlace.currMembers} / {this.state.selectedPlace.capacity}</h3>\n                </div>\n                </InfoWindow>\n            </Map>\n            <div className=\"jams-explore-container\">\n                <div className=\"jams-explore-filter flex column\">\n                    <h1>Filter Jams</h1>\n                    <div className=\"filter-inputs\">\n                        <select name=\"filterByInst\">\n                            <option value=\"\">By Instrument Missing</option>\n                            <option value=\"\">Singer</option>\n                            <option value=\"\">Guitar</option>\n                            <option value=\"\">Drums</option>\n                            <option value=\"\">Bass</option>\n                            <option value=\"\">Keyboard</option>\n                        </select>\n                        <select name=\"filterByRegion\">\n                            <option value=\"\">By Region</option>\n                            <option value=\"\">North</option>\n                            <option value=\"\">Center</option>\n                            <option value=\"\">South</option>\n                        </select>\n                        <input type=\"text\" name=\"name\" id=\"\"/>\n                    </div>\n                </div>\n                <ul className=\"jams-explore-list\">\n                    {jams.map((jam) => (\n                        <JamPreview key={jam._id} jam={jam} onJamClick={this.onJamClick}/>\n                    ))}\n                </ul>\n            </div>\n            {/* <JamList jams={jams} onJamClick={this.onJamClick}/> */}\n            </section>\n            </>\n        );\n    }\n}\n\nconst mapStateToProps = (state) => {\n    return {\n        jams: state.jamModule.jams,\n        users: state.userModule.users,\n        loggedInUser: state.userModule.loggedInUser \n    };\n};\nconst mapDispatchToProps = {\n    loadJams,\n    loadUsers,\n};\n\nexport const JamExplore = GoogleApiWrapper({\n    apiKey: \"AIzaSyBTd-r9ES9me88-mTQasKgom191cNMihjY\",\n})(connect(mapStateToProps, mapDispatchToProps)(_JamExplore));\n","/Users/evyatarmintz/Desktop/jammit/frontend/src/cmps/MapContainer.jsx",[],"/Users/evyatarmintz/Desktop/jammit/frontend/src/cmps/JamScroll.jsx",[],"/Users/evyatarmintz/Desktop/jammit/frontend/src/services/utilService.js",[],"/Users/evyatarmintz/Desktop/jammit/frontend/src/cmps/JamUserPreview.jsx",[],"/Users/evyatarmintz/Desktop/jammit/frontend/src/cmps/JamDetailsNavbar.jsx",[],"/Users/evyatarmintz/Desktop/jammit/frontend/src/cmps/JamGoingModal.jsx",[],"/Users/evyatarmintz/Desktop/jammit/frontend/src/pages/MembersList.jsx",[],"/Users/evyatarmintz/Desktop/jammit/frontend/src/assets/img/inst-icons/icons.js",[],{"ruleId":"157","replacedBy":"158"},{"ruleId":"159","replacedBy":"160"},{"ruleId":"161","severity":1,"message":"162","line":41,"column":45,"nodeType":"163","messageId":"164","endLine":41,"endColumn":47},{"ruleId":"165","severity":1,"message":"166","line":5,"column":8,"nodeType":"167","messageId":"168","endLine":5,"endColumn":12},{"ruleId":"169","severity":1,"message":"170","line":12,"column":64,"nodeType":"171","endLine":12,"endColumn":84},{"ruleId":"161","severity":1,"message":"172","line":14,"column":40,"nodeType":"163","messageId":"164","endLine":14,"endColumn":42},{"ruleId":"169","severity":1,"message":"170","line":9,"column":68,"nodeType":"171","endLine":9,"endColumn":89},{"ruleId":"161","severity":1,"message":"172","line":15,"column":83,"nodeType":"163","messageId":"164","endLine":15,"endColumn":85},{"ruleId":"173","severity":1,"message":"174","line":48,"column":17,"nodeType":"175","endLine":48,"endColumn":42},{"ruleId":"173","severity":1,"message":"174","line":70,"column":24,"nodeType":"175","endLine":70,"endColumn":91},{"ruleId":"161","severity":1,"message":"172","line":97,"column":31,"nodeType":"163","messageId":"164","endLine":97,"endColumn":33},{"ruleId":"165","severity":1,"message":"176","line":6,"column":8,"nodeType":"167","messageId":"168","endLine":6,"endColumn":16},{"ruleId":"165","severity":1,"message":"177","line":7,"column":10,"nodeType":"167","messageId":"168","endLine":7,"endColumn":19},{"ruleId":"165","severity":1,"message":"178","line":8,"column":10,"nodeType":"167","messageId":"168","endLine":8,"endColumn":17},"no-native-reassign",["179"],"no-negated-in-lhs",["180"],"array-callback-return","Array.prototype.filter() expects a value to be returned at the end of arrow function.","ArrowFunctionExpression","expectedAtEnd","no-unused-vars","'logo' is defined but never used.","Identifier","unusedVar","react/jsx-no-duplicate-props","No duplicate props allowed","JSXAttribute","Array.prototype.map() expects a value to be returned at the end of arrow function.","jsx-a11y/alt-text","img elements must have an alt prop, either with meaningful text, or an empty string for decorative images.","JSXOpeningElement","'jamThumb' is defined but never used.","'JamScroll' is defined but never used.","'JamList' is defined but never used.","no-global-assign","no-unsafe-negation"]