[{"C:\\Users\\danie\\OneDrive\\שולחן העבודה\\dev\\jameet\\jammit\\frontend\\src\\index.js":"1","C:\\Users\\danie\\OneDrive\\שולחן העבודה\\dev\\jameet\\jammit\\frontend\\src\\serviceWorkerRegistration.js":"2","C:\\Users\\danie\\OneDrive\\שולחן העבודה\\dev\\jameet\\jammit\\frontend\\src\\reportWebVitals.js":"3","C:\\Users\\danie\\OneDrive\\שולחן העבודה\\dev\\jameet\\jammit\\frontend\\src\\store\\store.js":"4","C:\\Users\\danie\\OneDrive\\שולחן העבודה\\dev\\jameet\\jammit\\frontend\\src\\App.jsx":"5","C:\\Users\\danie\\OneDrive\\שולחן העבודה\\dev\\jameet\\jammit\\frontend\\src\\pages\\LoginSignup.jsx":"6","C:\\Users\\danie\\OneDrive\\שולחן העבודה\\dev\\jameet\\jammit\\frontend\\src\\pages\\JamExplore.jsx":"7","C:\\Users\\danie\\OneDrive\\שולחן העבודה\\dev\\jameet\\jammit\\frontend\\src\\pages\\JamCreate.jsx":"8","C:\\Users\\danie\\OneDrive\\שולחן העבודה\\dev\\jameet\\jammit\\frontend\\src\\pages\\MembersList.jsx":"9","C:\\Users\\danie\\OneDrive\\שולחן העבודה\\dev\\jameet\\jammit\\frontend\\src\\cmps\\MainNav.jsx":"10","C:\\Users\\danie\\OneDrive\\שולחן העבודה\\dev\\jameet\\jammit\\frontend\\src\\pages\\Home.jsx":"11","C:\\Users\\danie\\OneDrive\\שולחן העבודה\\dev\\jameet\\jammit\\frontend\\src\\pages\\UserProfile.jsx":"12","C:\\Users\\danie\\OneDrive\\שולחן העבודה\\dev\\jameet\\jammit\\frontend\\src\\pages\\JamDetails.jsx":"13","C:\\Users\\danie\\OneDrive\\שולחן העבודה\\dev\\jameet\\jammit\\frontend\\src\\store\\reducers\\index.js":"14","C:\\Users\\danie\\OneDrive\\שולחן העבודה\\dev\\jameet\\jammit\\frontend\\src\\pages\\UserSection.jsx":"15","C:\\Users\\danie\\OneDrive\\שולחן העבודה\\dev\\jameet\\jammit\\frontend\\src\\cmps\\JamList.jsx":"16","C:\\Users\\danie\\OneDrive\\שולחן העבודה\\dev\\jameet\\jammit\\frontend\\src\\cmps\\LoaderSpinner.jsx":"17","C:\\Users\\danie\\OneDrive\\שולחן העבודה\\dev\\jameet\\jammit\\frontend\\src\\store\\actions\\userActions.js":"18","C:\\Users\\danie\\OneDrive\\שולחן העבודה\\dev\\jameet\\jammit\\frontend\\src\\cmps\\JamScroll.jsx":"19","C:\\Users\\danie\\OneDrive\\שולחן העבודה\\dev\\jameet\\jammit\\frontend\\src\\services\\mainNavService.js":"20","C:\\Users\\danie\\OneDrive\\שולחן העבודה\\dev\\jameet\\jammit\\frontend\\src\\cmps\\JamPreview.jsx":"21","C:\\Users\\danie\\OneDrive\\שולחן העבודה\\dev\\jameet\\jammit\\frontend\\src\\services\\authService.js":"22","C:\\Users\\danie\\OneDrive\\שולחן העבודה\\dev\\jameet\\jammit\\frontend\\src\\store\\actions\\jamActions.js":"23","C:\\Users\\danie\\OneDrive\\שולחן העבודה\\dev\\jameet\\jammit\\frontend\\src\\cmps\\HeroSection.jsx":"24","C:\\Users\\danie\\OneDrive\\שולחן העבודה\\dev\\jameet\\jammit\\frontend\\src\\cmps\\UserList.jsx":"25","C:\\Users\\danie\\OneDrive\\שולחן העבודה\\dev\\jameet\\jammit\\frontend\\src\\services\\userService.js":"26","C:\\Users\\danie\\OneDrive\\שולחן העבודה\\dev\\jameet\\jammit\\frontend\\src\\services\\utilService.js":"27","C:\\Users\\danie\\OneDrive\\שולחן העבודה\\dev\\jameet\\jammit\\frontend\\src\\store\\reducers\\reviewReducer.js":"28","C:\\Users\\danie\\OneDrive\\שולחן העבודה\\dev\\jameet\\jammit\\frontend\\src\\store\\reducers\\systemReducer.js":"29","C:\\Users\\danie\\OneDrive\\שולחן העבודה\\dev\\jameet\\jammit\\frontend\\src\\store\\reducers\\userReducer.js":"30","C:\\Users\\danie\\OneDrive\\שולחן העבודה\\dev\\jameet\\jammit\\frontend\\src\\store\\reducers\\jamReducer.js":"31","C:\\Users\\danie\\OneDrive\\שולחן העבודה\\dev\\jameet\\jammit\\frontend\\src\\cmps\\JamCreateForm.jsx":"32","C:\\Users\\danie\\OneDrive\\שולחן העבודה\\dev\\jameet\\jammit\\frontend\\src\\assets\\img\\inst-icons\\icons.js":"33","C:\\Users\\danie\\OneDrive\\שולחן העבודה\\dev\\jameet\\jammit\\frontend\\src\\services\\jamService.js":"34","C:\\Users\\danie\\OneDrive\\שולחן העבודה\\dev\\jameet\\jammit\\frontend\\src\\cmps\\UserPreview.jsx":"35","C:\\Users\\danie\\OneDrive\\שולחן העבודה\\dev\\jameet\\jammit\\frontend\\src\\cmps\\JamUserPreview.jsx":"36","C:\\Users\\danie\\OneDrive\\שולחן העבודה\\dev\\jameet\\jammit\\frontend\\src\\cmps\\MapContainer.jsx":"37","C:\\Users\\danie\\OneDrive\\שולחן העבודה\\dev\\jameet\\jammit\\frontend\\src\\cmps\\UserProfile\\UserTalents.jsx":"38","C:\\Users\\danie\\OneDrive\\שולחן העבודה\\dev\\jameet\\jammit\\frontend\\src\\cmps\\JamGoingModal.jsx":"39","C:\\Users\\danie\\OneDrive\\שולחן העבודה\\dev\\jameet\\jammit\\frontend\\src\\cmps\\JamDetailsNavbar.jsx":"40","C:\\Users\\danie\\OneDrive\\שולחן העבודה\\dev\\jameet\\jammit\\frontend\\src\\cmps\\UserProfile\\UserInfo.jsx":"41","C:\\Users\\danie\\OneDrive\\שולחן העבודה\\dev\\jameet\\jammit\\frontend\\src\\services\\httpService.js":"42","C:\\Users\\danie\\OneDrive\\שולחן העבודה\\dev\\jameet\\jammit\\frontend\\src\\cmps\\LoginModal.jsx":"43","C:\\Users\\danie\\OneDrive\\שולחן העבודה\\dev\\jameet\\jammit\\frontend\\src\\cmps\\InviteModal.jsx":"44","C:\\Users\\danie\\OneDrive\\שולחן העבודה\\dev\\jameet\\jammit\\frontend\\src\\cmps\\InviteFriends.jsx":"45"},{"size":935,"mtime":1610550173931,"results":"46","hashOfConfig":"47"},{"size":5201,"mtime":1610550173933,"results":"48","hashOfConfig":"47"},{"size":377,"mtime":1610550173933,"results":"49","hashOfConfig":"47"},{"size":323,"mtime":1610550173941,"results":"50","hashOfConfig":"47"},{"size":1318,"mtime":1611067880993,"results":"51","hashOfConfig":"47"},{"size":4878,"mtime":1610981948005,"results":"52","hashOfConfig":"47"},{"size":8727,"mtime":1611150155224,"results":"53","hashOfConfig":"47"},{"size":1790,"mtime":1610881707933,"results":"54","hashOfConfig":"47"},{"size":2148,"mtime":1611150155226,"results":"55","hashOfConfig":"47"},{"size":1816,"mtime":1611075656067,"results":"56","hashOfConfig":"47"},{"size":3125,"mtime":1611150155259,"results":"57","hashOfConfig":"47"},{"size":2223,"mtime":1611090218132,"results":"58","hashOfConfig":"47"},{"size":7637,"mtime":1611150155223,"results":"59","hashOfConfig":"47"},{"size":396,"mtime":1610550173940,"results":"60","hashOfConfig":"47"},{"size":4643,"mtime":1611150155227,"results":"61","hashOfConfig":"47"},{"size":268,"mtime":1611075656062,"results":"62","hashOfConfig":"47"},{"size":502,"mtime":1611071013062,"results":"63","hashOfConfig":"47"},{"size":1590,"mtime":1611150155232,"results":"64","hashOfConfig":"47"},{"size":1221,"mtime":1611090218123,"results":"65","hashOfConfig":"47"},{"size":1593,"mtime":1611096682025,"results":"66","hashOfConfig":"47"},{"size":2403,"mtime":1611150155219,"results":"67","hashOfConfig":"47"},{"size":1596,"mtime":1610560975527,"results":"68","hashOfConfig":"47"},{"size":1479,"mtime":1611150155231,"results":"69","hashOfConfig":"47"},{"size":1075,"mtime":1611150155214,"results":"70","hashOfConfig":"47"},{"size":278,"mtime":1610808786640,"results":"71","hashOfConfig":"47"},{"size":1945,"mtime":1611150155230,"results":"72","hashOfConfig":"47"},{"size":1052,"mtime":1610708401163,"results":"73","hashOfConfig":"47"},{"size":669,"mtime":1610550173940,"results":"74","hashOfConfig":"47"},{"size":322,"mtime":1610550173940,"results":"75","hashOfConfig":"47"},{"size":737,"mtime":1610550173941,"results":"76","hashOfConfig":"47"},{"size":922,"mtime":1611075656076,"results":"77","hashOfConfig":"47"},{"size":5249,"mtime":1611150155216,"results":"78","hashOfConfig":"47"},{"size":349,"mtime":1610754815343,"results":"79","hashOfConfig":"47"},{"size":1087,"mtime":1611090218135,"results":"80","hashOfConfig":"47"},{"size":1511,"mtime":1611150155221,"results":"81","hashOfConfig":"47"},{"size":654,"mtime":1610997784289,"results":"82","hashOfConfig":"47"},{"size":1047,"mtime":1611048188990,"results":"83","hashOfConfig":"47"},{"size":722,"mtime":1610992636044,"results":"84","hashOfConfig":"47"},{"size":2945,"mtime":1611090218118,"results":"85","hashOfConfig":"47"},{"size":2611,"mtime":1611090218117,"results":"86","hashOfConfig":"47"},{"size":1830,"mtime":1611090218128,"results":"87","hashOfConfig":"47"},{"size":1081,"mtime":1610550173935,"results":"88","hashOfConfig":"47"},{"size":1657,"mtime":1611090218126,"results":"89","hashOfConfig":"47"},{"size":2227,"mtime":1611090218115,"results":"90","hashOfConfig":"47"},{"size":813,"mtime":1611090218115,"results":"91","hashOfConfig":"47"},{"filePath":"92","messages":"93","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"94"},"15qkesh",{"filePath":"95","messages":"96","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"94"},{"filePath":"97","messages":"98","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"94"},{"filePath":"99","messages":"100","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"94"},{"filePath":"101","messages":"102","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"94"},{"filePath":"103","messages":"104","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"94"},{"filePath":"105","messages":"106","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"107","usedDeprecatedRules":"94"},{"filePath":"108","messages":"109","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"94"},{"filePath":"110","messages":"111","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"94"},{"filePath":"112","messages":"113","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"114","usedDeprecatedRules":"94"},{"filePath":"115","messages":"116","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"117","usedDeprecatedRules":"94"},{"filePath":"118","messages":"119","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"94"},{"filePath":"120","messages":"121","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"122","usedDeprecatedRules":"94"},{"filePath":"123","messages":"124","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"94"},{"filePath":"125","messages":"126","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"127","usedDeprecatedRules":"94"},{"filePath":"128","messages":"129","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"94"},{"filePath":"130","messages":"131","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"94"},{"filePath":"132","messages":"133","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"94"},{"filePath":"134","messages":"135","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"94"},{"filePath":"136","messages":"137","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"94"},{"filePath":"138","messages":"139","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"140","usedDeprecatedRules":"94"},{"filePath":"141","messages":"142","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"94"},{"filePath":"143","messages":"144","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"145","messages":"146","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"94"},{"filePath":"147","messages":"148","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"94"},{"filePath":"149","messages":"150","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"94"},{"filePath":"151","messages":"152","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"94"},{"filePath":"153","messages":"154","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"94"},{"filePath":"155","messages":"156","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"94"},{"filePath":"157","messages":"158","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"94"},{"filePath":"159","messages":"160","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"94"},{"filePath":"161","messages":"162","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"94"},{"filePath":"163","messages":"164","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"94"},{"filePath":"165","messages":"166","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"167","usedDeprecatedRules":"94"},{"filePath":"168","messages":"169","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"170","usedDeprecatedRules":"94"},{"filePath":"171","messages":"172","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"94"},{"filePath":"173","messages":"174","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"94"},{"filePath":"175","messages":"176","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"177","usedDeprecatedRules":"94"},{"filePath":"178","messages":"179","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"94"},{"filePath":"180","messages":"181","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"94"},{"filePath":"182","messages":"183","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"184","usedDeprecatedRules":"94"},{"filePath":"185","messages":"186","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"94"},{"filePath":"187","messages":"188","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"94"},{"filePath":"189","messages":"190","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"94"},{"filePath":"191","messages":"192","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"94"},"C:\\Users\\danie\\OneDrive\\שולחן העבודה\\dev\\jameet\\jammit\\frontend\\src\\index.js",[],["193","194"],"C:\\Users\\danie\\OneDrive\\שולחן העבודה\\dev\\jameet\\jammit\\frontend\\src\\serviceWorkerRegistration.js",[],"C:\\Users\\danie\\OneDrive\\שולחן העבודה\\dev\\jameet\\jammit\\frontend\\src\\reportWebVitals.js",[],"C:\\Users\\danie\\OneDrive\\שולחן העבודה\\dev\\jameet\\jammit\\frontend\\src\\store\\store.js",[],"C:\\Users\\danie\\OneDrive\\שולחן העבודה\\dev\\jameet\\jammit\\frontend\\src\\App.jsx",[],"C:\\Users\\danie\\OneDrive\\שולחן העבודה\\dev\\jameet\\jammit\\frontend\\src\\pages\\LoginSignup.jsx",[],"C:\\Users\\danie\\OneDrive\\שולחן העבודה\\dev\\jameet\\jammit\\frontend\\src\\pages\\JamExplore.jsx",["195","196","197","198"],"import React, { Component } from \"react\";\r\nimport { Map, GoogleApiWrapper, Marker, InfoWindow } from \"google-maps-react\";\r\nimport { connect } from \"react-redux\";\r\nimport { loadJams } from \"../store/actions/jamActions.js\";\r\nimport { loadUsers } from \"../store/actions/userActions.js\";\r\nimport jamThumb from \"../assets/img/jam-thumb.jpg\"\r\nimport { JamScroll } from \"../cmps/JamScroll.jsx\";\r\nimport { JamList } from \"../cmps/JamList.jsx\";\r\nimport { JamPreview } from \"../cmps/JamPreview.jsx\";\r\nimport jamMarker from \"../assets/img/green-marker.png\"\r\nimport GpsFixedIcon from '@material-ui/icons/GpsFixed';\r\nimport { LoaderSpinner } from \"../cmps/LoaderSpinner.jsx\";\r\nimport Loader from \"react-loader-spinner\";\r\n\r\n\r\n\r\nconst mapStyles = {\r\n    width: \"50%\",\r\n    height: \"100%\",\r\n};\r\n\r\n// const containerStyle = {\r\n//     position: 'static',  \r\n//     width: '100%',\r\n//     height: '100%'\r\n// }\r\n\r\nconst mapStyle = [\r\n    {\r\n      featureType: 'landscape.man_made',\r\n      elementType: 'geometry.fill',\r\n      stylers: [\r\n        {\r\n          color: '#dceafa'\r\n        }\r\n      ]\r\n    },\r\n    {\r\n        elementType: \"labels.text\",\r\n        stylers: [\r\n            {\r\n                visibility: \"off\"\r\n            }\r\n        ]\r\n    },\r\n    {\r\n        featureType: \"road.highway\",\r\n        elementType: \"labels\",\r\n        stylers: [\r\n            {\r\n                visibility: \"on\"\r\n            }\r\n        ]\r\n    },\r\n    {\r\n        featureType: \"road.arterial\",\r\n        elementType: \"labels.text\",\r\n        stylers: [\r\n            {\r\n                visibility: \"on\"\r\n            }\r\n        ]\r\n    },\r\n    {\r\n        featureType: \"road.local\",\r\n        elementType: \"labels.text\",\r\n        stylers: [\r\n            {\r\n                visibility: \"on\"\r\n            }\r\n        ]\r\n    },\r\n    ]\r\nclass _JamExplore extends Component {\r\n    state = {\r\n        markers: null,\r\n        userPos: null,\r\n        mapZoom: 14,\r\n        showingInfoWindow: false, // Hides or shows the InfoWindow\r\n        activeMarker: {}, // Shows the active marker upon click\r\n        selectedPlace: null, // Shows the InfoWindow to the selected place upon a marker\r\n    };\r\n    mapRef = React.createRef();\r\n    componentDidMount() {     \r\n        this.props.loadJams()\r\n        navigator.geolocation.getCurrentPosition(pos =>{\r\n            const userPos = {position: {lat: null, lng: null}}\r\n            userPos.position.lat = pos.coords.latitude\r\n            userPos.position.lng = pos.coords.longitude\r\n            this.setState({selectedPlace: userPos, userPos: userPos})\r\n            return pos.coords\r\n        })\r\n        this.setState({markers: this.displayMarkers()})\r\n    }\r\n\r\n    onMarkerClick = (props, marker) => {\r\n        console.log('props', props);\r\n        \r\n        this.setState({\r\n            activeMarker: marker,\r\n            showingInfoWindow: true,\r\n            selectedPlace: props,\r\n            mapZoom: 17\r\n        });\r\n    }\r\n\r\n    onJamCenter = (jamId) => {\r\n        const marker  = this.state.markers.find(marker => {\r\n            return marker.key === jamId\r\n        })\r\n        const props = marker.props\r\n        this.setState({\r\n            selectedPlace: props,\r\n            mapZoom: 17\r\n        });\r\n    }\r\n\r\n    onClose = props => {\r\n        if (this.state.showingInfoWindow) {\r\n          this.setState({\r\n            showingInfoWindow: false,\r\n            activeMarker: null\r\n          });\r\n        }\r\n      };\r\n    displayMarkers = () => {\r\n        return this.props.jams.map(jam => {\r\n                return  <Marker key={jam._id} \r\n                    position={{\r\n                        lat: jam.location.lat,\r\n                        lng: jam.location.lng\r\n                    }} \r\n                    onMousedown={this.onMarkerClick}\r\n                    name={jam.title}\r\n                    currMembers={jam.usersGoing.length}\r\n                    capacity={jam.capacity}\r\n                    icon={{\r\n                        url: jamMarker,\r\n                        anchor: new this.props.google.maps.Point(32,32),\r\n                        scaledSize:  new this.props.google.maps.Size(50,50)\r\n                    }}\r\n                />\r\n            });\r\n    }\r\n      \r\n    //   centerMoved(mapProps, map) {\r\n    //       console.log(map.center.lat());\r\n          \r\n    //   }\r\n    _mapLoaded(mapProps, map) {\r\n        map.setOptions({\r\n           styles: mapStyle\r\n        })\r\n    }    \r\n\r\n    render() {\r\n        const { jams, loggedInUser } = this.props\r\n        const {userPos, selectedPlace, mapZoom, markers} = this.state\r\n        if (!selectedPlace || jams.length === 0) {\r\n            return <div className=\"loader main-content pos-relative\">\r\n            <Loader type=\"Bars\" color=\"#00475F\" height={200} width={200} timeout={5000} />\r\n         </div>\r\n        } \r\n        return (\r\n            <>\r\n            <section className=\"flex explore-container pos-relative\">\r\n                <button onClick={()=>{\r\n                    const selectedPlaceCopy = {...selectedPlace}\r\n                    selectedPlaceCopy.position.lat = userPos.position.lat\r\n                    selectedPlaceCopy.position.lng = userPos.position.lng\r\n                    this.setState({selectedPlace: selectedPlaceCopy, mapZoom: 15})\r\n                    }}><GpsFixedIcon style={{fontSize: 40}}/></button>\r\n                <Map\r\n                    ref={this.mapRef}\r\n                    // containerStyle={containerStyle}\r\n                    google={this.props.google}\r\n                    zoom={mapZoom}\r\n                    style={mapStyles}\r\n                    // centerAroundCurrentLocation={true}\r\n                    initialCenter={{lat: selectedPlace.position.lat, lng: selectedPlace.position.lng}}\r\n                    center={{lat: selectedPlace.position.lat, lng: selectedPlace.position.lng}}\r\n                    onReady={(mapProps, map) => this._mapLoaded(mapProps, map)}\r\n                    disableDefaultUI= {true}\r\n                    // onBoundsChanged={this.centerMoved}\r\n                >\r\n                {markers}\r\n                {loggedInUser && <Marker\r\n                    name={'Your position'}\r\n                    position={userPos.position}\r\n                    icon={{\r\n                    url: loggedInUser.imgUrl,\r\n                    anchor: new this.props.google.maps.Point(32,32),\r\n                    scaledSize:  new this.props.google.maps.Size(50,50)\r\n                    }}\r\n                    />}\r\n                <InfoWindow\r\n                marker={this.state.activeMarker}\r\n                visible={this.state.showingInfoWindow}\r\n                onClose={this.onClose}\r\n              >\r\n                <div>\r\n                    <h2>{this.state.selectedPlace.name}</h2>\r\n                    <h3>Capacity: {this.state.selectedPlace.currMembers} / {this.state.selectedPlace.capacity}</h3>\r\n                </div>\r\n                </InfoWindow>\r\n            </Map>\r\n            <div className=\"jams-explore-container\">\r\n                <div className=\"jams-explore-filter flex column\">\r\n                    <h1>Filter Jams</h1>\r\n                    <div className=\"filter-inputs\">\r\n                        <input type=\"text\" name=\"name\" id=\"\"/>\r\n                        <select name=\"filterByInst\">\r\n                            <option value=\"\">By Instrument Missing</option>\r\n                            <option value=\"\">Singer</option>\r\n                            <option value=\"\">Guitar</option>\r\n                            <option value=\"\">Drums</option>\r\n                            <option value=\"\">Bass</option>\r\n                            <option value=\"\">Keyboard</option>\r\n                        </select>\r\n                        <select name=\"filterByRegion\">\r\n                            <option value=\"\">By Region</option>\r\n                            <option value=\"\">North</option>\r\n                            <option value=\"\">Center</option>\r\n                            <option value=\"\">South</option>\r\n                        </select>\r\n                    </div>\r\n                </div>\r\n                <ul className=\"jams-explore-list\">\r\n                    {jams.map((jam) => (\r\n                        <JamPreview key={jam._id} jam={jam}/>\r\n                    ))}\r\n                </ul>\r\n            </div>\r\n            </section>\r\n            </>\r\n        );\r\n    }\r\n}\r\n\r\nconst mapStateToProps = (state) => {\r\n    return {\r\n        jams: state.jamModule.jams,\r\n        users: state.userModule.users,\r\n        loggedInUser: state.userModule.loggedInUser \r\n    };\r\n};\r\nconst mapDispatchToProps = {\r\n    loadJams,\r\n    loadUsers,\r\n};\r\n\r\nexport const JamExplore = GoogleApiWrapper({\r\n    apiKey: \"AIzaSyBTd-r9ES9me88-mTQasKgom191cNMihjY\",\r\n})(connect(mapStateToProps, mapDispatchToProps)(_JamExplore));\r\n","C:\\Users\\danie\\OneDrive\\שולחן העבודה\\dev\\jameet\\jammit\\frontend\\src\\pages\\JamCreate.jsx",[],"C:\\Users\\danie\\OneDrive\\שולחן העבודה\\dev\\jameet\\jammit\\frontend\\src\\pages\\MembersList.jsx",[],"C:\\Users\\danie\\OneDrive\\שולחן העבודה\\dev\\jameet\\jammit\\frontend\\src\\cmps\\MainNav.jsx",["199"],"import { withRouter, NavLink } from 'react-router-dom'\r\nimport { connect } from 'react-redux'\r\nimport { logout } from '../store/actions/userActions.js'\r\nimport React, { Component } from 'react'\r\nimport { mainNavService } from '../services/mainNavService.js'\r\nimport recordlogo from \"../assets/img/recordlogo.png\"\r\nclass _MainNav extends Component {\r\n\r\n\r\n    componentDidMount() {\r\n        mainNavService.setHomePageNavStyle()\r\n    }\r\n\r\n    componentDidUpdate() {\r\n        // let {locationPathName }= this.props.location.pathname\r\n        if( this.props.location.pathname !== '/'){\r\n            mainNavService.setNavStyle()\r\n        }else{\r\n            mainNavService.setHomePageNavStyle()\r\n        }\r\n    }\r\n\r\n    render() {\r\n        const { loggedInUser } = this.props;\r\n        return (\r\n            <nav className=\"navbar flex\">\r\n                <div className=\"nav-links\">\r\n                    <NavLink to=\"/\" className=\"top-nav-logo\"><img src={recordlogo} alt=\"logo\"/></NavLink>\r\n                    <NavLink to=\"/search\">Jams</NavLink>\r\n                    <NavLink to=\"/members\">Members</NavLink>\r\n                </div>\r\n                <div className=\"user-nav\">\r\n                    {loggedInUser ? <NavLink to=\"/user\">\r\n                        <div className=\"avatar-wrapper\">\r\n                            <img src={loggedInUser.imgUrl} />\r\n                        </div>\r\n                    </NavLink>\r\n                    :\r\n                    <NavLink to=\"/login\">Login</NavLink>}\r\n                </div>\r\n            </nav>\r\n        )\r\n    }\r\n}\r\nconst mapStateToProps = state => {\r\n    return {\r\n        loggedInUser: state.userModule.loggedInUser\r\n    }\r\n}\r\nconst mapDispatchToProps = {\r\n    logout\r\n}\r\n\r\n\r\nexport const MainNav = withRouter(connect(mapStateToProps, mapDispatchToProps)(_MainNav))\r\n","C:\\Users\\danie\\OneDrive\\שולחן העבודה\\dev\\jameet\\jammit\\frontend\\src\\pages\\Home.jsx",["200","201","202"],"import React, { Component } from 'react'\r\nimport { connect } from 'react-redux'\r\nimport { loadJams } from '../store/actions/jamActions.js'\r\nimport { loadUsers, login } from '../store/actions/userActions.js'\r\nimport { UserList } from '../cmps/UserList.jsx'\r\nimport { JamScroll } from '../cmps/JamScroll.jsx'\r\nimport { HeroSection } from '../cmps/HeroSection.jsx'\r\nimport Loader from 'react-loader-spinner'\r\n\r\nclass _Home extends Component {\r\n  state = {\r\n    upcomingJams: []\r\n  }\r\n  componentDidMount() {\r\n    this.props.loadJams()\r\n    this.props.loadUsers()\r\n    this.getUpcomingJams()\r\n  }\r\n\r\n  getUpcomingJams = ()=> {\r\n    const upcomingJams = this.props.jams.filter(jam => {\r\n      const weekFromNow = new Date().getTime()+86400000*7\r\n      return jam.startsAt > Date.now() && jam.startsAt < weekFromNow\r\n    })\r\n    this.setState({upcomingJams})\r\n  }\r\n\r\n  render() {\r\n    const { jams, users, loggedInUser } = this.props\r\n    const { upcomingJams } = this.state\r\n    if (jams.length === 0 || users.length === 0) \r\n      return  <div className=\"loader main-content pos-relative\">\r\n                <Loader type=\"Bars\" color=\"#00475F\" height={200} width={200} timeout={5000} />\r\n              </div>\r\n    return ( \r\n      <div className=\"home\">\r\n        <HeroSection/>\r\n        <main className=\"main-content zebra-container flex column space-between\">\r\n          <div className=\"jams section\">\r\n              <h1>Most Popular Jams</h1>\r\n              <JamScroll jams={jams} />\r\n          </div>\r\n          <div className=\"jams section\">\r\n              <h1>Upcoming This Week</h1>\r\n              <JamScroll jams={upcomingJams} />\r\n          </div>\r\n          <div className=\"jams section\">\r\n              <h1>Jams</h1>\r\n              <JamScroll jams={upcomingJams} />\r\n          </div>\r\n\r\n          <div className=\"members-container section\">\r\n            <div className=\"members-list-preview\">\r\n              <h1>Featured Members</h1>\r\n              <UserList users={users.filter((user,idx)=>{\r\n                if (idx < 4) return user // user.slice\r\n                })}/>\r\n            </div>\r\n          </div>\r\n        </main>\r\n      </div>\r\n    )\r\n  }\r\n}\r\n\r\nconst mapStateToProps = state => {\r\n  return {\r\n    jams: state.jamModule.jams,\r\n    users: state.userModule.users,\r\n    loggedInUser: state.userModule.loggedInUser\r\n  }\r\n}\r\nconst mapDispatchToProps = {\r\n  loadJams,\r\n  loadUsers,\r\n}\r\n\r\nexport const Home = connect(mapStateToProps, mapDispatchToProps)(_Home)\r\n","C:\\Users\\danie\\OneDrive\\שולחן העבודה\\dev\\jameet\\jammit\\frontend\\src\\pages\\UserProfile.jsx",[],"C:\\Users\\danie\\OneDrive\\שולחן העבודה\\dev\\jameet\\jammit\\frontend\\src\\pages\\JamDetails.jsx",["203","204"],"import React, { Component } from 'react'\r\nimport { jamService } from '../services/jamService'\r\nimport RoomRoundedIcon from '@material-ui/icons/RoomRounded';\r\nimport AccessTimeRoundedIcon from '@material-ui/icons/AccessTimeRounded';\r\nimport PeopleAltRoundedIcon from '@material-ui/icons/PeopleAltRounded';\r\nimport EmojiPeopleRoundedIcon from '@material-ui/icons/EmojiPeopleRounded';\r\nimport HomeIcon from '@material-ui/icons/Home';\r\nimport { MapContainer } from '../cmps/MapContainer';\r\nimport { JamUserPreview } from '../cmps/JamUserPreview';\r\nimport { utilService } from '../services/utilService';\r\nimport { Link } from 'react-router-dom';\r\nimport { JamNavbar } from '../cmps/JamDetailsNavbar';\r\nimport JamGoingListModal from '../cmps/JamGoingModal';\r\nimport { connect } from 'react-redux';\r\nimport { updateJamGoing, loadJams, saveJam } from '../store/actions/jamActions.js';\r\n// import { jamGoingListModal } from '../cmps/JamGoingModal'\r\n// import { loadJams } from '../store/actions/jamActions'\r\nimport HourglassEmptyRoundedIcon from '@material-ui/icons/HourglassEmptyRounded';\r\nimport Loader from 'react-loader-spinner';\r\n\r\nconst emptyJam = {\r\n    title: \"\",\r\n    description: \"\",\r\n    imgUrl: \"http://some-img\",\r\n    capacity: null,\r\n    location: {\r\n        region: \"\",\r\n        city: \"\",\r\n        address: \"\",\r\n        lat: null,\r\n        lng: null\r\n    },\r\n    createdBy: {},\r\n    startsAt: null,\r\n    tags: [],\r\n    createdAt: null,\r\n    usersGoing: []\r\n}\r\n\r\nclass _JamDetails extends Component {\r\n    state = {\r\n        jam: null,\r\n        isUserAdmin: false,\r\n        isEditMode: false\r\n    }\r\n\r\n\r\n    async componentDidMount() {\r\n        this.props.loadJams()\r\n        if (this.props.isEditMode) {\r\n            this.setState({ jam: emptyJam, isEditMode: true, isUserAdmin: true })\r\n        }\r\n        else {\r\n            const jam = await jamService.getById(this.props.match.params.id);\r\n            console.log(jam);\r\n            this.setState({ jam }, () => {\r\n                this.checkIfUserHost()\r\n            })\r\n        }\r\n    }\r\n\r\n    componentWillReceiveProps(props) {\r\n        if (props.isSubmit) {\r\n            const miniUser = {}\r\n            miniUser._id = this.props.loggedInUser._id\r\n            miniUser.fullname = this.props.loggedInUser.fullname\r\n            miniUser.imgUrl = this.props.loggedInUser.imgUrl\r\n            miniUser.playing = this.props.loggedInUser.talents\r\n            this.props.saveJam(this.state.jam, miniUser)\r\n            this.props.jamSaved()\r\n        }\r\n        this.setState({ jam: props.jam })\r\n    }\r\n\r\n    componentDidUpdate(prevProps) {\r\n        if (this.state.isEditMode) return\r\n        if (this.props.jams !== prevProps.jams) {\r\n            this.setState({ jam: this.props.jams.find(jam => jam._id === this.props.match.params.id) });\r\n        }\r\n    }\r\n\r\n    checkIfUserHost = () => {\r\n        if (!this.props.loggedInUser) return\r\n        if (this.props.loggedInUser._id === this.state.jam.createdBy._id) {\r\n            this.setState({ isUserAdmin: true })\r\n        }\r\n    }\r\n\r\n    render() {\r\n        const { jam, isEditMode, isUserAdmin } = this.state\r\n        return (\r\n            <section className=\"jam-details\">\r\n                {!this.state.jam && <div className=\"loader main-content pos-relative\">\r\n                    <Loader type=\"Bars\" color=\"#00475F\" height={200} width={200} timeout={5000} />\r\n                </div>}\r\n                {this.state.jam &&\r\n                    <div className=\"page-con\">\r\n                        <div className=\"jam-title-img-con\">\r\n                            \r\n                            <h1 className=\"jam-title\">{this.state.jam.title}</h1>\r\n                        </div>\r\n                        {!this.state.isEditMode && <div>\r\n                            <JamNavbar\r\n                                history={this.props.history}\r\n                                user={this.props.loggedInUser}\r\n                                jam={this.state.jam}\r\n                                updateJamGoing={this.props.updateJamGoing}\r\n                                isUserAdmin={this.state.isUserAdmin}\r\n                            />\r\n                        </div>}\r\n                        <div className=\"page-content\">\r\n                            <div className=\"left-page-details\">\r\n                                <div className=\"details-con\">\r\n                                    <h3 className=\"title-style\">Details</h3>\r\n                                    <p><span className=\"icon-style\"><HourglassEmptyRoundedIcon /></span><span className=\"details-style\">{this.state.jam.capacity - this.state.jam.usersGoing.length} Slots Available</span></p>\r\n                                    <p><span className=\"icon-style\"><PeopleAltRoundedIcon /></span> <span className=\"details-style\">{this.state.jam.usersGoing.length} People going</span></p>\r\n                                    {!isEditMode && <p><span className=\"icon-style\"><EmojiPeopleRoundedIcon /></span> <span className=\"details-style\">Created by <Link to={\"/user/\" + this.state.jam.createdBy._id} > {this.state.jam.createdBy.fullname}</Link></span></p>}\r\n                                    <p><span className=\"icon-style\"><RoomRoundedIcon /></span> <span className=\"details-style\">{this.state.jam.location.address}, {this.state.jam.location.city}</span></p>\r\n                                    <p><span className=\"icon-style\"><AccessTimeRoundedIcon /></span> <span className=\"details-style\">{utilService.getFormattedDate(this.state.jam.startsAt)}</span></p>\r\n                                    <div className=\"description-con\">\r\n                                        <h3 className=\"title-style\">Description</h3>\r\n                                        <p>{this.state.jam.description}</p>\r\n                                    </div>\r\n                                        <ul className=\"jam-card-tags flex\">{jam.tags.map((tag, idx) => {\r\n                                            return <li key={idx}>{tag}</li>\r\n                                        })}\r\n                                        </ul>                               \r\n                                </div>\r\n                            </div>\r\n                            <div className=\"left-page-con\">\r\n                                <div className=\"location-con\">\r\n                                    <h3 className=\"title-style\">Location</h3>\r\n                                    <div><MapContainer lat={this.state.jam.location.lat} lng={this.state.jam.location.lng} /></div>\r\n                                </div>\r\n                                {!isEditMode && <div className=\"users-going-con-section\">\r\n                                    <ul className=\"users-going-con\">\r\n                                        {this.state.jam.usersGoing.slice(0, 3).map(function (user, index) {\r\n                                            return <JamUserPreview key={index} user={user} />\r\n                                        })}\r\n\r\n                                    </ul>\r\n                                    <div className=\"users-going-actions\"> <JamGoingListModal usersGoing={this.state.jam.usersGoing} /> </div>\r\n                                </div>}\r\n                            </div>\r\n                        </div>\r\n                    </div>}\r\n            </section>\r\n        )\r\n    }\r\n}\r\n\r\n\r\nconst mapStateToProps = state => {\r\n    return {\r\n        loggedInUser: state.userModule.loggedInUser,\r\n        jams: state.jamModule.jams\r\n    }\r\n}\r\nconst mapDispatchToProps = {\r\n    loadJams,\r\n    saveJam,\r\n    updateJamGoing\r\n}\r\n\r\nexport const JamDetails = connect(mapStateToProps, mapDispatchToProps)(_JamDetails)","C:\\Users\\danie\\OneDrive\\שולחן העבודה\\dev\\jameet\\jammit\\frontend\\src\\store\\reducers\\index.js",[],"C:\\Users\\danie\\OneDrive\\שולחן העבודה\\dev\\jameet\\jammit\\frontend\\src\\pages\\UserSection.jsx",["205"],"import React, { Component } from \"react\";\r\nimport { connect } from \"react-redux\";\r\nimport { loadUsers } from \"../store/actions/userActions\";\r\nimport { loadJams } from \"../store/actions/jamActions\";\r\nimport { UserInfo } from \"../cmps/UserProfile/UserInfo\";\r\nimport { UserTalents } from \"../cmps/UserProfile/UserTalents\";\r\nimport { JamList } from \"../cmps/JamList\";\r\nimport { UserList } from \"../cmps/UserList\";\r\nimport { JamCreate } from \"./JamCreate\";\r\n\r\nclass _UserSection extends Component {\r\n\r\n    state = {\r\n        activeTab : 'events'\r\n    }\r\n\r\n    componentDidMount() {\r\n        this.props.loadJams()\r\n        this.props.loadUsers()\r\n    }\r\n\r\n    onTabChoose = (tab)=> {\r\n        this.setState({activeTab: tab})\r\n    }\r\n\r\n    filterJamsByInst = () => {\r\n        return this.props.jams.filter((jam) => {\r\n            const user = jam.usersGoing.find((user) => {\r\n                return user.playing.some((inst) => {\r\n                    return inst === this.props.loggedInUser.talents[0];\r\n                });\r\n            });\r\n            if (!user) return jam;\r\n        });\r\n    };\r\n\r\n    filterMembersByFollow = () => {\r\n        return this.props.users.filter((user) => {\r\n            return user.followers.find(\r\n                (user) => user._id === this.props.loggedInUser._id\r\n            );\r\n        });\r\n    };\r\n\r\n    filterJamsByRegion = () => {\r\n        return this.props.jams.filter((jam) => {\r\n            return (\r\n                jam.location.region === this.props.loggedInUser.location.region\r\n            );\r\n        });\r\n    };\r\n\r\n    filterUserCreatedJams = () => {\r\n        return this.props.jams.filter(jam => jam.createdBy._id === this.props.loggedInUser._id)\r\n    }\r\n\r\n    render() {\r\n        const { jams, loggedInUser } = this.props\r\n        const { activeTab } = this.state\r\n        if (jams.length === 0 ) return <h2>loading...</h2>\r\n        return (<>\r\n            \r\n            <main className=\"main-content user-section flex\">\r\n                <div className=\"user-details-aside flex column\">\r\n                    <UserInfo user={loggedInUser} isUserAdmin={true} />\r\n                    <UserTalents user={loggedInUser} isUserAdmin={true} />\r\n                    <button onClick={()=>this.onTabChoose('create')}>Start A New Jam</button>\r\n                </div>\r\n                <div className=\"filtered-jams section\">\r\n                    <div className=\"user-section-toolbar\">\r\n                        <ul className=\"toolbar-left\">\r\n                            <li onClick={()=>this.onTabChoose('events')} className={activeTab === 'events' ? 'active' : ''}>Explore Jams</li>\r\n                            <li onClick={()=>this.onTabChoose('members')} className={activeTab === 'members' ? 'active' : ''}>Members</li>\r\n                            <li onClick={()=>this.onTabChoose('manage')} className={activeTab === 'manage' ? 'active' : ''}>Manage Your Jams</li>\r\n                        </ul>\r\n                        \r\n                        \r\n                    </div>\r\n                   {activeTab === 'events' && <div>\r\n                        <h1>Jams Without {loggedInUser.talents[0]}</h1>\r\n                        <JamList jams={this.filterJamsByInst()} />\r\n                        <h1>Jams Around {loggedInUser.location.region} Region</h1>\r\n                        <JamList jams={this.filterJamsByRegion()} />\r\n                    </div>}\r\n                    {activeTab === 'members' && <div>\r\n                        <h1>Members You Follow</h1>\r\n                        <UserList users={this.filterMembersByFollow()}/>\r\n                    </div>}\r\n                    {activeTab === 'manage' && this.filterUserCreatedJams().length > 0 && \r\n                        <div>\r\n                            <h1>Jams Dashboard</h1>\r\n                            <JamList users={this.this.filterUserCreatedJams()}/>\r\n                    </div>}\r\n                    {activeTab === 'manage' && <h1>You haven't created any jams yet... </h1>\r\n                    }\r\n                    {activeTab === 'create' &&\r\n                        <div>\r\n                            <JamCreate/>\r\n                        </div>\r\n                    }\r\n                </div>\r\n          </main>\r\n        </>)\r\n    }\r\n}\r\nconst mapStateToProps = (state) => {\r\n    return {\r\n        jams: state.jamModule.jams,\r\n        users: state.userModule.users,\r\n        loggedInUser: state.userModule.loggedInUser,\r\n    };\r\n};\r\nconst mapDispatchToProps = {\r\n    loadJams,\r\n    loadUsers,\r\n};\r\n\r\nexport const UserSection = connect(mapStateToProps, mapDispatchToProps)(_UserSection);","C:\\Users\\danie\\OneDrive\\שולחן העבודה\\dev\\jameet\\jammit\\frontend\\src\\cmps\\JamList.jsx",[],"C:\\Users\\danie\\OneDrive\\שולחן העבודה\\dev\\jameet\\jammit\\frontend\\src\\cmps\\LoaderSpinner.jsx",[],"C:\\Users\\danie\\OneDrive\\שולחן העבודה\\dev\\jameet\\jammit\\frontend\\src\\store\\actions\\userActions.js",[],"C:\\Users\\danie\\OneDrive\\שולחן העבודה\\dev\\jameet\\jammit\\frontend\\src\\cmps\\JamScroll.jsx",[],"C:\\Users\\danie\\OneDrive\\שולחן העבודה\\dev\\jameet\\jammit\\frontend\\src\\services\\mainNavService.js",[],"C:\\Users\\danie\\OneDrive\\שולחן העבודה\\dev\\jameet\\jammit\\frontend\\src\\cmps\\JamPreview.jsx",["206"],"import LocationOnIcon from '@material-ui/icons/LocationOn';\r\nimport {instIcons} from '../assets/img/inst-icons/icons.js'\r\nimport { Link } from \"react-router-dom\";\r\n\r\nexport function JamPreview({ jam }) {\r\n\r\n    function showIcons (){\r\n        return instIcons.map(icon=>{\r\n            const user = jam.usersGoing.find(user => {\r\n                return user.playing.some(inst=>{\r\n                    const instName = Object.keys(icon)[0]\r\n                    return instName === inst\r\n                })\r\n            })\r\n            if (user) return <img className=\"inst-icon\" src={Object.values(icon)[0]} alt=\"instrument\"/>\r\n        })\r\n    }\r\n    console.log(jam);\r\n    const slotsLeft = jam.capacity - jam.usersGoing.length\r\n    \r\n    return (\r\n        <Link to={`/jam/${jam._id}`}><li className=\"jam-card flex column\">\r\n            <div className=\"thumb-wrapper flex column pos-relative\">\r\n                <img className=\"jam-thumb\" src=\"https://res.cloudinary.com/dhplco0k4/image/upload/v1610961691/jameet/jam1_cgx6jw.jpg\" alt=\"jam-thumbnail\"/>\r\n                <div className=\"inst-icons-wrapper\">\r\n                    {showIcons()}\r\n                </div>\r\n            </div>\r\n            <div className=\"jam-card-content flex\">\r\n                <div className=\"date-wrapper\">\r\n                    <div className=\"date-month\">\r\n                        {new Intl.DateTimeFormat('il', { month: 'short' }).format(new Date(jam.startsAt))}\r\n                    </div>\r\n                    <div className=\"date-day\">\r\n                        {new Date(jam.startsAt).toLocaleString('he-IL',{day: '2-digit'})}\r\n                    </div>\r\n                </div>\r\n                <div className=\"jam-details-wrapper\">\r\n                    <h2>{jam.title}</h2>\r\n                \r\n                    <ul className=\"jam-card-tags flex\">{jam.tags.map((tag, idx) => {\r\n                        return <li key={idx}>{tag}</li> })}\r\n                    </ul>\r\n                \r\n                    <div>\r\n                        <p><LocationOnIcon/>{jam.location.city}</p>\r\n                    </div>\r\n                    <div className=\"going-wrapper flex\">\r\n                        <span>\r\n                            {jam.usersGoing.length} People Are Going\r\n                        </span>\r\n                        <span className={slotsLeft < 10 ? 'red' : 'green'}>\r\n                              {slotsLeft} Slots Left\r\n                        </span>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        </li></Link> \r\n    );\r\n}","C:\\Users\\danie\\OneDrive\\שולחן העבודה\\dev\\jameet\\jammit\\frontend\\src\\services\\authService.js",[],"C:\\Users\\danie\\OneDrive\\שולחן העבודה\\dev\\jameet\\jammit\\frontend\\src\\store\\actions\\jamActions.js",["207"],"C:\\Users\\danie\\OneDrive\\שולחן העבודה\\dev\\jameet\\jammit\\frontend\\src\\cmps\\HeroSection.jsx",[],"C:\\Users\\danie\\OneDrive\\שולחן העבודה\\dev\\jameet\\jammit\\frontend\\src\\cmps\\UserList.jsx",[],"C:\\Users\\danie\\OneDrive\\שולחן העבודה\\dev\\jameet\\jammit\\frontend\\src\\services\\userService.js",[],"C:\\Users\\danie\\OneDrive\\שולחן העבודה\\dev\\jameet\\jammit\\frontend\\src\\services\\utilService.js",[],"C:\\Users\\danie\\OneDrive\\שולחן העבודה\\dev\\jameet\\jammit\\frontend\\src\\store\\reducers\\reviewReducer.js",[],"C:\\Users\\danie\\OneDrive\\שולחן העבודה\\dev\\jameet\\jammit\\frontend\\src\\store\\reducers\\systemReducer.js",[],"C:\\Users\\danie\\OneDrive\\שולחן העבודה\\dev\\jameet\\jammit\\frontend\\src\\store\\reducers\\userReducer.js",[],"C:\\Users\\danie\\OneDrive\\שולחן העבודה\\dev\\jameet\\jammit\\frontend\\src\\store\\reducers\\jamReducer.js",[],"C:\\Users\\danie\\OneDrive\\שולחן העבודה\\dev\\jameet\\jammit\\frontend\\src\\cmps\\JamCreateForm.jsx",[],"C:\\Users\\danie\\OneDrive\\שולחן העבודה\\dev\\jameet\\jammit\\frontend\\src\\assets\\img\\inst-icons\\icons.js",[],"C:\\Users\\danie\\OneDrive\\שולחן העבודה\\dev\\jameet\\jammit\\frontend\\src\\services\\jamService.js",["208"],"import { httpService } from './httpService'\r\n// import { storageService } from './asyncStorageService'\r\nimport userService from './userService'\r\n// import { utilService } from './utilService'\r\n// import { userService } from './userService'\r\n\r\nexport const jamService = {\r\n    query,\r\n    getById,\r\n    updateJamGoing,\r\n    save\r\n}\r\n\r\nfunction query() {\r\n    // var queryStr = (!filterBy) ? '' : `?name=${filterBy.name}&sort=${sortBy}`\r\n    return httpService.get(`jam`)\r\n    // return jams;\r\n}\r\n\r\nfunction save(jam) {\r\n    return httpService.post(`jam`, jam)\r\n}\r\n\r\nfunction getById(jamId) {\r\n    // return jams.find(jam => jam._id === jamId)\r\n    // return storageService.get('jam', jamId)\r\n    return httpService.get(`jam/${jamId}`)\r\n}\r\n\r\n\r\nfunction updateJamGoing(jamId, user, isGoing) {\r\n    //UPDATE THE SERVER USER IS NOT GOING\r\n    // jams.find(jam => jam._id === jamId).usersGoing.push(user);\r\n     return httpService.put(`jam/${jamId}/isGoing`, {user:  {_id: user._id, fullname: user.fullname, imgUrl: user.imgUrl, playing: user.playing} , isGoing: isGoing})\r\n  \r\n}\r\n\r\n\r\n\r\n\r\n\r\n\r\n","C:\\Users\\danie\\OneDrive\\שולחן העבודה\\dev\\jameet\\jammit\\frontend\\src\\cmps\\UserPreview.jsx",["209","210","211"],"import { useHistory } from \"react-router-dom\";\r\nimport LocationOnIcon from '@material-ui/icons/LocationOn';\r\nimport {instIcons} from '../assets/img/inst-icons/icons.js'\r\n\r\nexport function UserPreview({ user }) {\r\n\r\n    function showIcons() {\r\n        return instIcons.map(icon=>{\r\n            const talent = user.talents.find(talent=>{\r\n                return (talent === Object.keys(icon)[0])\r\n            })\r\n            if (talent) return <img className=\"user-inst-icon\" src={Object.values(icon)[0]} alt=\"instrument\"/>\r\n        })\r\n    }\r\n\r\n    const history = useHistory()\r\n    return (\r\n        <li className=\"user-card flex column\" onClick={()=>history.push(`/user/${user._id}`)}>\r\n            <div className=\"thumb flex column pos-relative\">\r\n                <div className=\"img-wrapper flex justify-center\">\r\n                    <img className=\"user-card thumb\" src={user.imgUrl} className=\"userThumb\" alt=\"user-thumbnail\"/>\r\n                    <div className=\"user-inst-icons-wrapper\">\r\n                        {showIcons()}\r\n                    </div>\r\n                </div>\r\n            </div>\r\n            <div className=\"user-card-content flex column\">\r\n                <h2>{user.username}</h2>\r\n                <ul className=\"user-card-tags flex\">{user.tags.map((tag, idx) => {\r\n                    if (idx < 3) return <li key={idx}>{tag}</li> })}\r\n                </ul>\r\n                <p><LocationOnIcon/>{user.location.city}</p>\r\n            </div>\r\n        </li>\r\n    );\r\n}","C:\\Users\\danie\\OneDrive\\שולחן העבודה\\dev\\jameet\\jammit\\frontend\\src\\cmps\\JamUserPreview.jsx",[],"C:\\Users\\danie\\OneDrive\\שולחן העבודה\\dev\\jameet\\jammit\\frontend\\src\\cmps\\MapContainer.jsx",[],"C:\\Users\\danie\\OneDrive\\שולחן העבודה\\dev\\jameet\\jammit\\frontend\\src\\cmps\\UserProfile\\UserTalents.jsx",["212"],"export function UserTalents({user}) {\r\n    return (\r\n        <div className=\"user-right-box flex column\">\r\n            <div className=\"top-card\">\r\n              <h1>Talents</h1>\r\n            <div className=\"user-talents\">\r\n              <ul className=\"flex column\">{user.talents.map((talent, idx) => {\r\n                return <li key={idx}>{talent}</li>\r\n              })}</ul>\r\n            </div>\r\n            </div>\r\n               <div className=\"followers bottom-card\">\r\n                <h1>Followers</h1>\r\n              {user.followers.map((follower, idx) => {\r\n                return <img className=\"follower-avatar\" src={follower.imgUrl} key={idx} />\r\n              })}\r\n            </div>\r\n        </div>\r\n    )\r\n}","C:\\Users\\danie\\OneDrive\\שולחן העבודה\\dev\\jameet\\jammit\\frontend\\src\\cmps\\JamGoingModal.jsx",[],"C:\\Users\\danie\\OneDrive\\שולחן העבודה\\dev\\jameet\\jammit\\frontend\\src\\cmps\\JamDetailsNavbar.jsx",[],"C:\\Users\\danie\\OneDrive\\שולחן העבודה\\dev\\jameet\\jammit\\frontend\\src\\cmps\\UserProfile\\UserInfo.jsx",["213","214","215"],"import ChatRoundedIcon from '@material-ui/icons/ChatRounded';\r\nimport FavoriteBorderRoundedIcon from '@material-ui/icons/FavoriteBorderRounded';\r\nimport LocationOnOutlinedIcon from '@material-ui/icons/LocationOnOutlined';\r\nimport FavoriteRoundedIcon from '@material-ui/icons/FavoriteRounded';\r\nimport AddRoundedIcon from '@material-ui/icons/AddRounded';\r\nimport { useHistory } from 'react-router';\r\n\r\n\r\nexport function UserInfo({user, followToggle, onFollowIconClick, isUserAdmin}) {\r\n    const history = useHistory()\r\n    return (\r\n        <div className=\"user-left-box flex column\">\r\n            <div className=\"user-basic-info flex\">\r\n                <div className=\"user-img\">\r\n                    <img src={user.imgUrl} />\r\n                </div>\r\n                <div className=\"user-tags-name flex column\">\r\n                    <span className=\"user-stage-name fs30\">{user.username}</span>\r\n                    <div className=\"user-location\">\r\n                    <LocationOnOutlinedIcon className=\"location-icon\" />\r\n                    <span>{user.location.city}</span>\r\n                    </div>\r\n                    <ul className=\"user-tags flex\">{user.tags.map((tag, idx) => {\r\n                            return <li key={idx}>{tag}</li> })}\r\n                    </ul>\r\n                </div>\r\n            </div>\r\n            <div className=\"user-about\">\r\n                <span>{user.about}</span>\r\n            </div>\r\n            {!isUserAdmin && <div className=\"reaction-icon\">\r\n                <ChatRoundedIcon style={{fontSize: 40}}/>\r\n                {!followToggle ? <FavoriteBorderRoundedIcon style={{fontSize: 40}} onClick={()=>onFollowIconClick()}/>\r\n                : <FavoriteRoundedIcon style={{fontSize: 40}} onClick={()=>onFollowIconClick()}/>}  \r\n            </div>}\r\n        </div>\r\n        \r\n    )\r\n}","C:\\Users\\danie\\OneDrive\\שולחן העבודה\\dev\\jameet\\jammit\\frontend\\src\\services\\httpService.js",[],"C:\\Users\\danie\\OneDrive\\שולחן העבודה\\dev\\jameet\\jammit\\frontend\\src\\cmps\\LoginModal.jsx",[],"C:\\Users\\danie\\OneDrive\\שולחן העבודה\\dev\\jameet\\jammit\\frontend\\src\\cmps\\InviteModal.jsx",[],"C:\\Users\\danie\\OneDrive\\שולחן העבודה\\dev\\jameet\\jammit\\frontend\\src\\cmps\\InviteFriends.jsx",[],{"ruleId":"216","replacedBy":"217"},{"ruleId":"218","replacedBy":"219"},{"ruleId":"220","severity":1,"message":"221","line":6,"column":8,"nodeType":"222","messageId":"223","endLine":6,"endColumn":16},{"ruleId":"220","severity":1,"message":"224","line":7,"column":10,"nodeType":"222","messageId":"223","endLine":7,"endColumn":19},{"ruleId":"220","severity":1,"message":"225","line":8,"column":10,"nodeType":"222","messageId":"223","endLine":8,"endColumn":17},{"ruleId":"220","severity":1,"message":"226","line":12,"column":10,"nodeType":"222","messageId":"223","endLine":12,"endColumn":23},{"ruleId":"227","severity":1,"message":"228","line":35,"column":29,"nodeType":"229","endLine":35,"endColumn":62},{"ruleId":"220","severity":1,"message":"230","line":4,"column":21,"nodeType":"222","messageId":"223","endLine":4,"endColumn":26},{"ruleId":"220","severity":1,"message":"231","line":29,"column":26,"nodeType":"222","messageId":"223","endLine":29,"endColumn":38},{"ruleId":"232","severity":1,"message":"233","line":55,"column":55,"nodeType":"234","messageId":"235","endLine":55,"endColumn":57},{"ruleId":"220","severity":1,"message":"236","line":7,"column":8,"nodeType":"222","messageId":"223","endLine":7,"endColumn":16},{"ruleId":"220","severity":1,"message":"237","line":90,"column":34,"nodeType":"222","messageId":"223","endLine":90,"endColumn":45},{"ruleId":"232","severity":1,"message":"233","line":27,"column":45,"nodeType":"234","messageId":"235","endLine":27,"endColumn":47},{"ruleId":"232","severity":1,"message":"238","line":8,"column":34,"nodeType":"234","messageId":"235","endLine":8,"endColumn":36},{"ruleId":"220","severity":1,"message":"239","line":51,"column":10,"nodeType":"222","messageId":"223","endLine":51,"endColumn":16},{"ruleId":"220","severity":1,"message":"240","line":3,"column":8,"nodeType":"222","messageId":"223","endLine":3,"endColumn":19},{"ruleId":"232","severity":1,"message":"238","line":8,"column":34,"nodeType":"234","messageId":"235","endLine":8,"endColumn":36},{"ruleId":"241","severity":1,"message":"242","line":21,"column":72,"nodeType":"243","endLine":21,"endColumn":93},{"ruleId":"232","severity":1,"message":"238","line":29,"column":79,"nodeType":"234","messageId":"235","endLine":29,"endColumn":81},{"ruleId":"227","severity":1,"message":"228","line":15,"column":24,"nodeType":"229","endLine":15,"endColumn":91},{"ruleId":"220","severity":1,"message":"244","line":5,"column":8,"nodeType":"222","messageId":"223","endLine":5,"endColumn":22},{"ruleId":"220","severity":1,"message":"245","line":10,"column":11,"nodeType":"222","messageId":"223","endLine":10,"endColumn":18},{"ruleId":"227","severity":1,"message":"228","line":15,"column":21,"nodeType":"229","endLine":15,"endColumn":46},"no-native-reassign",["246"],"no-negated-in-lhs",["247"],"no-unused-vars","'jamThumb' is defined but never used.","Identifier","unusedVar","'JamScroll' is defined but never used.","'JamList' is defined but never used.","'LoaderSpinner' is defined but never used.","jsx-a11y/alt-text","img elements must have an alt prop, either with meaningful text, or an empty string for decorative images.","JSXOpeningElement","'login' is defined but never used.","'loggedInUser' is assigned a value but never used.","array-callback-return","Array.prototype.filter() expects a value to be returned at the end of arrow function.","ArrowFunctionExpression","expectedAtEnd","'HomeIcon' is defined but never used.","'isUserAdmin' is assigned a value but never used.","Array.prototype.map() expects a value to be returned at the end of arrow function.","'makeId' is defined but never used.","'userService' is defined but never used.","react/jsx-no-duplicate-props","No duplicate props allowed","JSXAttribute","'AddRoundedIcon' is defined but never used.","'history' is assigned a value but never used.","no-global-assign","no-unsafe-negation"]