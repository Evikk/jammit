<<<<<<< HEAD
[{"/Users/evyatarmintz/Desktop/jammit/frontend/src/index.js":"1","/Users/evyatarmintz/Desktop/jammit/frontend/src/serviceWorkerRegistration.js":"2","/Users/evyatarmintz/Desktop/jammit/frontend/src/reportWebVitals.js":"3","/Users/evyatarmintz/Desktop/jammit/frontend/src/store/store.js":"4","/Users/evyatarmintz/Desktop/jammit/frontend/src/App.jsx":"5","/Users/evyatarmintz/Desktop/jammit/frontend/src/pages/Home.jsx":"6","/Users/evyatarmintz/Desktop/jammit/frontend/src/pages/LoginSignup.jsx":"7","/Users/evyatarmintz/Desktop/jammit/frontend/src/pages/UserProfile.jsx":"8","/Users/evyatarmintz/Desktop/jammit/frontend/src/pages/JamDetails.jsx":"9","/Users/evyatarmintz/Desktop/jammit/frontend/src/pages/JamExplore.jsx":"10","/Users/evyatarmintz/Desktop/jammit/frontend/src/pages/MembersList.jsx":"11","/Users/evyatarmintz/Desktop/jammit/frontend/src/cmps/MainNav.jsx":"12","/Users/evyatarmintz/Desktop/jammit/frontend/src/pages/JamCreate.jsx":"13","/Users/evyatarmintz/Desktop/jammit/frontend/src/pages/UserSection.jsx":"14","/Users/evyatarmintz/Desktop/jammit/frontend/src/store/reducers/index.js":"15","/Users/evyatarmintz/Desktop/jammit/frontend/src/cmps/UserList.jsx":"16","/Users/evyatarmintz/Desktop/jammit/frontend/src/cmps/JamScroll.jsx":"17","/Users/evyatarmintz/Desktop/jammit/frontend/src/cmps/HeroSection.jsx":"18","/Users/evyatarmintz/Desktop/jammit/frontend/src/cmps/JamPreview.jsx":"19","/Users/evyatarmintz/Desktop/jammit/frontend/src/cmps/LoaderSpinner.jsx":"20","/Users/evyatarmintz/Desktop/jammit/frontend/src/cmps/JamList.jsx":"21","/Users/evyatarmintz/Desktop/jammit/frontend/src/store/actions/jamActions.js":"22","/Users/evyatarmintz/Desktop/jammit/frontend/src/store/actions/userActions.js":"23","/Users/evyatarmintz/Desktop/jammit/frontend/src/services/authService.js":"24","/Users/evyatarmintz/Desktop/jammit/frontend/src/services/mainNavService.js":"25","/Users/evyatarmintz/Desktop/jammit/frontend/src/services/userService.js":"26","/Users/evyatarmintz/Desktop/jammit/frontend/src/services/jamService.js":"27","/Users/evyatarmintz/Desktop/jammit/frontend/src/services/utilService.js":"28","/Users/evyatarmintz/Desktop/jammit/frontend/src/cmps/UserPreview.jsx":"29","/Users/evyatarmintz/Desktop/jammit/frontend/src/cmps/MapContainer.jsx":"30","/Users/evyatarmintz/Desktop/jammit/frontend/src/cmps/JamDetailsNavbar.jsx":"31","/Users/evyatarmintz/Desktop/jammit/frontend/src/cmps/JamUserPreview.jsx":"32","/Users/evyatarmintz/Desktop/jammit/frontend/src/cmps/JamGoingModal.jsx":"33","/Users/evyatarmintz/Desktop/jammit/frontend/src/assets/img/inst-icons/icons.js":"34","/Users/evyatarmintz/Desktop/jammit/frontend/src/cmps/JamCreateForm.jsx":"35","/Users/evyatarmintz/Desktop/jammit/frontend/src/store/reducers/userReducer.js":"36","/Users/evyatarmintz/Desktop/jammit/frontend/src/store/reducers/reviewReducer.js":"37","/Users/evyatarmintz/Desktop/jammit/frontend/src/store/reducers/systemReducer.js":"38","/Users/evyatarmintz/Desktop/jammit/frontend/src/store/reducers/jamReducer.js":"39","/Users/evyatarmintz/Desktop/jammit/frontend/src/cmps/UserProfile/UserInfo.jsx":"40","/Users/evyatarmintz/Desktop/jammit/frontend/src/cmps/UserProfile/UserTalents.jsx":"41","/Users/evyatarmintz/Desktop/jammit/frontend/src/services/httpService.js":"42","/Users/evyatarmintz/Desktop/jammit/frontend/src/cmps/InviteModal.jsx":"43","/Users/evyatarmintz/Desktop/jammit/frontend/src/cmps/LoginModal.jsx":"44","/Users/evyatarmintz/Desktop/jammit/frontend/src/cmps/InviteFriends.jsx":"45","/Users/evyatarmintz/Desktop/jammit/frontend/src/cmps/StaticMap.jsx":"46","/Users/evyatarmintz/Desktop/jammit/frontend/src/pages/JamsList.jsx":"47","/Users/evyatarmintz/Desktop/jammit/frontend/src/services/socketService.js":"48","/Users/evyatarmintz/Desktop/jammit/frontend/src/cmps/JamChat.jsx":"49"},{"size":910,"mtime":1610196596000,"results":"50","hashOfConfig":"51"},{"size":5064,"mtime":499162500000,"results":"52","hashOfConfig":"51"},{"size":364,"mtime":499162500000,"results":"53","hashOfConfig":"51"},{"size":323,"mtime":1609071193000,"results":"54","hashOfConfig":"51"},{"size":1382,"mtime":1611168238796,"results":"55","hashOfConfig":"51"},{"size":3442,"mtime":1611407976529,"results":"56","hashOfConfig":"51"},{"size":4731,"mtime":1610982187179,"results":"57","hashOfConfig":"51"},{"size":2553,"mtime":1611325649014,"results":"58","hashOfConfig":"51"},{"size":8179,"mtime":1611397760766,"results":"59","hashOfConfig":"51"},{"size":13021,"mtime":1611407976532,"results":"60","hashOfConfig":"51"},{"size":3833,"mtime":1611320457550,"results":"61","hashOfConfig":"51"},{"size":3134,"mtime":1611407147631,"results":"62","hashOfConfig":"51"},{"size":1723,"mtime":1610878828751,"results":"63","hashOfConfig":"51"},{"size":4729,"mtime":1611407976534,"results":"64","hashOfConfig":"51"},{"size":396,"mtime":1610546436417,"results":"65","hashOfConfig":"51"},{"size":268,"mtime":1610807381185,"results":"66","hashOfConfig":"51"},{"size":1507,"mtime":1611407976526,"results":"67","hashOfConfig":"51"},{"size":1411,"mtime":1611393147487,"results":"68","hashOfConfig":"51"},{"size":2533,"mtime":1611407976523,"results":"69","hashOfConfig":"51"},{"size":485,"mtime":1611075733228,"results":"70","hashOfConfig":"51"},{"size":258,"mtime":1611066595840,"results":"71","hashOfConfig":"51"},{"size":1483,"mtime":1611272257104,"results":"72","hashOfConfig":"51"},{"size":1628,"mtime":1611263402159,"results":"73","hashOfConfig":"51"},{"size":1539,"mtime":1610560658938,"results":"74","hashOfConfig":"51"},{"size":1538,"mtime":1611229389908,"results":"75","hashOfConfig":"51"},{"size":2017,"mtime":1611229389908,"results":"76","hashOfConfig":"51"},{"size":1595,"mtime":1611272356736,"results":"77","hashOfConfig":"51"},{"size":1052,"mtime":1610708489092,"results":"78","hashOfConfig":"51"},{"size":1516,"mtime":1611273915737,"results":"79","hashOfConfig":"51"},{"size":1010,"mtime":1611062130197,"results":"80","hashOfConfig":"51"},{"size":2627,"mtime":1611402186564,"results":"81","hashOfConfig":"51"},{"size":635,"mtime":1611273481589,"results":"82","hashOfConfig":"51"},{"size":2849,"mtime":1611089830986,"results":"83","hashOfConfig":"51"},{"size":335,"mtime":1610751806747,"results":"84","hashOfConfig":"51"},{"size":5112,"mtime":1611096704711,"results":"85","hashOfConfig":"51"},{"size":849,"mtime":1611263424956,"results":"86","hashOfConfig":"51"},{"size":669,"mtime":1609956874000,"results":"87","hashOfConfig":"51"},{"size":322,"mtime":1609071005000,"results":"88","hashOfConfig":"51"},{"size":1040,"mtime":1611226567649,"results":"89","hashOfConfig":"51"},{"size":2018,"mtime":1611329881388,"results":"90","hashOfConfig":"51"},{"size":1129,"mtime":1611344592287,"results":"91","hashOfConfig":"51"},{"size":1081,"mtime":1611095239674,"results":"92","hashOfConfig":"51"},{"size":4788,"mtime":1611407976522,"results":"93","hashOfConfig":"51"},{"size":1615,"mtime":1611229389878,"results":"94","hashOfConfig":"51"},{"size":1486,"mtime":1611273780998,"results":"95","hashOfConfig":"51"},{"size":453,"mtime":1611229389885,"results":"96","hashOfConfig":"51"},{"size":4475,"mtime":1611310995765,"results":"97","hashOfConfig":"51"},{"size":1628,"mtime":1611356016761,"results":"98","hashOfConfig":"51"},{"size":1962,"mtime":1611408128349,"results":"99","hashOfConfig":"51"},{"filePath":"100","messages":"101","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"102"},"1noxppp",{"filePath":"103","messages":"104","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"102"},{"filePath":"105","messages":"106","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"102"},{"filePath":"107","messages":"108","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"102"},{"filePath":"109","messages":"110","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"102"},{"filePath":"111","messages":"112","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"113","messages":"114","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"102"},{"filePath":"115","messages":"116","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"117","messages":"118","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"119","messages":"120","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"121","usedDeprecatedRules":"102"},{"filePath":"122","messages":"123","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"124","messages":"125","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"126","messages":"127","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"102"},{"filePath":"128","messages":"129","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"130","usedDeprecatedRules":"102"},{"filePath":"131","messages":"132","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"102"},{"filePath":"133","messages":"134","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"102"},{"filePath":"135","messages":"136","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"102"},{"filePath":"137","messages":"138","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"139","messages":"140","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"141","usedDeprecatedRules":"102"},{"filePath":"142","messages":"143","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"144"},{"filePath":"145","messages":"146","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"102"},{"filePath":"147","messages":"148","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"149","usedDeprecatedRules":"102"},{"filePath":"150","messages":"151","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"152","messages":"153","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"102"},{"filePath":"154","messages":"155","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"102"},{"filePath":"156","messages":"157","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"102"},{"filePath":"158","messages":"159","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"160","messages":"161","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"102"},{"filePath":"162","messages":"163","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"164","usedDeprecatedRules":"102"},{"filePath":"165","messages":"166","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"144"},{"filePath":"167","messages":"168","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"102"},{"filePath":"169","messages":"170","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"171","messages":"172","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"102"},{"filePath":"173","messages":"174","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"102"},{"filePath":"175","messages":"176","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"102"},{"filePath":"177","messages":"178","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"179","messages":"180","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"102"},{"filePath":"181","messages":"182","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"102"},{"filePath":"183","messages":"184","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"102"},{"filePath":"185","messages":"186","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"187","messages":"188","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"189","messages":"190","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"102"},{"filePath":"191","messages":"192","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"102"},{"filePath":"193","messages":"194","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"102"},{"filePath":"195","messages":"196","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"102"},{"filePath":"197","messages":"198","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"199","usedDeprecatedRules":"102"},{"filePath":"200","messages":"201","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"202","messages":"203","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"204","messages":"205","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"/Users/evyatarmintz/Desktop/jammit/frontend/src/index.js",[],["206","207"],"/Users/evyatarmintz/Desktop/jammit/frontend/src/serviceWorkerRegistration.js",[],"/Users/evyatarmintz/Desktop/jammit/frontend/src/reportWebVitals.js",[],"/Users/evyatarmintz/Desktop/jammit/frontend/src/store/store.js",[],"/Users/evyatarmintz/Desktop/jammit/frontend/src/App.jsx",[],"/Users/evyatarmintz/Desktop/jammit/frontend/src/pages/Home.jsx",["208","209"],"/Users/evyatarmintz/Desktop/jammit/frontend/src/pages/LoginSignup.jsx",[],"/Users/evyatarmintz/Desktop/jammit/frontend/src/pages/UserProfile.jsx",["210"],"/Users/evyatarmintz/Desktop/jammit/frontend/src/pages/JamDetails.jsx",["211"],"/Users/evyatarmintz/Desktop/jammit/frontend/src/pages/JamExplore.jsx",["212"],"import React, { Component } from \"react\";\nimport { Map, GoogleApiWrapper, Marker, InfoWindow } from \"google-maps-react\";\nimport { connect } from \"react-redux\";\nimport { loadJams, updateJamGoing } from \"../store/actions/jamActions.js\";\nimport { loadUsers } from \"../store/actions/userActions.js\";\nimport jamMarker from \"../assets/img/green-marker.png\"\nimport GpsFixedIcon from '@material-ui/icons/GpsFixed';\nimport Loader from \"react-loader-spinner\";\nimport PeopleAltRoundedIcon from '@material-ui/icons/PeopleAltRounded';\nimport EmojiPeopleRoundedIcon from '@material-ui/icons/EmojiPeopleRounded';\nimport RoomRoundedIcon from '@material-ui/icons/RoomRounded';\nimport AccessTimeRoundedIcon from '@material-ui/icons/AccessTimeRounded';\nimport HourglassEmptyRoundedIcon from '@material-ui/icons/HourglassEmptyRounded';\nimport { Link } from \"react-router-dom\";\nimport { JamNavbar } from '../cmps/JamDetailsNavbar';\n\nconst mapStyles = {\n    width: \"100%\",\n    height: \"100%\",\n};\n\n// const containerStyle = {\n//     position: 'static',  \n//     width: '100%',\n//     height: '100%'\n// }\n\nconst mapStyle = [\n    {\n        featureType: 'landscape.man_made',\n        elementType: 'geometry.fill',\n        stylers: [\n            {\n                color: '#dceafa'\n            }\n        ]\n    },\n    {\n        elementType: \"labels.text\",\n        stylers: [\n            {\n                visibility: \"off\"\n            }\n        ]\n    },\n    {\n        featureType: \"road.highway\",\n        elementType: \"labels\",\n        stylers: [\n            {\n                visibility: \"on\"\n            }\n        ]\n    },\n    {\n        featureType: \"road.arterial\",\n        elementType: \"labels.text\",\n        stylers: [\n            {\n                visibility: \"on\"\n            }\n        ]\n    },\n    {\n        featureType: \"road.local\",\n        elementType: \"labels.text\",\n        stylers: [\n            {\n                visibility: \"on\"\n            }\n        ]\n    },\n]\nclass _JamExplore extends Component {\n    state = {\n        markers: null,\n        userPos: null,\n        mapZoom: 14,\n        showingInfoWindow: false, // Hides or shows the InfoWindow\n        activeMarker: {}, // Shows the active marker upon click\n        selectedPlace: null, // Shows the InfoWindow to the selected place upon a marker\n        isPopupShow: false,\n        selectedJam: null\n    };\n\n    mapRef = React.createRef();\n    componentDidMount() {\n        this.props.loadJams()\n        navigator.geolocation.getCurrentPosition(pos => {\n            const userPos = { position: { lat: null, lng: null } }\n            userPos.position.lat = pos.coords.latitude\n            userPos.position.lng = pos.coords.longitude\n            this.setState({ selectedPlace: userPos, userPos: userPos })\n            return pos.coords\n        })\n        this.setState({ markers: this.displayMarkers() })\n    }\n\n    timeFormatter = () => {\n        return <p>\n            <span>{new Intl.DateTimeFormat('il', { month: 'short' }).format(new Date(this.state.selectedJam.startsAt))}</span><span>-</span>\n            <span>{new Date(this.state.selectedJam.startsAt).toLocaleString('he-IL', { day: '2-digit', hour: '2-digit', minute: '2-digit' })}</span>\n        </p>\n    }\n\n    onMarkerClick = (props, marker) => {\n        this.setState({\n            activeMarker: marker,\n            showingInfoWindow: true,\n            selectedPlace: props,\n            mapZoom: 17\n        });\n        this.setState({ isPopupShow: true, selectedJam: props.jam })\n    }\n\n    componentDidUpdate(prevProps) {\n        if (this.props.jams !== prevProps.jams) {\n            this.setState({ markers: this.displayMarkers() });\n            if (this.state.activeMarker && this.state.activeMarker.position) {\n                this.setState({ selectedJam : this.props.jams.filter( (jam) => jam._id === this.state.activeMarker.jam._id )[0]});\n                /*this.setState({\n                    activeMarker: {...this.state.activeMarker , jam: this.props.jams.filter( (jam) => jam._id === this.state.activeMarker.jam._id )[0]}\n                });*/\n               \n            }\n          \n        }\n    }\n\n    onJamCenter = (jamId) => {\n        const marker = this.state.markers.find(marker => {\n            return marker.key === jamId\n        })\n        const props = marker.props\n        this.setState({\n            selectedPlace: props,\n            mapZoom: 17\n        });\n    }\n\n    onClose = props => {\n        if (this.state.showingInfoWindow) {\n            this.setState({\n                showingInfoWindow: false,\n                activeMarker: null\n            });\n        }\n    };\n    displayMarkers = () => {\n        return this.props.jams.map(jam => {\n            return <Marker key={jam._id}\n                position={{\n                    lat: jam.location.lat,\n                    lng: jam.location.lng\n                }}\n                onMousedown={this.onMarkerClick}\n                jam={jam}\n                title={jam.title}\n                imgUrl={jam.imgUrl}\n                currMembers={jam.usersGoing.length}\n                capacity={jam.capacity}\n                icon={{\n                    url: \"http://maps.google.com/mapfiles/ms/icons/purple-dot.png\",\n                    // url: jamMarker,\n                    anchor: new this.props.google.maps.Point(32, 32),\n                    scaledSize: new this.props.google.maps.Size(50, 50)\n                }}\n            />\n        });\n    }\n\n    //   centerMoved(mapProps, map) {\n    //       console.log(map.center.lat());\n\n    //   }\n    _mapLoaded(mapProps, map) {\n        map.setOptions({\n            styles: mapStyle\n        })\n    }\n\n    render() {\n        const { jams, loggedInUser } = this.props\n        const { userPos, selectedPlace, mapZoom, markers, isPopupShow } = this.state\n        const jam = this.state.selectedJam\n        if (!selectedPlace || jams.length === 0) {\n            return <div className=\"loader main-content pos-relative\">\n                <Loader type=\"Bars\" color=\"#00475F\" height={200} width={200} timeout={5000} />\n            </div>\n        }\n        return (\n            <>\n                <section className=\"flex explore-container pos-relative\">\n                    <button className=\"center-map-btn\" onClick={() => {\n                        const selectedPlaceCopy = { ...selectedPlace }\n                        selectedPlaceCopy.position.lat = userPos.position.lat\n                        selectedPlaceCopy.position.lng = userPos.position.lng\n                        this.setState({ selectedPlace: selectedPlaceCopy, mapZoom: 15 })\n                    }}><GpsFixedIcon style={{ fontSize: 40 }} /></button>\n                    <Map\n                        ref={this.mapRef}\n                        // containerStyle={containerStyle}\n                        google={this.props.google}\n                        zoom={mapZoom}\n                        style={mapStyles}\n                        // centerAroundCurrentLocation={true}\n                        initialCenter={{ lat: selectedPlace.position.lat, lng: selectedPlace.position.lng }}\n                        center={{ lat: selectedPlace.position.lat, lng: selectedPlace.position.lng }}\n                        onReady={(mapProps, map) => this._mapLoaded(mapProps, map)}\n                        disableDefaultUI={true}\n                    // onBoundsChanged={this.centerMoved}\n                    >\n                        {markers}\n                        {loggedInUser && <Marker\n                            name={'Your position'}\n                            position={userPos.position}\n                            icon={{\n                                url: loggedInUser.imgUrl,\n                                // anchor: new this.props.google.maps.Point(32, 32),\n                                scaledSize: new this.props.google.maps.Size(50, 50),\n                                origin: new this.props.google.maps.Point(0, 0),\n                                anchor: new this.props.google.maps.Point(17, 34),\n                            }}\n                        />}\n                        <InfoWindow\n                            marker={this.state.activeMarker}\n                            visible={this.state.showingInfoWindow}\n                            onClose={this.onClose}\n                        >\n                            <div>\n                                <h2>{this.state.selectedPlace.title}</h2>\n                            </div>\n                        </InfoWindow>\n                    </Map>\n                    {isPopupShow &&\n                        <div className=\"jam-popup\">\n                            <div className=\"details-con\">\n                                <div className=\"close-details\">\n                                    <h3 >{jam.title} </h3>\n                                    <span onClick={()=>this.setState({isPopupShow: false})}>&times;</span> \n                                </div>\n                                <div className=\"map-thumb-wrapper\" onClick={() => this.props.history.push(`jam/${jam._id}`)}>\n                                    <img src={jam.imgUrl} alt=\"jam-thumbnail\" />\n                                </div>\n                                <JamNavbar\n                                history={this.props.history}\n                                user={this.props.loggedInUser}\n                                jam={jam}\n                                updateJamGoing={this.props.updateJamGoing}\n                                isUserAdmin={false}\n                                showBasicActionsOnly={true}\n                                />\n                                <h3 className=\"title-style\">Details</h3>\n                                <p><span className=\"icon-style\"><HourglassEmptyRoundedIcon /></span><span className=\"details-style\">{jam.capacity - jam.usersGoing.length} Slots Available</span></p>\n                                <p><span className=\"icon-style\"><PeopleAltRoundedIcon /></span> <span className=\"details-style\">{jam.usersGoing.length} People going</span></p>\n                                <p><span className=\"icon-style\"><EmojiPeopleRoundedIcon /></span> <span className=\"details-style\">Created by <Link to={\"/user/\" + jam.createdBy._id} > {jam.createdBy.fullname}</Link></span></p>\n                                <p><span className=\"icon-style\"><RoomRoundedIcon /></span> <span className=\"details-style\">{jam.location.address}, {jam.location.city}</span></p>\n                                <p><span className=\"icon-style\"><AccessTimeRoundedIcon /></span> <span className=\"details-style\">{this.timeFormatter()}</span></p>\n                                <div className=\"description-con\">\n                                    <h3 className=\"title-style\">Description</h3>\n                                    <p>{jam.description}</p>\n                                </div>\n                                <ul className=\"jam-card-tags big-tags flex\">{jam.tags.map((tag, idx) => {\n                                    return <li key={idx}>{tag}</li>\n                                })}\n                                </ul>\n                            </div>\n                        </div>\n                    }\n                </section>\n            </>\n        );\n    }\n}\n\nconst mapStateToProps = (state) => {\n    return {\n        jams: state.jamModule.jams,\n        users: state.userModule.users,\n        loggedInUser: state.userModule.loggedInUser\n    };\n};\nconst mapDispatchToProps = {\n    loadJams,\n    loadUsers,\n    updateJamGoing\n};\n\nexport const JamExplore = GoogleApiWrapper({\n    apiKey: \"AIzaSyBTd-r9ES9me88-mTQasKgom191cNMihjY\",\n})(connect(mapStateToProps, mapDispatchToProps)(_JamExplore));\n\n{/* <div className=\"jams-explore-container\">\n                <div className=\"jams-explore-filter flex column\">\n                    <h1>Filter Jams</h1>\n                    <div className=\"filter-inputs\">\n                        <input type=\"text\" name=\"name\" id=\"\"/>\n                        <select name=\"filterByInst\">\n                            <option value=\"\">By Instrument Missing</option>\n                            <option value=\"\">Singer</option>\n                            <option value=\"\">Guitar</option>\n                            <option value=\"\">Drums</option>\n                            <option value=\"\">Bass</option>\n                            <option value=\"\">Keyboard</option>\n                        </select>\n                        <select name=\"filterByRegion\">\n                            <option value=\"\">By Region</option>\n                            <option value=\"\">North</option>\n                            <option value=\"\">Center</option>\n                            <option value=\"\">South</option>\n                        </select>\n                    </div>\n                </div>\n                <ul className=\"jams-explore-list\">\n                    {jams.map((jam) => (\n                        <JamPreview key={jam._id} jam={jam}/>\n                    ))}\n                </ul>\n            </div> */}","/Users/evyatarmintz/Desktop/jammit/frontend/src/pages/MembersList.jsx",["213"],"/Users/evyatarmintz/Desktop/jammit/frontend/src/cmps/MainNav.jsx",["214"],"/Users/evyatarmintz/Desktop/jammit/frontend/src/pages/JamCreate.jsx",[],"/Users/evyatarmintz/Desktop/jammit/frontend/src/pages/UserSection.jsx",["215","216"],"import React, { Component } from \"react\";\nimport { connect } from \"react-redux\";\nimport { loadUsers } from \"../store/actions/userActions\";\nimport { loadJams } from \"../store/actions/jamActions\";\nimport { UserInfo } from \"../cmps/UserProfile/UserInfo\";\nimport { UserTalents } from \"../cmps/UserProfile/UserTalents\";\nimport { JamList } from \"../cmps/JamList\";\nimport { UserList } from \"../cmps/UserList\";\nimport { JamCreate } from \"./JamCreate\";\nimport { JamScroll } from \"../cmps/JamScroll\";\n\nclass _UserSection extends Component {\n\n    state = {\n        activeTab : 'events'\n    }\n\n    componentDidMount() {\n        this.props.loadJams()\n        this.props.loadUsers()\n    }\n\n    onTabChoose = (tab)=> {\n        this.setState({activeTab: tab})\n    }\n\n    filterJamsByInst = () => {\n        return this.props.jams.filter((jam) => {\n            const user = jam.usersGoing.find((user) => {\n                return user.playing.some((inst) => {\n                    return inst === this.props.loggedInUser.talents[0];\n                });\n            });\n            if (!user) return jam;\n        });\n    };\n\n    filterMembersByFollow = () => {\n        return this.props.users.filter((user) => {\n            return user.followers.find(\n                (user) => user._id === this.props.loggedInUser._id\n            );\n        });\n    };\n\n    filterJamsByRegion = () => {\n        return this.props.jams.filter((jam) => {\n            return (\n                jam.location.region === this.props.loggedInUser.location.region\n            );\n        });\n    };\n\n    filterUserCreatedJams = () => {\n        return this.props.jams.filter(jam => jam.createdBy._id === this.props.loggedInUser._id)\n    }\n\n    render() {\n        const { jams, loggedInUser } = this.props\n        const { activeTab } = this.state\n        if (jams.length === 0 ) return <h2>loading...</h2>\n        return (\n            \n            <main className=\"main-content user-section flex\">\n                <div className=\"user-details-aside flex column\">\n                    <UserInfo user={loggedInUser} isUserAdmin={true} />\n                    <UserTalents user={loggedInUser} isUserAdmin={true} />\n                    <button onClick={()=>this.onTabChoose('create')}>Start A New Jam</button>\n                </div>\n                <div className=\"filtered-jams section\">\n                    <div className=\"user-section-toolbar\">\n                        <ul className=\"toolbar-left\">\n                            <li onClick={()=>this.onTabChoose('events')} className={activeTab === 'events' ? 'active' : ''}>Explore Jams</li>\n                            <li onClick={()=>this.onTabChoose('members')} className={activeTab === 'members' ? 'active' : ''}>Members</li>\n                            <li onClick={()=>this.onTabChoose('manage')} className={activeTab === 'manage' ? 'active' : ''}>Manage Your Jams</li>\n                        </ul>\n                        \n                        \n                    </div>\n                   {activeTab === 'events' && <div>\n                        <h1>Jams Without {loggedInUser.talents[0]}</h1>\n                        <JamList jams={this.filterJamsByInst()} />\n                        <h1>Jams Around {loggedInUser.location.region} Region</h1>\n                        <JamList jams={this.filterJamsByRegion()} />\n                    </div>}\n                    {activeTab === 'members' && <div>\n                        <h1>Members You Follow</h1>\n                        <UserList users={this.filterMembersByFollow()}/>\n                    </div>}\n                    {activeTab === 'manage' && this.filterUserCreatedJams().length > 0 && \n                        <div>\n                            <h1>Jams Dashboard</h1>\n                            <JamList users={this.this.filterUserCreatedJams()}/>\n                    </div>}\n                    {activeTab === 'manage' && <h1>You haven't created any jams yet... </h1>\n                    }\n                    {activeTab === 'create' &&\n                        <div>\n                            <JamCreate/>\n                        </div>\n                    }\n                </div>\n          </main>\n       )\n    }\n}\nconst mapStateToProps = (state) => {\n    return {\n        jams: state.jamModule.jams,\n        users: state.userModule.users,\n        loggedInUser: state.userModule.loggedInUser,\n    };\n};\nconst mapDispatchToProps = {\n    loadJams,\n    loadUsers,\n};\n\nexport const UserSection = connect(mapStateToProps, mapDispatchToProps)(_UserSection);","/Users/evyatarmintz/Desktop/jammit/frontend/src/store/reducers/index.js",[],"/Users/evyatarmintz/Desktop/jammit/frontend/src/cmps/UserList.jsx",[],"/Users/evyatarmintz/Desktop/jammit/frontend/src/cmps/JamScroll.jsx",[],"/Users/evyatarmintz/Desktop/jammit/frontend/src/cmps/HeroSection.jsx",["217"],"/Users/evyatarmintz/Desktop/jammit/frontend/src/cmps/JamPreview.jsx",["218","219"],"import LocationOnIcon from '@material-ui/icons/LocationOn';\nimport {instIcons} from '../assets/img/inst-icons/icons.js'\nimport { Link } from \"react-router-dom\";\nimport LocationOnOutlinedIcon from '@material-ui/icons/LocationOnOutlined';\nexport function JamPreview({ jam }) {\n\n    function showIcons (){\n\n        return instIcons.map((icon, idx)=>{\n            const user = jam.usersGoing.find(user => {\n                return user.playing.some(inst=>{\n                    const instName = Object.keys(icon)[0]\n                    return instName === inst\n                })\n            })\n            if (user) return <img key={idx} className=\"inst-icon\" src={Object.values(icon)[0]} alt=\"instrument\"/>\n        })\n    }\n    const slotsLeft = jam.capacity - jam.usersGoing.length\n    \n    return (\n        <Link to={`/jam/${jam._id}`}><li className=\"jam-card flex column\">\n            <div className=\"thumb-wrapper flex column pos-relative\">\n                <img className=\"jam-thumb\" loading=\"lazy\" src={jam.imgUrl} alt=\"jam-thumbnail\"/>\n                <div className=\"inst-icons-wrapper\">\n                    {showIcons()}\n                </div>\n            </div>\n            {/* <h2>{jam.title}</h2> */}\n            <div className=\"jam-card-content flex\">\n                {/* <div className=\"date-wrapper\">\n                    <div className=\"date-month\">\n                        {new Intl.DateTimeFormat('il', { month: 'short' }).format(new Date(jam.startsAt))}\n                    </div>\n                    <div className=\"date-day\">\n                        \n                        {new Date(jam.startsAt).toLocaleString('he-IL',{day: '2-digit'})}\n                    </div>\n                </div> */}\n                <div className=\"jam-details-wrapper\">    \n                <h2>{jam.title}</h2>     \n                    <ul className=\"jam-card-tags flex \">{jam.tags.map((tag, idx) => {\n                        return <li key={idx}>{tag}</li> })}\n                    </ul>\n                    <div className=\"going-wrapper flex\">\n                        <div className=\"align-self\">\n                            <p className=\"gray-dark\"><LocationOnOutlinedIcon style={{ fontSize: 15 }}/>{jam.location.city}</p>\n                        </div>\n                        <span className={slotsLeft < 5 ? 'red' : 'green'}>\n                                {jam.usersGoing.length}/{jam.capacity} Slots\n                        </span>\n                    </div>\n                </div>\n            </div>\n        </li></Link> \n    );\n}","/Users/evyatarmintz/Desktop/jammit/frontend/src/cmps/LoaderSpinner.jsx",[],["220","221"],"/Users/evyatarmintz/Desktop/jammit/frontend/src/cmps/JamList.jsx",[],"/Users/evyatarmintz/Desktop/jammit/frontend/src/store/actions/jamActions.js",["222"],"import { jamService } from '../../services/jamService'\n\nexport function loadJams(filterBy) {\n  return async dispatch => {\n    try {\n      const jams = await jamService.query(filterBy)\n      dispatch({ type: 'SET_JAMS', jams })\n\n    } catch (err) {\n      console.log('JamActions: err in loadJams', err)\n    }\n  }\n}\n\nexport function saveJam(jam, creatingUser) {\n  return async dispatch => {\n    try {\n      jam.createdAt = Date.now()\n      jam.createdBy = creatingUser\n      jam.usersGoing.push(creatingUser)\n      console.log(creatingUser);\n      \n      jam = await jamService.save(jam)\n      dispatch({ type: 'ADD_JAM', jam })\n    } catch (err) {\n      console.log('JamActions: err in saveJam', err)\n    }\n  }\n}\n\n\n\nexport function updateJamGoing(jam, user, isGoing) {\n  return async dispatch => {\n    try {\n     jamService.updateJamGoing(jam._id, user, isGoing);\n      if (isGoing) {\n        dispatch({ type: 'UPDATE_JAM_IS_GOING', data:  {jam: jam, user: user} });\n      } else {\n        dispatch({ type: 'UPDATE_JAM_IS_NOT_GOING', data:  {jam: jam, user: user} });\n      }\n     \n\n    } catch (err) {\n      console.log('JamActions: err in loadJams', err)\n    }\n  }\n}\n\n\nfunction makeId(length = 6) {\n  var txt = '';\n  var possible = 'ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789';\n\n  for (var i = 0; i < length; i++) {\n      txt += possible.charAt(Math.floor(Math.random() * possible.length));\n  }\n\n  return txt;\n}","/Users/evyatarmintz/Desktop/jammit/frontend/src/store/actions/userActions.js",[],"/Users/evyatarmintz/Desktop/jammit/frontend/src/services/authService.js",[],"/Users/evyatarmintz/Desktop/jammit/frontend/src/services/mainNavService.js",[],"/Users/evyatarmintz/Desktop/jammit/frontend/src/services/userService.js",[],"/Users/evyatarmintz/Desktop/jammit/frontend/src/services/jamService.js",["223"],"/Users/evyatarmintz/Desktop/jammit/frontend/src/services/utilService.js",[],"/Users/evyatarmintz/Desktop/jammit/frontend/src/cmps/UserPreview.jsx",["224","225","226"],"import { useHistory } from \"react-router-dom\";\nimport LocationOnIcon from '@material-ui/icons/LocationOn';\nimport {instIcons} from '../assets/img/inst-icons/icons.js'\n\nexport function UserPreview({ user }) {\n\n    function showIcons() {\n        return instIcons.map((icon, idx)=>{\n            const talent = user.talents.find(talent=>{\n                return (talent === Object.keys(icon)[0])\n            })\n            if (talent) return <img key={idx} className=\"user-inst-icon\" src={Object.values(icon)[0]} alt=\"instrument\"/>\n        })\n    }\n\n    const history = useHistory()\n    return (\n        <li className=\"user-card flex column\" onClick={()=>history.push(`/user/${user._id}`)}>\n            <div className=\"thumb flex column pos-relative\">\n                <div className=\"img-wrapper flex justify-center\">\n                    <img className=\"user-card thumb\" src={user.imgUrl} className=\"userThumb\" alt=\"user-thumbnail\"/>\n                    <div className=\"user-inst-icons-wrapper\">\n                        {showIcons()}\n                    </div>\n                </div>\n            </div>\n            <div className=\"user-card-content flex column\">\n                <h2>{user.username}</h2>\n                <ul className=\"user-card-tags flex\">{user.tags.map((tag, idx) => {\n                    if (idx < 3) return <li key={idx}>{tag}</li> })}\n                </ul>\n                <p><LocationOnIcon/>{user.location.city}</p>\n            </div>\n        </li>\n    );\n}","/Users/evyatarmintz/Desktop/jammit/frontend/src/cmps/MapContainer.jsx",[],"/Users/evyatarmintz/Desktop/jammit/frontend/src/cmps/JamDetailsNavbar.jsx",[],"/Users/evyatarmintz/Desktop/jammit/frontend/src/cmps/JamUserPreview.jsx",[],"/Users/evyatarmintz/Desktop/jammit/frontend/src/cmps/JamGoingModal.jsx",[],"/Users/evyatarmintz/Desktop/jammit/frontend/src/assets/img/inst-icons/icons.js",[],"/Users/evyatarmintz/Desktop/jammit/frontend/src/cmps/JamCreateForm.jsx",[],"/Users/evyatarmintz/Desktop/jammit/frontend/src/store/reducers/userReducer.js",[],"/Users/evyatarmintz/Desktop/jammit/frontend/src/store/reducers/reviewReducer.js",[],"/Users/evyatarmintz/Desktop/jammit/frontend/src/store/reducers/systemReducer.js",[],"/Users/evyatarmintz/Desktop/jammit/frontend/src/store/reducers/jamReducer.js",[],"/Users/evyatarmintz/Desktop/jammit/frontend/src/cmps/UserProfile/UserInfo.jsx",["227","228","229"],"/Users/evyatarmintz/Desktop/jammit/frontend/src/cmps/UserProfile/UserTalents.jsx",["230","231"],"/Users/evyatarmintz/Desktop/jammit/frontend/src/services/httpService.js",[],"/Users/evyatarmintz/Desktop/jammit/frontend/src/cmps/InviteModal.jsx",[],"/Users/evyatarmintz/Desktop/jammit/frontend/src/cmps/LoginModal.jsx",[],"/Users/evyatarmintz/Desktop/jammit/frontend/src/cmps/InviteFriends.jsx",[],"/Users/evyatarmintz/Desktop/jammit/frontend/src/cmps/StaticMap.jsx",["232"],"import React from 'react';\n\nexport class StaticMap extends React.Component {\n \n    render() {\n        const API_KEY = 'AIzaSyBTd-r9ES9me88-mTQasKgom191cNMihjY';\n        return (\n            <div>\n                <img src={`https://maps.googleapis.com/maps/api/staticmap?center=${this.props.lat},${this.props.lng}&zoom=15&size=500x300&key=${API_KEY}&markers=label:J|scale:2|${this.props.lat},${this.props.lng}` } />\n            </div>\n        )\n    }\n}\n\n","/Users/evyatarmintz/Desktop/jammit/frontend/src/pages/JamsList.jsx",[],"/Users/evyatarmintz/Desktop/jammit/frontend/src/services/socketService.js",[],"/Users/evyatarmintz/Desktop/jammit/frontend/src/cmps/JamChat.jsx",[],{"ruleId":"233","replacedBy":"234"},{"ruleId":"235","replacedBy":"236"},{"ruleId":"237","severity":1,"message":"238","line":10,"column":10,"nodeType":"239","messageId":"240","endLine":10,"endColumn":17},{"ruleId":"241","severity":1,"message":"242","line":83,"column":11,"nodeType":"243","endLine":83,"endColumn":58},{"ruleId":"237","severity":1,"message":"244","line":11,"column":10,"nodeType":"239","messageId":"240","endLine":11,"endColumn":18},{"ruleId":"237","severity":1,"message":"245","line":91,"column":34,"nodeType":"239","messageId":"240","endLine":91,"endColumn":45},{"ruleId":"246","severity":1,"message":"247","line":292,"column":1,"nodeType":"248","messageId":"249","endLine":318,"endColumn":23},{"ruleId":"237","severity":1,"message":"250","line":56,"column":27,"nodeType":"239","messageId":"240","endLine":56,"endColumn":35},{"ruleId":"241","severity":1,"message":"242","line":74,"column":29,"nodeType":"243","endLine":74,"endColumn":62},{"ruleId":"237","severity":1,"message":"251","line":10,"column":10,"nodeType":"239","messageId":"240","endLine":10,"endColumn":19},{"ruleId":"252","severity":1,"message":"253","line":28,"column":45,"nodeType":"254","messageId":"255","endLine":28,"endColumn":47},{"ruleId":"237","severity":1,"message":"256","line":3,"column":10,"nodeType":"239","messageId":"240","endLine":3,"endColumn":14},{"ruleId":"237","severity":1,"message":"257","line":1,"column":8,"nodeType":"239","messageId":"240","endLine":1,"endColumn":22},{"ruleId":"252","severity":1,"message":"258","line":9,"column":41,"nodeType":"254","messageId":"255","endLine":9,"endColumn":43},{"ruleId":"233","replacedBy":"259"},{"ruleId":"235","replacedBy":"260"},{"ruleId":"237","severity":1,"message":"261","line":51,"column":10,"nodeType":"239","messageId":"240","endLine":51,"endColumn":16},{"ruleId":"237","severity":1,"message":"262","line":3,"column":8,"nodeType":"239","messageId":"240","endLine":3,"endColumn":19},{"ruleId":"252","severity":1,"message":"258","line":8,"column":41,"nodeType":"254","messageId":"255","endLine":8,"endColumn":43},{"ruleId":"263","severity":1,"message":"264","line":21,"column":72,"nodeType":"265","endLine":21,"endColumn":93},{"ruleId":"252","severity":1,"message":"258","line":29,"column":79,"nodeType":"254","messageId":"255","endLine":29,"endColumn":81},{"ruleId":"237","severity":1,"message":"266","line":5,"column":8,"nodeType":"239","messageId":"240","endLine":5,"endColumn":22},{"ruleId":"237","severity":1,"message":"267","line":10,"column":11,"nodeType":"239","messageId":"240","endLine":10,"endColumn":18},{"ruleId":"241","severity":1,"message":"242","line":15,"column":21,"nodeType":"243","endLine":15,"endColumn":46},{"ruleId":"241","severity":1,"message":"242","line":10,"column":31,"nodeType":"243","endLine":10,"endColumn":62},{"ruleId":"241","severity":1,"message":"242","line":21,"column":31,"nodeType":"243","endLine":21,"endColumn":63},{"ruleId":"241","severity":1,"message":"242","line":9,"column":17,"nodeType":"243","endLine":9,"endColumn":143},"no-native-reassign",["268"],"no-negated-in-lhs",["269"],"no-unused-vars","'JamList' is defined but never used.","Identifier","unusedVar","jsx-a11y/alt-text","img elements must have an alt prop, either with meaningful text, or an empty string for decorative images.","JSXOpeningElement","'UserList' is defined but never used.","'isUserAdmin' is assigned a value but never used.","no-lone-blocks","Block is redundant.","BlockStatement","redundantBlock","'fullname' is assigned a value but never used.","'JamScroll' is defined but never used.","array-callback-return","Array.prototype.filter() expects a value to be returned at the end of arrow function.","ArrowFunctionExpression","expectedAtEnd","'Link' is defined but never used.","'LocationOnIcon' is defined but never used.","Array.prototype.map() expects a value to be returned at the end of arrow function.",["268"],["269"],"'makeId' is defined but never used.","'userService' is defined but never used.","react/jsx-no-duplicate-props","No duplicate props allowed","JSXAttribute","'AddRoundedIcon' is defined but never used.","'history' is assigned a value but never used.","no-global-assign","no-unsafe-negation"]
=======
[{"C:\\Users\\danie\\OneDrive\\שולחן העבודה\\dev\\jameet\\jammit\\frontend\\src\\index.js":"1","C:\\Users\\danie\\OneDrive\\שולחן העבודה\\dev\\jameet\\jammit\\frontend\\src\\serviceWorkerRegistration.js":"2","C:\\Users\\danie\\OneDrive\\שולחן העבודה\\dev\\jameet\\jammit\\frontend\\src\\reportWebVitals.js":"3","C:\\Users\\danie\\OneDrive\\שולחן העבודה\\dev\\jameet\\jammit\\frontend\\src\\store\\store.js":"4","C:\\Users\\danie\\OneDrive\\שולחן העבודה\\dev\\jameet\\jammit\\frontend\\src\\App.jsx":"5","C:\\Users\\danie\\OneDrive\\שולחן העבודה\\dev\\jameet\\jammit\\frontend\\src\\pages\\LoginSignup.jsx":"6","C:\\Users\\danie\\OneDrive\\שולחן העבודה\\dev\\jameet\\jammit\\frontend\\src\\pages\\JamExplore.jsx":"7","C:\\Users\\danie\\OneDrive\\שולחן העבודה\\dev\\jameet\\jammit\\frontend\\src\\pages\\JamCreate.jsx":"8","C:\\Users\\danie\\OneDrive\\שולחן העבודה\\dev\\jameet\\jammit\\frontend\\src\\pages\\MembersList.jsx":"9","C:\\Users\\danie\\OneDrive\\שולחן העבודה\\dev\\jameet\\jammit\\frontend\\src\\cmps\\MainNav.jsx":"10","C:\\Users\\danie\\OneDrive\\שולחן העבודה\\dev\\jameet\\jammit\\frontend\\src\\pages\\Home.jsx":"11","C:\\Users\\danie\\OneDrive\\שולחן העבודה\\dev\\jameet\\jammit\\frontend\\src\\pages\\UserProfile.jsx":"12","C:\\Users\\danie\\OneDrive\\שולחן העבודה\\dev\\jameet\\jammit\\frontend\\src\\pages\\JamDetails.jsx":"13","C:\\Users\\danie\\OneDrive\\שולחן העבודה\\dev\\jameet\\jammit\\frontend\\src\\store\\reducers\\index.js":"14","C:\\Users\\danie\\OneDrive\\שולחן העבודה\\dev\\jameet\\jammit\\frontend\\src\\pages\\UserSection.jsx":"15","C:\\Users\\danie\\OneDrive\\שולחן העבודה\\dev\\jameet\\jammit\\frontend\\src\\cmps\\JamList.jsx":"16","C:\\Users\\danie\\OneDrive\\שולחן העבודה\\dev\\jameet\\jammit\\frontend\\src\\cmps\\LoaderSpinner.jsx":"17","C:\\Users\\danie\\OneDrive\\שולחן העבודה\\dev\\jameet\\jammit\\frontend\\src\\store\\actions\\userActions.js":"18","C:\\Users\\danie\\OneDrive\\שולחן העבודה\\dev\\jameet\\jammit\\frontend\\src\\cmps\\JamScroll.jsx":"19","C:\\Users\\danie\\OneDrive\\שולחן העבודה\\dev\\jameet\\jammit\\frontend\\src\\services\\mainNavService.js":"20","C:\\Users\\danie\\OneDrive\\שולחן העבודה\\dev\\jameet\\jammit\\frontend\\src\\cmps\\JamPreview.jsx":"21","C:\\Users\\danie\\OneDrive\\שולחן העבודה\\dev\\jameet\\jammit\\frontend\\src\\services\\authService.js":"22","C:\\Users\\danie\\OneDrive\\שולחן העבודה\\dev\\jameet\\jammit\\frontend\\src\\store\\actions\\jamActions.js":"23","C:\\Users\\danie\\OneDrive\\שולחן העבודה\\dev\\jameet\\jammit\\frontend\\src\\cmps\\HeroSection.jsx":"24","C:\\Users\\danie\\OneDrive\\שולחן העבודה\\dev\\jameet\\jammit\\frontend\\src\\cmps\\UserList.jsx":"25","C:\\Users\\danie\\OneDrive\\שולחן העבודה\\dev\\jameet\\jammit\\frontend\\src\\services\\userService.js":"26","C:\\Users\\danie\\OneDrive\\שולחן העבודה\\dev\\jameet\\jammit\\frontend\\src\\services\\utilService.js":"27","C:\\Users\\danie\\OneDrive\\שולחן העבודה\\dev\\jameet\\jammit\\frontend\\src\\store\\reducers\\reviewReducer.js":"28","C:\\Users\\danie\\OneDrive\\שולחן העבודה\\dev\\jameet\\jammit\\frontend\\src\\store\\reducers\\systemReducer.js":"29","C:\\Users\\danie\\OneDrive\\שולחן העבודה\\dev\\jameet\\jammit\\frontend\\src\\store\\reducers\\userReducer.js":"30","C:\\Users\\danie\\OneDrive\\שולחן העבודה\\dev\\jameet\\jammit\\frontend\\src\\store\\reducers\\jamReducer.js":"31","C:\\Users\\danie\\OneDrive\\שולחן העבודה\\dev\\jameet\\jammit\\frontend\\src\\cmps\\JamCreateForm.jsx":"32","C:\\Users\\danie\\OneDrive\\שולחן העבודה\\dev\\jameet\\jammit\\frontend\\src\\assets\\img\\inst-icons\\icons.js":"33","C:\\Users\\danie\\OneDrive\\שולחן העבודה\\dev\\jameet\\jammit\\frontend\\src\\services\\jamService.js":"34","C:\\Users\\danie\\OneDrive\\שולחן העבודה\\dev\\jameet\\jammit\\frontend\\src\\cmps\\UserPreview.jsx":"35","C:\\Users\\danie\\OneDrive\\שולחן העבודה\\dev\\jameet\\jammit\\frontend\\src\\cmps\\JamUserPreview.jsx":"36","C:\\Users\\danie\\OneDrive\\שולחן העבודה\\dev\\jameet\\jammit\\frontend\\src\\cmps\\MapContainer.jsx":"37","C:\\Users\\danie\\OneDrive\\שולחן העבודה\\dev\\jameet\\jammit\\frontend\\src\\cmps\\UserProfile\\UserTalents.jsx":"38","C:\\Users\\danie\\OneDrive\\שולחן העבודה\\dev\\jameet\\jammit\\frontend\\src\\cmps\\JamGoingModal.jsx":"39","C:\\Users\\danie\\OneDrive\\שולחן העבודה\\dev\\jameet\\jammit\\frontend\\src\\cmps\\JamDetailsNavbar.jsx":"40","C:\\Users\\danie\\OneDrive\\שולחן העבודה\\dev\\jameet\\jammit\\frontend\\src\\cmps\\UserProfile\\UserInfo.jsx":"41","C:\\Users\\danie\\OneDrive\\שולחן העבודה\\dev\\jameet\\jammit\\frontend\\src\\services\\httpService.js":"42","C:\\Users\\danie\\OneDrive\\שולחן העבודה\\dev\\jameet\\jammit\\frontend\\src\\cmps\\LoginModal.jsx":"43","C:\\Users\\danie\\OneDrive\\שולחן העבודה\\dev\\jameet\\jammit\\frontend\\src\\cmps\\InviteModal.jsx":"44","C:\\Users\\danie\\OneDrive\\שולחן העבודה\\dev\\jameet\\jammit\\frontend\\src\\cmps\\InviteFriends.jsx":"45","C:\\Users\\danie\\OneDrive\\שולחן העבודה\\dev\\jameet\\jammit\\frontend\\src\\cmps\\StaticMap.jsx":"46","C:\\Users\\danie\\OneDrive\\שולחן העבודה\\dev\\jameet\\jammit\\frontend\\src\\pages\\JamsList.jsx":"47","C:\\Users\\danie\\OneDrive\\שולחן העבודה\\dev\\jameet\\jammit\\frontend\\src\\cmps\\JamChat.jsx":"48","C:\\Users\\danie\\OneDrive\\שולחן העבודה\\dev\\jameet\\jammit\\frontend\\src\\services\\socketService.js":"49"},{"size":935,"mtime":1610550173931,"results":"50","hashOfConfig":"51"},{"size":5201,"mtime":1610550173933,"results":"52","hashOfConfig":"51"},{"size":377,"mtime":1610550173933,"results":"53","hashOfConfig":"51"},{"size":323,"mtime":1610550173941,"results":"54","hashOfConfig":"51"},{"size":1420,"mtime":1611229453835,"results":"55","hashOfConfig":"51"},{"size":4878,"mtime":1610981948005,"results":"56","hashOfConfig":"51"},{"size":13339,"mtime":1611406655978,"results":"57","hashOfConfig":"51"},{"size":1790,"mtime":1610881707933,"results":"58","hashOfConfig":"51"},{"size":3949,"mtime":1611323654806,"results":"59","hashOfConfig":"51"},{"size":3233,"mtime":1611407394454,"results":"60","hashOfConfig":"51"},{"size":3442,"mtime":1611405277289,"results":"61","hashOfConfig":"51"},{"size":2639,"mtime":1611353360467,"results":"62","hashOfConfig":"51"},{"size":8353,"mtime":1611406655961,"results":"63","hashOfConfig":"51"},{"size":396,"mtime":1610550173940,"results":"64","hashOfConfig":"51"},{"size":4852,"mtime":1611354833035,"results":"65","hashOfConfig":"51"},{"size":268,"mtime":1611075656062,"results":"66","hashOfConfig":"51"},{"size":502,"mtime":1611071013062,"results":"67","hashOfConfig":"51"},{"size":1628,"mtime":1611354870850,"results":"68","hashOfConfig":"51"},{"size":1567,"mtime":1611354850402,"results":"69","hashOfConfig":"51"},{"size":1592,"mtime":1611167207992,"results":"70","hashOfConfig":"51"},{"size":2589,"mtime":1611406655983,"results":"71","hashOfConfig":"51"},{"size":1596,"mtime":1610560975527,"results":"72","hashOfConfig":"51"},{"size":1544,"mtime":1611273806519,"results":"73","hashOfConfig":"51"},{"size":1445,"mtime":1611406655957,"results":"74","hashOfConfig":"51"},{"size":278,"mtime":1610808786640,"results":"75","hashOfConfig":"51"},{"size":2017,"mtime":1611173592271,"results":"76","hashOfConfig":"51"},{"size":1052,"mtime":1610708401163,"results":"77","hashOfConfig":"51"},{"size":669,"mtime":1610550173940,"results":"78","hashOfConfig":"51"},{"size":322,"mtime":1610550173940,"results":"79","hashOfConfig":"51"},{"size":849,"mtime":1611173007959,"results":"80","hashOfConfig":"51"},{"size":1066,"mtime":1611229453869,"results":"81","hashOfConfig":"51"},{"size":5249,"mtime":1611150155216,"results":"82","hashOfConfig":"51"},{"size":349,"mtime":1610754815343,"results":"83","hashOfConfig":"51"},{"size":1656,"mtime":1611273806518,"results":"84","hashOfConfig":"51"},{"size":1550,"mtime":1611271321009,"results":"85","hashOfConfig":"51"},{"size":654,"mtime":1611273806511,"results":"86","hashOfConfig":"51"},{"size":1047,"mtime":1611048188990,"results":"87","hashOfConfig":"51"},{"size":1156,"mtime":1611353360461,"results":"88","hashOfConfig":"51"},{"size":2945,"mtime":1611090218118,"results":"89","hashOfConfig":"51"},{"size":2686,"mtime":1611406655959,"results":"90","hashOfConfig":"51"},{"size":2059,"mtime":1611353360460,"results":"91","hashOfConfig":"51"},{"size":1081,"mtime":1610550173935,"results":"92","hashOfConfig":"51"},{"size":1683,"mtime":1611229453855,"results":"93","hashOfConfig":"51"},{"size":4931,"mtime":1611406710279,"results":"94","hashOfConfig":"51"},{"size":1530,"mtime":1611273806505,"results":"95","hashOfConfig":"51"},{"size":467,"mtime":1611229453857,"results":"96","hashOfConfig":"51"},{"size":4613,"mtime":1611323654804,"results":"97","hashOfConfig":"51"},{"size":1999,"mtime":1611406655958,"results":"98","hashOfConfig":"51"},{"size":1628,"mtime":1610550173936,"results":"99","hashOfConfig":"51"},{"filePath":"100","messages":"101","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"102"},"15qkesh",{"filePath":"103","messages":"104","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"102"},{"filePath":"105","messages":"106","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"102"},{"filePath":"107","messages":"108","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"102"},{"filePath":"109","messages":"110","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"102"},{"filePath":"111","messages":"112","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"102"},{"filePath":"113","messages":"114","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"115","usedDeprecatedRules":"102"},{"filePath":"116","messages":"117","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"102"},{"filePath":"118","messages":"119","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"120","usedDeprecatedRules":"102"},{"filePath":"121","messages":"122","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"123"},{"filePath":"124","messages":"125","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"126","usedDeprecatedRules":"102"},{"filePath":"127","messages":"128","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"102"},{"filePath":"129","messages":"130","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"131","usedDeprecatedRules":"102"},{"filePath":"132","messages":"133","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"102"},{"filePath":"134","messages":"135","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"136","usedDeprecatedRules":"102"},{"filePath":"137","messages":"138","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"102"},{"filePath":"139","messages":"140","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"141"},{"filePath":"142","messages":"143","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"102"},{"filePath":"144","messages":"145","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"102"},{"filePath":"146","messages":"147","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"102"},{"filePath":"148","messages":"149","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"150","usedDeprecatedRules":"102"},{"filePath":"151","messages":"152","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"102"},{"filePath":"153","messages":"154","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"155","usedDeprecatedRules":"102"},{"filePath":"156","messages":"157","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"102"},{"filePath":"158","messages":"159","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"102"},{"filePath":"160","messages":"161","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"102"},{"filePath":"162","messages":"163","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"102"},{"filePath":"164","messages":"165","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"102"},{"filePath":"166","messages":"167","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"102"},{"filePath":"168","messages":"169","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"102"},{"filePath":"170","messages":"171","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"102"},{"filePath":"172","messages":"173","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"102"},{"filePath":"174","messages":"175","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"102"},{"filePath":"176","messages":"177","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"178","usedDeprecatedRules":"102"},{"filePath":"179","messages":"180","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"181","usedDeprecatedRules":"102"},{"filePath":"182","messages":"183","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"102"},{"filePath":"184","messages":"185","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"141"},{"filePath":"186","messages":"187","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"188","usedDeprecatedRules":"102"},{"filePath":"189","messages":"190","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"102"},{"filePath":"191","messages":"192","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"102"},{"filePath":"193","messages":"194","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"195","usedDeprecatedRules":"102"},{"filePath":"196","messages":"197","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"102"},{"filePath":"198","messages":"199","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"102"},{"filePath":"200","messages":"201","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"202","usedDeprecatedRules":"102"},{"filePath":"203","messages":"204","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"102"},{"filePath":"205","messages":"206","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"207","usedDeprecatedRules":"102"},{"filePath":"208","messages":"209","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"102"},{"filePath":"210","messages":"211","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"102"},{"filePath":"212","messages":"213","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"102"},"C:\\Users\\danie\\OneDrive\\שולחן העבודה\\dev\\jameet\\jammit\\frontend\\src\\index.js",[],["214","215"],"C:\\Users\\danie\\OneDrive\\שולחן העבודה\\dev\\jameet\\jammit\\frontend\\src\\serviceWorkerRegistration.js",[],"C:\\Users\\danie\\OneDrive\\שולחן העבודה\\dev\\jameet\\jammit\\frontend\\src\\reportWebVitals.js",[],"C:\\Users\\danie\\OneDrive\\שולחן העבודה\\dev\\jameet\\jammit\\frontend\\src\\store\\store.js",[],"C:\\Users\\danie\\OneDrive\\שולחן העבודה\\dev\\jameet\\jammit\\frontend\\src\\App.jsx",[],"C:\\Users\\danie\\OneDrive\\שולחן העבודה\\dev\\jameet\\jammit\\frontend\\src\\pages\\LoginSignup.jsx",[],"C:\\Users\\danie\\OneDrive\\שולחן העבודה\\dev\\jameet\\jammit\\frontend\\src\\pages\\JamExplore.jsx",["216","217","218","219"],"import React, { Component } from \"react\";\r\nimport { Map, GoogleApiWrapper, Marker, InfoWindow } from \"google-maps-react\";\r\nimport { connect } from \"react-redux\";\r\nimport { loadJams, updateJamGoing } from \"../store/actions/jamActions.js\";\r\nimport { loadUsers } from \"../store/actions/userActions.js\";\r\nimport { JamPreview } from \"../cmps/JamPreview.jsx\";\r\nimport jamMarker from \"../assets/img/green-marker.png\"\r\nimport GpsFixedIcon from '@material-ui/icons/GpsFixed';\r\nimport Loader from \"react-loader-spinner\";\r\nimport PeopleAltRoundedIcon from '@material-ui/icons/PeopleAltRounded';\r\nimport EmojiPeopleRoundedIcon from '@material-ui/icons/EmojiPeopleRounded';\r\nimport RoomRoundedIcon from '@material-ui/icons/RoomRounded';\r\nimport AccessTimeRoundedIcon from '@material-ui/icons/AccessTimeRounded';\r\nimport HourglassEmptyRoundedIcon from '@material-ui/icons/HourglassEmptyRounded';\r\nimport { Link } from \"react-router-dom\"\r\n\r\nimport { JamNavbar } from '../cmps/JamDetailsNavbar';\r\n\r\nconst shape = {\r\n    coords: [1, 1, 1, 20, 18, 20, 18, 1],\r\n    type: \"poly\",\r\n  };\r\n\r\nconst mapStyles = {\r\n    width: \"100%\",\r\n    height: \"100%\",\r\n};\r\n\r\n// const containerStyle = {\r\n//     position: 'static',  \r\n//     width: '100%',\r\n//     height: '100%'\r\n// }\r\n\r\nconst mapStyle = [\r\n    {\r\n        featureType: 'landscape.man_made',\r\n        elementType: 'geometry.fill',\r\n        stylers: [\r\n            {\r\n                color: '#dceafa'\r\n            }\r\n        ]\r\n    },\r\n    {\r\n        elementType: \"labels.text\",\r\n        stylers: [\r\n            {\r\n                visibility: \"off\"\r\n            }\r\n        ]\r\n    },\r\n    {\r\n        featureType: \"road.highway\",\r\n        elementType: \"labels\",\r\n        stylers: [\r\n            {\r\n                visibility: \"on\"\r\n            }\r\n        ]\r\n    },\r\n    {\r\n        featureType: \"road.arterial\",\r\n        elementType: \"labels.text\",\r\n        stylers: [\r\n            {\r\n                visibility: \"on\"\r\n            }\r\n        ]\r\n    },\r\n    {\r\n        featureType: \"road.local\",\r\n        elementType: \"labels.text\",\r\n        stylers: [\r\n            {\r\n                visibility: \"on\"\r\n            }\r\n        ]\r\n    },\r\n]\r\nclass _JamExplore extends Component {\r\n    state = {\r\n        markers: null,\r\n        userPos: null,\r\n        mapZoom: 14,\r\n        showingInfoWindow: false, // Hides or shows the InfoWindow\r\n        activeMarker: {}, // Shows the active marker upon click\r\n        selectedPlace: null, // Shows the InfoWindow to the selected place upon a marker\r\n        isPopupShow: false,\r\n        selectedJam: null\r\n    };\r\n\r\n    mapRef = React.createRef();\r\n    componentDidMount() {\r\n        this.props.loadJams()\r\n        navigator.geolocation.getCurrentPosition(pos => {\r\n            const userPos = { position: { lat: null, lng: null } }\r\n            userPos.position.lat = pos.coords.latitude\r\n            userPos.position.lng = pos.coords.longitude\r\n            this.setState({ selectedPlace: userPos, userPos: userPos })\r\n            return pos.coords\r\n        })\r\n        this.setState({ markers: this.displayMarkers() })\r\n    }\r\n\r\n    timeFormatter = () => {\r\n        return <p>\r\n            <span>{new Intl.DateTimeFormat('il', { month: 'short' }).format(new Date(this.state.selectedJam.startsAt))}</span><span>-</span>\r\n            <span>{new Date(this.state.selectedJam.startsAt).toLocaleString('he-IL', { day: '2-digit', hour: '2-digit', minute: '2-digit' })}</span>\r\n        </p>\r\n    }\r\n\r\n    onMarkerClick = (props, marker) => {\r\n        this.setState({\r\n            activeMarker: marker,\r\n            showingInfoWindow: true,\r\n            selectedPlace: props,\r\n            mapZoom: 17\r\n        });\r\n        this.setState({ isPopupShow: true, selectedJam: props.jam })\r\n    }\r\n\r\n    componentDidUpdate(prevProps) {\r\n        if (this.props.jams !== prevProps.jams) {\r\n            this.setState({ markers: this.displayMarkers() });\r\n            if (this.state.activeMarker && this.state.activeMarker.position) {\r\n                this.setState({ selectedJam : this.props.jams.filter( (jam) => jam._id === this.state.activeMarker.jam._id )[0]});\r\n                /*this.setState({\r\n                    activeMarker: {...this.state.activeMarker , jam: this.props.jams.filter( (jam) => jam._id === this.state.activeMarker.jam._id )[0]}\r\n                });*/\r\n               \r\n            }\r\n          \r\n        }\r\n    }\r\n\r\n    onJamCenter = (jamId) => {\r\n        const marker = this.state.markers.find(marker => {\r\n            return marker.key === jamId\r\n        })\r\n        const props = marker.props\r\n        this.setState({\r\n            selectedPlace: props,\r\n            mapZoom: 17\r\n        });\r\n    }\r\n\r\n    onClose = props => {\r\n        if (this.state.showingInfoWindow) {\r\n            this.setState({\r\n                showingInfoWindow: false,\r\n                activeMarker: null\r\n            });\r\n        }\r\n    };\r\n    displayMarkers = () => {\r\n        return this.props.jams.map(jam => {\r\n            return <Marker key={jam._id}\r\n                position={{\r\n                    lat: jam.location.lat,\r\n                    lng: jam.location.lng\r\n                }}\r\n                onMousedown={this.onMarkerClick}\r\n                jam={jam}\r\n                title={jam.title}\r\n                imgUrl={jam.imgUrl}\r\n                currMembers={jam.usersGoing.length}\r\n                capacity={jam.capacity}\r\n                icon={{\r\n                    url: \"http://maps.google.com/mapfiles/ms/icons/purple-dot.png\",\r\n                    // url: jamMarker,\r\n                    anchor: new this.props.google.maps.Point(32, 32),\r\n                    scaledSize: new this.props.google.maps.Size(50, 50)\r\n                }}\r\n            />\r\n        });\r\n    }\r\n\r\n    //   centerMoved(mapProps, map) {\r\n    //       console.log(map.center.lat());\r\n\r\n    //   }\r\n    _mapLoaded(mapProps, map) {\r\n        map.setOptions({\r\n            styles: mapStyle\r\n        })\r\n    }\r\n\r\n    render() {\r\n        const { jams, loggedInUser } = this.props\r\n        const { userPos, selectedPlace, mapZoom, markers, isPopupShow } = this.state\r\n        const jam = this.state.selectedJam\r\n        if (!selectedPlace || jams.length === 0) {\r\n            return <div className=\"loader main-content pos-relative\">\r\n                <Loader type=\"Bars\" color=\"#00475F\" height={200} width={200} timeout={5000} />\r\n            </div>\r\n        }\r\n        return (\r\n            <>\r\n                <section className=\"flex explore-container pos-relative\">\r\n                    <button className=\"center-map-btn\" onClick={() => {\r\n                        const selectedPlaceCopy = { ...selectedPlace }\r\n                        selectedPlaceCopy.position.lat = userPos.position.lat\r\n                        selectedPlaceCopy.position.lng = userPos.position.lng\r\n                        this.setState({ selectedPlace: selectedPlaceCopy, mapZoom: 15 })\r\n                    }}><GpsFixedIcon style={{ fontSize: 40 }} /></button>\r\n                    <Map\r\n                        ref={this.mapRef}\r\n                        // containerStyle={containerStyle}\r\n                        google={this.props.google}\r\n                        zoom={mapZoom}\r\n                        style={mapStyles}\r\n                        // centerAroundCurrentLocation={true}\r\n                        initialCenter={{ lat: selectedPlace.position.lat, lng: selectedPlace.position.lng }}\r\n                        center={{ lat: selectedPlace.position.lat, lng: selectedPlace.position.lng }}\r\n                        onReady={(mapProps, map) => this._mapLoaded(mapProps, map)}\r\n                        disableDefaultUI={true}\r\n                    // onBoundsChanged={this.centerMoved}\r\n                    >\r\n                        {markers}\r\n                        {loggedInUser && <Marker\r\n                            name={'Your position'}\r\n                            position={userPos.position}\r\n                            icon={{\r\n                                url: loggedInUser.imgUrl,\r\n                                // anchor: new this.props.google.maps.Point(32, 32),\r\n                                scaledSize: new this.props.google.maps.Size(50, 50),\r\n                                origin: new this.props.google.maps.Point(0, 0),\r\n                                anchor: new this.props.google.maps.Point(17, 34),\r\n                            }}\r\n                        />}\r\n                        <InfoWindow\r\n                            marker={this.state.activeMarker}\r\n                            visible={this.state.showingInfoWindow}\r\n                            onClose={this.onClose}\r\n                        >\r\n                            <div>\r\n                                <h2>{this.state.selectedPlace.title}</h2>\r\n                                <h3>Capacity: {this.state.selectedPlace.currMembers} / {this.state.selectedPlace.capacity}</h3>\r\n                            </div>\r\n                        </InfoWindow>\r\n                    </Map>\r\n                    {isPopupShow &&\r\n                        <div className=\"jam-popup\">\r\n                            <div className=\"details-con\">\r\n                                <div className=\"close-details\" onClick={()=>this.setState({isPopupShow: false})}>&times;</div>\r\n                                <div className=\"map-thumb-wrapper\" onClick={() => this.props.history.push(`jam/${jam._id}`)}>\r\n                                    <img src={jam.imgUrl} alt=\"jam-thumbnail\" />\r\n                                </div>\r\n                                <JamNavbar\r\n                                history={this.props.history}\r\n                                user={this.props.loggedInUser}\r\n                                jam={jam}\r\n                                updateJamGoing={this.props.updateJamGoing}\r\n                                isUserAdmin={false}\r\n                                showBasicActionsOnly={true}\r\n                            />\r\n                                <h3 className=\"title-style\">Details</h3>\r\n                                <p><span className=\"icon-style\"><HourglassEmptyRoundedIcon /></span><span className=\"details-style\">{jam.capacity - jam.usersGoing.length} Slots Available</span></p>\r\n                                <p><span className=\"icon-style\"><PeopleAltRoundedIcon /></span> <span className=\"details-style\">{jam.usersGoing.length} People going</span></p>\r\n                                <p><span className=\"icon-style\"><EmojiPeopleRoundedIcon /></span> <span className=\"details-style\">Created by <Link to={\"/user/\" + jam.createdBy._id} > {jam.createdBy.fullname}</Link></span></p>\r\n                                <p><span className=\"icon-style\"><RoomRoundedIcon /></span> <span className=\"details-style\">{jam.location.address}, {jam.location.city}</span></p>\r\n                                <p><span className=\"icon-style\"><AccessTimeRoundedIcon /></span> <span className=\"details-style\">{this.timeFormatter()}</span></p>\r\n                                <div className=\"description-con\">\r\n                                    <h3 className=\"title-style\">Description</h3>\r\n                                    <p>{jam.description}</p>\r\n                                </div>\r\n                                <ul className=\"jam-card-tags flex\">{jam.tags.map((tag, idx) => {\r\n                                    return <li key={idx}>{tag}</li>\r\n                                })}\r\n                                </ul>\r\n                            </div>\r\n                        </div>\r\n                    }\r\n                </section>\r\n            </>\r\n        );\r\n    }\r\n}\r\n\r\nconst mapStateToProps = (state) => {\r\n    return {\r\n        jams: state.jamModule.jams,\r\n        users: state.userModule.users,\r\n        loggedInUser: state.userModule.loggedInUser\r\n    };\r\n};\r\nconst mapDispatchToProps = {\r\n    loadJams,\r\n    loadUsers,\r\n    updateJamGoing\r\n};\r\n\r\nexport const JamExplore = GoogleApiWrapper({\r\n    apiKey: \"AIzaSyBTd-r9ES9me88-mTQasKgom191cNMihjY\",\r\n})(connect(mapStateToProps, mapDispatchToProps)(_JamExplore));\r\n\r\n{/* <div className=\"jams-explore-container\">\r\n                <div className=\"jams-explore-filter flex column\">\r\n                    <h1>Filter Jams</h1>\r\n                    <div className=\"filter-inputs\">\r\n                        <input type=\"text\" name=\"name\" id=\"\"/>\r\n                        <select name=\"filterByInst\">\r\n                            <option value=\"\">By Instrument Missing</option>\r\n                            <option value=\"\">Singer</option>\r\n                            <option value=\"\">Guitar</option>\r\n                            <option value=\"\">Drums</option>\r\n                            <option value=\"\">Bass</option>\r\n                            <option value=\"\">Keyboard</option>\r\n                        </select>\r\n                        <select name=\"filterByRegion\">\r\n                            <option value=\"\">By Region</option>\r\n                            <option value=\"\">North</option>\r\n                            <option value=\"\">Center</option>\r\n                            <option value=\"\">South</option>\r\n                        </select>\r\n                    </div>\r\n                </div>\r\n                <ul className=\"jams-explore-list\">\r\n                    {jams.map((jam) => (\r\n                        <JamPreview key={jam._id} jam={jam}/>\r\n                    ))}\r\n                </ul>\r\n            </div> */}","C:\\Users\\danie\\OneDrive\\שולחן העבודה\\dev\\jameet\\jammit\\frontend\\src\\pages\\JamCreate.jsx",[],"C:\\Users\\danie\\OneDrive\\שולחן העבודה\\dev\\jameet\\jammit\\frontend\\src\\pages\\MembersList.jsx",["220"],"import React, { Component } from 'react'\r\nimport { connect } from 'react-redux'\r\nimport { UserList } from '../cmps/UserList'\r\nimport { loadUsers } from '../store/actions/userActions'\r\nimport SearchRoundedIcon from '@material-ui/icons/SearchRounded';\r\nimport Loader from 'react-loader-spinner';\r\n\r\nclass _MembersList extends Component {\r\n\r\n    state = {\r\n        filterBy: {\r\n            username: '',\r\n            fullname: ''\r\n        }\r\n    }\r\n\r\n    componentDidMount() {\r\n        this.props.loadUsers()\r\n    }\r\n\r\n    // handleChange = (ev) => {\r\n    //     const filterBy = { ...this.state.filterBy };\r\n    //     filterBy[ev.target.name] = ev.target.value;\r\n    //     this.setState({ filterBy }, ()=> {\r\n    //         this.props.loadUsers(this.state.filterBy)\r\n    //     });\r\n    // };\r\n    onHandleInputChange = ({ target }) => {\r\n        const field = target.name\r\n        // let value = (target.type === 'number') ? +target.value : target.value\r\n\r\n        this.setState(prevState => {\r\n            return {\r\n                ...prevState,\r\n                filterBy: {\r\n                    ...prevState.filterBy,\r\n                    [field]: target.value\r\n                }\r\n            }\r\n        }, () => {\r\n            const { filterBy } = this.state\r\n            this.props.loadUsers(filterBy)\r\n        })\r\n    }\r\n\r\n\r\n\r\n    onSetFilter = (ev) => {\r\n        ev.preventDefault();\r\n        // const { filterBy } = this.state\r\n        this.props.loadUsers(this.state.filterBy)\r\n    }\r\n\r\n    render() {\r\n        const { users } = this.props\r\n        const { username, fullname } = this.state.filterBy\r\n        if (!users) {\r\n            return <div className=\"loader main-content pos-relative\">\r\n                <Loader type=\"Bars\" color=\"#00475F\" height={200} width={200} timeout={5000} />\r\n            </div>\r\n        }\r\n        return (\r\n            <section>\r\n                <div className=\"search-area flex justify-center\">\r\n                    <div className=\"input-box\">\r\n                        <SearchRoundedIcon className=\"search-icon\" />\r\n                        <form onSubmit={this.onSetFilter}>\r\n                            <input name=\"username\"\r\n                                type=\"text\"\r\n                                id=\"username\"\r\n                                className=\"fs18\"\r\n                                placeholder=\"Looking for someone?\"\r\n                                value={username}\r\n                                onChange={this.onHandleInputChange} />\r\n                        </form>\r\n                    </div>\r\n                </div>\r\n                <div className=\"members-container\">\r\n                    <UserList users={users} />\r\n                </div>\r\n            </section>\r\n        )\r\n    }\r\n}\r\n\r\nconst mapStateToProps = state => {\r\n    return {\r\n        //   jams: state.jamModule.jams,\r\n        users: state.userModule.users,\r\n        filterBy: state.userModule.filterBy\r\n        // loggedInUser: state.userModule.loggedInUser\r\n    }\r\n}\r\nconst mapDispatchToProps = {\r\n    // loadJams,\r\n    loadUsers,\r\n}\r\n\r\nexport const MembersList = connect(mapStateToProps, mapDispatchToProps)(_MembersList)\r\n","C:\\Users\\danie\\OneDrive\\שולחן העבודה\\dev\\jameet\\jammit\\frontend\\src\\cmps\\MainNav.jsx",["221"],"import { withRouter, NavLink, Link } from 'react-router-dom'\r\nimport { connect } from 'react-redux'\r\nimport { logout } from '../store/actions/userActions.js'\r\nimport React, { Component } from 'react'\r\nimport { mainNavService } from '../services/mainNavService.js'\r\nimport logoM from \"../assets/img/logo-m.png\"\r\nimport { socketService } from '../services/socketService'\r\nimport { ToastContainer, toast } from 'react-toastify';\r\nimport 'react-toastify/dist/ReactToastify.css';\r\n\r\nclass _MainNav extends Component {\r\n\r\n\r\n    componentDidMount() {\r\n        if (this.props.loggedInUser) {\r\n            socketService.setup()\r\n            socketService.emit('user connection', this.props.loggedInUser._id);\r\n            socketService.on('send',this.sendInvite)\r\n            \r\n        }\r\n        mainNavService.setHomePageNavStyle()\r\n    }\r\n\r\n    sendInvite = (data)=> {\r\n        const Invite = ()=> {\r\n            return <div>\r\n                <h3>{data.msg}</h3>\r\n                <Link to={data.link}>Go To The Jam!</Link>\r\n            </div>\r\n        }\r\n        console.log(<Invite/>);\r\n        \r\n        toast(<Invite/>, {\r\n            position: \"top-right\",\r\n            autoClose: 10000,\r\n            hideProgressBar: false,\r\n            closeOnClick: true,\r\n            pauseOnHover: true,\r\n            draggable: true,\r\n            progress: undefined,\r\n            });\r\n    }\r\n\r\n    componentWillUnmount(){\r\n        if (this.props.loggedInUser){\r\n            socketService.off('user connection', this.props.loggedInUser._id)\r\n            socketService.off('send',this.func)\r\n            socketService.terminate()\r\n            clearTimeout(this.timeout)\r\n        }\r\n    }\r\n    componentDidUpdate() {\r\n        // let {locationPathName }= this.props.location.pathname\r\n        if( this.props.location.pathname !== '/'){\r\n            mainNavService.setNavStyle()\r\n        }else{\r\n            mainNavService.setHomePageNavStyle()\r\n        }\r\n    }\r\n\r\n    render() {\r\n        const { loggedInUser } = this.props;\r\n        return (\r\n            <>\r\n            <nav className=\"navbar flex\">\r\n                <div className=\"nav-links\">\r\n                    <NavLink to=\"/\" className=\"top-nav-logo\"><img src={logoM} alt=\"logo\"/></NavLink>\r\n                    <NavLink to=\"/search\">Jams</NavLink>\r\n                    <NavLink to=\"/members\">Members</NavLink>\r\n                </div>\r\n                <div className=\"user-nav\">\r\n                    {loggedInUser ? <NavLink className=\"user-avater-link\" to=\"/user\">\r\n                        <div className=\"avatar-wrapper pdding\">\r\n                            <img src={loggedInUser.imgUrl} />\r\n                        </div>\r\n                    </NavLink>\r\n                    :\r\n                    <NavLink to=\"/login\">Login</NavLink>}\r\n                </div>\r\n            </nav>\r\n            <ToastContainer/>\r\n            </>\r\n        )\r\n    }\r\n}\r\nconst mapStateToProps = state => {\r\n    return {\r\n        loggedInUser: state.userModule.loggedInUser\r\n    }\r\n}\r\nconst mapDispatchToProps = {\r\n    logout\r\n}\r\n\r\n\r\nexport const MainNav = withRouter(connect(mapStateToProps, mapDispatchToProps)(_MainNav))\r\n\r\n\r\n// idan raichel id 6005e093bf4a64698823123e\r\n// tomer id 6005e093bf4a646988231239","C:\\Users\\danie\\OneDrive\\שולחן העבודה\\dev\\jameet\\jammit\\frontend\\src\\pages\\Home.jsx",["222","223"],"import React, { Component } from 'react'\r\nimport { connect } from 'react-redux'\r\nimport { loadJams } from '../store/actions/jamActions.js'\r\nimport { loadUsers } from '../store/actions/userActions.js'\r\nimport { UserList } from '../cmps/UserList.jsx'\r\nimport { JamScroll } from '../cmps/JamScroll.jsx'\r\nimport { HeroSection } from '../cmps/HeroSection.jsx'\r\nimport Loader from 'react-loader-spinner'\r\nimport { Link } from 'react-router-dom'\r\nimport { JamList } from '../cmps/JamList.jsx'\r\nimport recordlogo from \"../assets/img/recordlogo.png\"\r\n\r\nclass _Home extends Component {\r\n  state = {}\r\n\r\n  componentDidMount() {\r\n    this.props.loadJams()\r\n    this.props.loadUsers()\r\n  }\r\n\r\n  getUpcomingJams = ()=> {\r\n    return this.props.jams.filter(jam => {\r\n      const weekFromNow = new Date().getTime()+86400000*7\r\n      return jam.startsAt > Date.now() && jam.startsAt < weekFromNow\r\n    })\r\n  }\r\n\r\n  getPopularJams = () => {\r\n    return this.props.jams.filter(jam => {\r\n      const slotsLeft = jam.capacity - jam.usersGoing.length\r\n      return slotsLeft < 10\r\n    })\r\n  }\r\n\r\n  getFeaturedMembers = ()=> {\r\n    return this.props.users.slice(0,4)\r\n  }\r\n\r\n  render() {\r\n    const { jams, users } = this.props\r\n    if (jams.length === 0 || users.length === 0) \r\n      return  <div className=\"loader main-content pos-relative\">\r\n                <Loader type=\"Bars\" color=\"#00475F\" height={200} width={200} timeout={5000} />\r\n              </div>\r\n    return ( \r\n      <div className=\"home\">\r\n        <HeroSection/>\r\n        <main className=\"main-content zebra-container flex column space-between\">\r\n          <div className=\"jams section\">\r\n              <div className=\"title-row\">\r\n                <h1 className=\"staatliches\">Added Recently >>></h1>\r\n                <Link to=\"/jams\">See All</Link>\r\n              </div>\r\n              <div className=\"carousel-container\">\r\n                <JamScroll jams={this.getPopularJams()} />\r\n              </div>\r\n          </div>\r\n          <div className=\"jams section\">\r\n          <div className=\"title-row\">\r\n                <h1 className=\"staatliches\">Upcoming This Week >>></h1>\r\n                <Link to=\"/jams\">See All</Link>\r\n              </div>\r\n              <div className=\"carousel-container\">\r\n              <JamScroll jams={this.getUpcomingJams()} />\r\n              </div>\r\n          </div>\r\n          {/* <div className=\"jams section\">\r\n              <h1>Jams</h1>\r\n              <JamList jams={jams} />\r\n          </div> */}\r\n\r\n          <div className=\"members-container section\">\r\n            <div className=\"title-row\">\r\n                <h1 className=\"staatliches\"> Featured Members >>></h1>\r\n                <Link to=\"/members\">See All</Link>\r\n            </div>\r\n            <div className=\"carousel-container\">\r\n            <UserList users={this.getFeaturedMembers()}/>\r\n            </div>\r\n          </div>\r\n        </main>\r\n        <footer className=\"flex column align-center\">\r\n          <img className=\"footer-logo\" src={recordlogo}/>\r\n          <small>All RIGHT RESERVED TO JAMEET2020&copy;</small>\r\n\r\n        </footer>\r\n      </div>\r\n    )\r\n  }\r\n}\r\n\r\nconst mapStateToProps = state => {\r\n  return {\r\n    jams: state.jamModule.jams,\r\n    users: state.userModule.users,\r\n    loggedInUser: state.userModule.loggedInUser\r\n  }\r\n}\r\nconst mapDispatchToProps = {\r\n  loadJams,\r\n  loadUsers,\r\n  // sendMsg\r\n}\r\n\r\nexport const Home = connect(mapStateToProps, mapDispatchToProps)(_Home)\r\n","C:\\Users\\danie\\OneDrive\\שולחן העבודה\\dev\\jameet\\jammit\\frontend\\src\\pages\\UserProfile.jsx",[],"C:\\Users\\danie\\OneDrive\\שולחן העבודה\\dev\\jameet\\jammit\\frontend\\src\\pages\\JamDetails.jsx",["224","225"],"import React, { Component } from 'react'\r\nimport { jamService } from '../services/jamService'\r\nimport RoomRoundedIcon from '@material-ui/icons/RoomRounded';\r\nimport AccessTimeRoundedIcon from '@material-ui/icons/AccessTimeRounded';\r\nimport PeopleAltRoundedIcon from '@material-ui/icons/PeopleAltRounded';\r\nimport EmojiPeopleRoundedIcon from '@material-ui/icons/EmojiPeopleRounded';\r\nimport HomeIcon from '@material-ui/icons/Home';\r\nimport { MapContainer } from '../cmps/MapContainer';\r\nimport { JamUserPreview } from '../cmps/JamUserPreview';\r\nimport { utilService } from '../services/utilService';\r\nimport { Link } from 'react-router-dom';\r\nimport { JamNavbar } from '../cmps/JamDetailsNavbar';\r\nimport JamGoingListModal from '../cmps/JamGoingModal';\r\nimport { connect } from 'react-redux';\r\nimport { updateJamGoing, loadJams, saveJam } from '../store/actions/jamActions.js';\r\n// import { jamGoingListModal } from '../cmps/JamGoingModal'\r\n// import { loadJams } from '../store/actions/jamActions'\r\nimport HourglassEmptyRoundedIcon from '@material-ui/icons/HourglassEmptyRounded';\r\nimport Loader from 'react-loader-spinner';\r\n\r\nconst emptyJam = {\r\n    title: \"\",\r\n    description: \"\",\r\n    imgUrl: \"http://some-img\",\r\n    capacity: null,\r\n    location: {\r\n        region: \"\",\r\n        city: \"\",\r\n        address: \"\",\r\n        lat: null,\r\n        lng: null\r\n    },\r\n    createdBy: {},\r\n    startsAt: null,\r\n    tags: [],\r\n    createdAt: null,\r\n    usersGoing: []\r\n}\r\n\r\nclass _JamDetails extends Component {\r\n    state = {\r\n        jam: null,\r\n        isUserAdmin: false,\r\n        isEditMode: false\r\n    }\r\n\r\n\r\n    async componentDidMount() {\r\n        this.props.loadJams()\r\n        if (this.props.isEditMode) {\r\n            this.setState({ jam: emptyJam, isEditMode: true, isUserAdmin: true })\r\n        }\r\n        else {\r\n            const jam = await jamService.getById(this.props.match.params.id);\r\n            console.log(jam);\r\n            this.setState({ jam }, () => {\r\n                this.checkIfUserHost()\r\n            })\r\n        }\r\n    }\r\n\r\n    componentWillReceiveProps(props) {\r\n        if (props.isSubmit) {\r\n            const miniUser = {}\r\n            miniUser._id = this.props.loggedInUser._id\r\n            miniUser.fullname = this.props.loggedInUser.fullname\r\n            miniUser.imgUrl = this.props.loggedInUser.imgUrl\r\n            miniUser.playing = this.props.loggedInUser.talents\r\n            this.props.saveJam(this.state.jam, miniUser)\r\n            this.props.jamSaved()\r\n        }\r\n        this.setState({ jam: props.jam })\r\n    }\r\n\r\n    componentDidUpdate(prevProps) {\r\n        if (this.state.isEditMode) return\r\n        if (this.props.jams !== prevProps.jams) {\r\n            this.setState({ jam: this.props.jams.find(jam => jam._id === this.props.match.params.id) });\r\n        }\r\n    }\r\n\r\n    checkIfUserHost = () => {\r\n        if (!this.props.loggedInUser) return\r\n        if (this.props.loggedInUser._id === this.state.jam.createdBy._id) {\r\n            this.setState({ isUserAdmin: true })\r\n        }\r\n    }\r\n\r\n    render() {\r\n        const { jam, isEditMode, isUserAdmin } = this.state\r\n        return (\r\n            <section className=\"jam-details\">\r\n                {!this.state.jam && <div className=\"loader main-content pos-relative\">\r\n                    <Loader type=\"Bars\" color=\"#00475F\" height={200} width={200} timeout={5000} />\r\n                </div>}\r\n                {this.state.jam &&\r\n                    <div className=\"page-con\">\r\n                        <div className=\"jam-title-img-con\">\r\n                            \r\n                            <h1 className=\"jam-title\">{this.state.jam.title}</h1>\r\n                        </div>\r\n                        {!this.state.isEditMode && <div>\r\n                            <JamNavbar\r\n                                history={this.props.history}\r\n                                user={this.props.loggedInUser}\r\n                                jam={this.state.jam}\r\n                                updateJamGoing={this.props.updateJamGoing}\r\n                                isUserAdmin={this.state.isUserAdmin}\r\n                            />\r\n                        </div>}\r\n                        <div className=\"page-content\">\r\n                            <div className=\"left-page-details\">\r\n                                <div className=\"details-con\">\r\n                                    <h3 className=\"title-style\">Details</h3>\r\n                                    <p><span className=\"icon-style\"><HourglassEmptyRoundedIcon /></span><span className=\"details-style\">{this.state.jam.capacity - this.state.jam.usersGoing.length} Slots Available</span></p>\r\n                                    <p><span className=\"icon-style\"><PeopleAltRoundedIcon /></span> <span className=\"details-style\">{this.state.jam.usersGoing.length} People going</span></p>\r\n                                    {!isEditMode && <p><span className=\"icon-style\"><EmojiPeopleRoundedIcon /></span> <span className=\"details-style\">Created by <Link to={\"/user/\" + this.state.jam.createdBy._id} > {this.state.jam.createdBy.fullname}</Link></span></p>}\r\n                                    <p><span className=\"icon-style\"><RoomRoundedIcon /></span> <span className=\"details-style\">{this.state.jam.location.address}, {this.state.jam.location.city}</span></p>\r\n                                    <p><span className=\"icon-style\"><AccessTimeRoundedIcon /></span> <span className=\"details-style\">{utilService.getFormattedDate(this.state.jam.startsAt)}</span></p>\r\n                                    <div className=\"description-con\">\r\n                                        <h3 className=\"title-style\">Description</h3>\r\n                                        <p>{this.state.jam.description}</p>\r\n                                    </div>\r\n                                        <ul className=\"jam-card-tags flex\">{jam.tags.map((tag, idx) => {\r\n                                            return <li key={idx}>{tag}</li>\r\n                                        })}\r\n                                        </ul>                               \r\n                                </div>\r\n                            </div>\r\n                            <div className=\"left-page-con\">\r\n                                <div className=\"location-con\">\r\n                                    <h3 className=\"title-style\">Location</h3>\r\n                                    <div><MapContainer lat={this.state.jam.location.lat} lng={this.state.jam.location.lng} /></div>\r\n                                </div>\r\n                                {!isEditMode && <div className=\"users-going-con-section\">\r\n                                    <ul className=\"users-going-con\">\r\n                                        {this.state.jam.usersGoing.slice(0, 3).map(function (user, index) {\r\n                                            return <JamUserPreview key={index} user={user} />\r\n                                        })}\r\n\r\n                                    </ul>\r\n                                    <div className=\"users-going-actions\"> <JamGoingListModal usersGoing={this.state.jam.usersGoing} /> </div>\r\n                                </div>}\r\n                            </div>\r\n                        </div>\r\n                    </div>}\r\n            </section>\r\n        )\r\n    }\r\n}\r\n\r\n\r\nconst mapStateToProps = state => {\r\n    return {\r\n        loggedInUser: state.userModule.loggedInUser,\r\n        jams: state.jamModule.jams\r\n    }\r\n}\r\nconst mapDispatchToProps = {\r\n    loadJams,\r\n    saveJam,\r\n    updateJamGoing\r\n}\r\n\r\nexport const JamDetails = connect(mapStateToProps, mapDispatchToProps)(_JamDetails)","C:\\Users\\danie\\OneDrive\\שולחן העבודה\\dev\\jameet\\jammit\\frontend\\src\\store\\reducers\\index.js",[],"C:\\Users\\danie\\OneDrive\\שולחן העבודה\\dev\\jameet\\jammit\\frontend\\src\\pages\\UserSection.jsx",["226","227"],"import React, { Component } from \"react\";\r\nimport { connect } from \"react-redux\";\r\nimport { loadUsers } from \"../store/actions/userActions\";\r\nimport { loadJams } from \"../store/actions/jamActions\";\r\nimport { UserInfo } from \"../cmps/UserProfile/UserInfo\";\r\nimport { UserTalents } from \"../cmps/UserProfile/UserTalents\";\r\nimport { JamList } from \"../cmps/JamList\";\r\nimport { UserList } from \"../cmps/UserList\";\r\nimport { JamCreate } from \"./JamCreate\";\r\nimport { JamScroll } from \"../cmps/JamScroll\";\r\nimport Loader from \"react-loader-spinner\";\r\n\r\nclass _UserSection extends Component {\r\n\r\n    state = {\r\n        activeTab : 'events'\r\n    }\r\n\r\n    componentDidMount() {\r\n        this.props.loadJams()\r\n        this.props.loadUsers()\r\n    }\r\n\r\n    onTabChoose = (tab)=> {\r\n        this.setState({activeTab: tab})\r\n    }\r\n\r\n    filterJamsByInst = () => {\r\n        return this.props.jams.filter((jam) => {\r\n            const user = jam.usersGoing.find((user) => {\r\n                return user.playing.some((inst) => {\r\n                    return inst === this.props.loggedInUser.talents[0];\r\n                });\r\n            });\r\n            if (!user) return jam;\r\n        });\r\n    };\r\n\r\n    filterMembersByFollow = () => {\r\n        return this.props.users.filter((user) => {\r\n            return user.followers.find(\r\n                (user) => user._id === this.props.loggedInUser._id\r\n            );\r\n        });\r\n    };\r\n\r\n    filterJamsByRegion = () => {\r\n        return this.props.jams.filter((jam) => {\r\n            return (\r\n                jam.location.region === this.props.loggedInUser.location.region\r\n            );\r\n        });\r\n    };\r\n\r\n    filterUserCreatedJams = () => {\r\n        return this.props.jams.filter(jam => jam.createdBy._id === this.props.loggedInUser._id)\r\n    }\r\n\r\n    render() {\r\n        const { jams, loggedInUser } = this.props\r\n        const { activeTab } = this.state\r\n        if (jams.length === 0 )  {\r\n             return <div className=\"loader main-content pos-relative\">\r\n             <Loader type=\"Bars\" color=\"#00475F\" height={200} width={200} timeout={5000} />\r\n           </div>\r\n        }\r\n        return (\r\n            \r\n            <main className=\"main-content user-section flex\">\r\n                <div className=\"user-details-aside flex column\">\r\n                    <UserInfo user={loggedInUser} isUserAdmin={true} />\r\n                    <UserTalents user={loggedInUser} isUserAdmin={true} />\r\n                    <button onClick={()=>this.onTabChoose('create')}>Start A New Jam</button>\r\n                </div>\r\n                <div className=\"filtered-jams section\">\r\n                    <div className=\"user-section-toolbar\">\r\n                        <ul className=\"toolbar-left\">\r\n                            <li onClick={()=>this.onTabChoose('events')} className={activeTab === 'events' ? 'active' : ''}>Explore Jams</li>\r\n                            <li onClick={()=>this.onTabChoose('members')} className={activeTab === 'members' ? 'active' : ''}>Members</li>\r\n                            <li onClick={()=>this.onTabChoose('manage')} className={activeTab === 'manage' ? 'active' : ''}>Manage Your Jams</li>\r\n                        </ul>\r\n                        \r\n                        \r\n                    </div>\r\n                   {activeTab === 'events' && <div>\r\n                        <h1>Jams Without {loggedInUser.talents[0]}</h1>\r\n                        <JamList jams={this.filterJamsByInst()} />\r\n                        <h1>Jams Around {loggedInUser.location.region} Region</h1>\r\n                        <JamList jams={this.filterJamsByRegion()} />\r\n                    </div>}\r\n                    {activeTab === 'members' && <div>\r\n                        <h1>Members You Follow</h1>\r\n                        <UserList users={this.filterMembersByFollow()}/>\r\n                    </div>}\r\n                    {activeTab === 'manage' && this.filterUserCreatedJams().length > 0 && \r\n                        <div>\r\n                            <h1>Jams Dashboard</h1>\r\n                            <JamList users={this.this.filterUserCreatedJams()}/>\r\n                    </div>}\r\n                    {activeTab === 'manage' && <h1>You haven't created any jams yet... </h1>\r\n                    }\r\n                    {activeTab === 'create' &&\r\n                        <div>\r\n                            <JamCreate/>\r\n                        </div>\r\n                    }\r\n                </div>\r\n          </main>\r\n       )\r\n    }\r\n}\r\nconst mapStateToProps = (state) => {\r\n    return {\r\n        jams: state.jamModule.jams,\r\n        users: state.userModule.users,\r\n        loggedInUser: state.userModule.loggedInUser,\r\n    };\r\n};\r\nconst mapDispatchToProps = {\r\n    loadJams,\r\n    loadUsers,\r\n};\r\n\r\nexport const UserSection = connect(mapStateToProps, mapDispatchToProps)(_UserSection);","C:\\Users\\danie\\OneDrive\\שולחן העבודה\\dev\\jameet\\jammit\\frontend\\src\\cmps\\JamList.jsx",[],"C:\\Users\\danie\\OneDrive\\שולחן העבודה\\dev\\jameet\\jammit\\frontend\\src\\cmps\\LoaderSpinner.jsx",[],["228","229"],"C:\\Users\\danie\\OneDrive\\שולחן העבודה\\dev\\jameet\\jammit\\frontend\\src\\store\\actions\\userActions.js",[],"C:\\Users\\danie\\OneDrive\\שולחן העבודה\\dev\\jameet\\jammit\\frontend\\src\\cmps\\JamScroll.jsx",[],"C:\\Users\\danie\\OneDrive\\שולחן העבודה\\dev\\jameet\\jammit\\frontend\\src\\services\\mainNavService.js",[],"C:\\Users\\danie\\OneDrive\\שולחן העבודה\\dev\\jameet\\jammit\\frontend\\src\\cmps\\JamPreview.jsx",["230","231"],"import LocationOnIcon from '@material-ui/icons/LocationOn';\r\nimport {instIcons} from '../assets/img/inst-icons/icons.js'\r\nimport { Link } from \"react-router-dom\";\r\nimport LocationOnOutlinedIcon from '@material-ui/icons/LocationOnOutlined';\r\nexport function JamPreview({ jam }) {\r\n\r\n    function showIcons (){\r\n\r\n        return instIcons.map(icon=>{\r\n            const user = jam.usersGoing.find(user => {\r\n                return user.playing.some(inst=>{\r\n                    const instName = Object.keys(icon)[0]\r\n                    return instName === inst\r\n                })\r\n            })\r\n            if (user) return <img className=\"inst-icon\" src={Object.values(icon)[0]} alt=\"instrument\"/>\r\n        })\r\n    }\r\n    const slotsLeft = jam.capacity - jam.usersGoing.length\r\n    \r\n    return (\r\n        <Link to={`/jam/${jam._id}`}><li className=\"jam-card flex column\">\r\n            <div className=\"thumb-wrapper flex column pos-relative\">\r\n                <img className=\"jam-thumb\" loading=\"lazy\" src={jam.imgUrl} alt=\"jam-thumbnail\"/>\r\n                <div className=\"inst-icons-wrapper\">\r\n                    {showIcons()}\r\n                </div>\r\n            </div>\r\n            {/* <h2>{jam.title}</h2> */}\r\n            <div className=\"jam-card-content flex\">\r\n                {/* <div className=\"date-wrapper\">\r\n                    <div className=\"date-month\">\r\n                        {new Intl.DateTimeFormat('il', { month: 'short' }).format(new Date(jam.startsAt))}\r\n                    </div>\r\n                    <div className=\"date-day\">\r\n                        \r\n                        {new Date(jam.startsAt).toLocaleString('he-IL',{day: '2-digit'})}\r\n                    </div>\r\n                </div> */}\r\n                <div className=\"jam-details-wrapper\">    \r\n                <h2>{jam.title}</h2>     \r\n                    <ul className=\"jam-card-tags flex \">{jam.tags.map((tag, idx) => {\r\n                        return <li key={idx}>{tag}</li> })}\r\n                    </ul>\r\n                    <div className=\"going-wrapper flex\">\r\n                        <div className=\"align-self\">\r\n                            <p className=\"gray-dark\"><LocationOnOutlinedIcon style={{ fontSize: 15 }}/>{jam.location.city}</p>\r\n                        </div>\r\n                        <span className={slotsLeft < 5 ? 'red' : 'green'}>\r\n                                {jam.usersGoing.length}/{jam.capacity} Slots\r\n                        </span>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        </li></Link> \r\n    );\r\n}","C:\\Users\\danie\\OneDrive\\שולחן העבודה\\dev\\jameet\\jammit\\frontend\\src\\services\\authService.js",[],"C:\\Users\\danie\\OneDrive\\שולחן העבודה\\dev\\jameet\\jammit\\frontend\\src\\store\\actions\\jamActions.js",["232"],"import { jamService } from '../../services/jamService'\r\n\r\nexport function loadJams() {\r\n  return async dispatch => {\r\n    try {\r\n      const jams = await jamService.query()\r\n      dispatch({ type: 'SET_JAMS', jams })\r\n\r\n    } catch (err) {\r\n      console.log('JamActions: err in loadJams', err)\r\n    }\r\n  }\r\n}\r\n\r\nexport function saveJam(jam, creatingUser) {\r\n  return async dispatch => {\r\n    try {\r\n      jam.createdAt = Date.now()\r\n      jam.createdBy = creatingUser\r\n      jam.usersGoing.push(creatingUser)\r\n      console.log(creatingUser);\r\n      \r\n      jam = await jamService.save(jam)\r\n      dispatch({ type: 'ADD_JAM', jam })\r\n    } catch (err) {\r\n      console.log('JamActions: err in saveJam', err)\r\n    }\r\n  }\r\n}\r\n\r\n\r\n\r\nexport function updateJamGoing(jam, user, isGoing) {\r\n  return async dispatch => {\r\n    try {\r\n     jamService.updateJamGoing(jam._id, user._id, isGoing);\r\n      if (isGoing) {\r\n        dispatch({ type: 'UPDATE_JAM_IS_GOING', data:  {jam: jam, user: user} });\r\n      } else {\r\n        dispatch({ type: 'UPDATE_JAM_IS_NOT_GOING', data:  {jam: jam, user: user} });\r\n      }\r\n     \r\n\r\n    } catch (err) {\r\n      console.log('JamActions: err in loadJams', err)\r\n    }\r\n  }\r\n}\r\n\r\n\r\nfunction makeId(length = 6) {\r\n  var txt = '';\r\n  var possible = 'ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789';\r\n\r\n  for (var i = 0; i < length; i++) {\r\n      txt += possible.charAt(Math.floor(Math.random() * possible.length));\r\n  }\r\n\r\n  return txt;\r\n}","C:\\Users\\danie\\OneDrive\\שולחן העבודה\\dev\\jameet\\jammit\\frontend\\src\\cmps\\HeroSection.jsx",[],"C:\\Users\\danie\\OneDrive\\שולחן העבודה\\dev\\jameet\\jammit\\frontend\\src\\cmps\\UserList.jsx",[],"C:\\Users\\danie\\OneDrive\\שולחן העבודה\\dev\\jameet\\jammit\\frontend\\src\\services\\userService.js",[],"C:\\Users\\danie\\OneDrive\\שולחן העבודה\\dev\\jameet\\jammit\\frontend\\src\\services\\utilService.js",[],"C:\\Users\\danie\\OneDrive\\שולחן העבודה\\dev\\jameet\\jammit\\frontend\\src\\store\\reducers\\reviewReducer.js",[],"C:\\Users\\danie\\OneDrive\\שולחן העבודה\\dev\\jameet\\jammit\\frontend\\src\\store\\reducers\\systemReducer.js",[],"C:\\Users\\danie\\OneDrive\\שולחן העבודה\\dev\\jameet\\jammit\\frontend\\src\\store\\reducers\\userReducer.js",[],"C:\\Users\\danie\\OneDrive\\שולחן העבודה\\dev\\jameet\\jammit\\frontend\\src\\store\\reducers\\jamReducer.js",[],"C:\\Users\\danie\\OneDrive\\שולחן העבודה\\dev\\jameet\\jammit\\frontend\\src\\cmps\\JamCreateForm.jsx",[],"C:\\Users\\danie\\OneDrive\\שולחן העבודה\\dev\\jameet\\jammit\\frontend\\src\\assets\\img\\inst-icons\\icons.js",[],"C:\\Users\\danie\\OneDrive\\שולחן העבודה\\dev\\jameet\\jammit\\frontend\\src\\services\\jamService.js",["233"],"import { httpService } from './httpService'\r\n// import { storageService } from './asyncStorageService'\r\nimport userService from './userService'\r\n// import { utilService } from './utilService'\r\n// import { userService } from './userService'\r\n\r\nexport const jamService = {\r\n    query,\r\n    getById,\r\n    updateJamGoing,\r\n    save\r\n}\r\n\r\nfunction query() {\r\n    // var queryStr = (!filterBy) ? '' : `?name=${filterBy.name}&sort=${sortBy}`\r\n    return httpService.get(`jam`)\r\n    // return jams;\r\n}\r\n\r\nfunction save(jam) {\r\n    return httpService.post(`jam`, jam)\r\n}\r\n\r\nfunction getById(jamId) {\r\n    // return jams.find(jam => jam._id === jamId)\r\n    // return storageService.get('jam', jamId)\r\n    return httpService.get(`jam/${jamId}`)\r\n}\r\n\r\n\r\nfunction updateJamGoing(jamId, user, isGoing) {\r\n    //UPDATE THE SERVER USER IS NOT GOING\r\n    // jams.find(jam => jam._id === jamId).usersGoing.push(user);\r\n     return httpService.put(`jam/${jamId}/isGoing`, {user:  {_id: user._id, fullname: user.fullname, imgUrl: user.imgUrl, playing: user.playing} , isGoing: isGoing})\r\n  \r\n}\r\n\r\n\r\n\r\n\r\n\r\n\r\n","C:\\Users\\danie\\OneDrive\\שולחן העבודה\\dev\\jameet\\jammit\\frontend\\src\\cmps\\UserPreview.jsx",["234","235","236"],"import { useHistory } from \"react-router-dom\";\r\nimport {instIcons} from '../assets/img/inst-icons/icons.js'\r\nimport LocationOnOutlinedIcon from '@material-ui/icons/LocationOnOutlined';\r\nexport function UserPreview({ user }) {\r\n\r\n    function showIcons() {\r\n        return instIcons.map((icon, idx)=>{\r\n            const talent = user.talents.find(talent=>{\r\n                return (talent === Object.keys(icon)[0])\r\n            })\r\n            if (talent) return <img key={idx} className=\"user-inst-icon\" src={Object.values(icon)[0]} alt=\"instrument\"/>\r\n        })\r\n    }\r\n\r\n    const history = useHistory()\r\n    return (\r\n        <li className=\"user-card flex column\" onClick={()=>history.push(`/user/${user._id}`)}>\r\n            <div className=\"thumb flex column pos-relative\">\r\n                <div className=\"img-wrapper flex justify-center\">\r\n                    <img className=\"user-card thumb\" src={user.imgUrl} className=\"userThumb\" alt=\"user-thumbnail\"/>\r\n                    <div className=\"user-inst-icons-wrapper\">\r\n                        {showIcons()}\r\n                    </div>\r\n                </div>\r\n            </div>\r\n            <div className=\"user-card-content flex column\">\r\n                <h2>{user.username}</h2>\r\n                <ul className=\"user-card-tags flex\">{user.tags.map((tag, idx) => {\r\n                    if (idx < 3) return <li key={idx}>{tag}</li> })}\r\n                </ul>\r\n                <p className=\"gray\"><LocationOnOutlinedIcon/>{user.location.city}</p>\r\n            </div>\r\n        </li>\r\n    );\r\n}","C:\\Users\\danie\\OneDrive\\שולחן העבודה\\dev\\jameet\\jammit\\frontend\\src\\cmps\\JamUserPreview.jsx",[],"C:\\Users\\danie\\OneDrive\\שולחן העבודה\\dev\\jameet\\jammit\\frontend\\src\\cmps\\MapContainer.jsx",[],"C:\\Users\\danie\\OneDrive\\שולחן העבודה\\dev\\jameet\\jammit\\frontend\\src\\cmps\\UserProfile\\UserTalents.jsx",["237"],"export function UserTalents({user}) {\r\n    return (\r\n        <div className=\"user-right-box flex column\">\r\n            <div className=\"top-card\">\r\n              <h1>Talents</h1>\r\n            <div className=\"user-talents\">\r\n              <ul className=\"flex column\">{user.talents.map((talent, idx) => {\r\n                return <li key={idx}>{talent}</li>\r\n              })}</ul>\r\n            </div>\r\n            </div>\r\n               <div className=\"followers bottom-card\">\r\n                <h1>Followers</h1>\r\n              {user.followers.map((follower, idx) => {\r\n                return <img className=\"follower-avatar\" src={follower.imgUrl} key={idx} />\r\n              })}\r\n            </div>\r\n        </div>\r\n    )\r\n}","C:\\Users\\danie\\OneDrive\\שולחן העבודה\\dev\\jameet\\jammit\\frontend\\src\\cmps\\JamGoingModal.jsx",[],"C:\\Users\\danie\\OneDrive\\שולחן העבודה\\dev\\jameet\\jammit\\frontend\\src\\cmps\\JamDetailsNavbar.jsx",[],"C:\\Users\\danie\\OneDrive\\שולחן העבודה\\dev\\jameet\\jammit\\frontend\\src\\cmps\\UserProfile\\UserInfo.jsx",["238","239","240"],"import ChatRoundedIcon from '@material-ui/icons/ChatRounded';\r\nimport FavoriteBorderRoundedIcon from '@material-ui/icons/FavoriteBorderRounded';\r\nimport LocationOnOutlinedIcon from '@material-ui/icons/LocationOnOutlined';\r\nimport FavoriteRoundedIcon from '@material-ui/icons/FavoriteRounded';\r\nimport AddRoundedIcon from '@material-ui/icons/AddRounded';\r\nimport { useHistory } from 'react-router';\r\n\r\n\r\nexport function UserInfo({user, followToggle, onFollowIconClick, isUserAdmin}) {\r\n    const history = useHistory()\r\n    return (\r\n        <div className=\"user-left-box flex column\">\r\n            <div className=\"user-basic-info flex\">\r\n                <div className=\"user-img\">\r\n                    <img src={user.imgUrl} />\r\n                </div>\r\n                <div className=\"user-tags-name flex column\">\r\n                    <span className=\"user-stage-name fs30\">{user.username}</span>\r\n                    <div className=\"user-location\">\r\n                    <LocationOnOutlinedIcon style={{ fontSize: 15 }} className=\"location-icon\" />\r\n                    <span>{user.location.city}</span>\r\n                    </div>\r\n                    <ul className=\"user-tags flex\">{user.tags.map((tag, idx) => {\r\n                            return <li key={idx}>{tag}</li> })}\r\n                    </ul>\r\n                </div>\r\n            </div>\r\n            <div className=\"user-about\">\r\n                <span>{user.about}</span>\r\n            </div>\r\n            {!isUserAdmin && <div className=\"reaction-icon\">\r\n                <ChatRoundedIcon style={{fontSize: 40}}/>\r\n                {!followToggle ? <FavoriteBorderRoundedIcon style={{fontSize: 40}} onClick={()=>onFollowIconClick()}/>\r\n                : <FavoriteRoundedIcon style={{fontSize: 40}} onClick={()=>onFollowIconClick()}/>}  \r\n            </div>}\r\n        </div>\r\n        \r\n    )\r\n}","C:\\Users\\danie\\OneDrive\\שולחן העבודה\\dev\\jameet\\jammit\\frontend\\src\\services\\httpService.js",[],"C:\\Users\\danie\\OneDrive\\שולחן העבודה\\dev\\jameet\\jammit\\frontend\\src\\cmps\\LoginModal.jsx",[],"C:\\Users\\danie\\OneDrive\\שולחן העבודה\\dev\\jameet\\jammit\\frontend\\src\\cmps\\InviteModal.jsx",["241"],"import { connect } from 'react-redux'\r\nimport ReactModal from 'react-modal';\r\nimport React from 'react';\r\nimport { FriendsInvitePreview } from './InviteFriends'\r\nimport { socketService } from '../services/socketService'\r\n\r\nclass _InviteModal extends React.Component {\r\n\r\n    constructor() {\r\n        super();\r\n        this.state = {\r\n            showModal: false,\r\n            selectAll: false,\r\n            following: [],\r\n            invited: []\r\n        };\r\n\r\n        this.handleOpenModal = this.handleOpenModal.bind(this);\r\n        this.handleCloseModal = this.handleCloseModal.bind(this);\r\n    }\r\n\r\n    handleOpenModal() {\r\n        this.setState({\r\n            showModal: true\r\n        });\r\n    }\r\n\r\n    handleCloseModal() {\r\n        this.props.handleCloseModal()\r\n\r\n    }\r\n    componentWillReceiveProps(nextProps){\r\n        if(nextProps.showModal!==this.state.showModal){\r\n          this.setState({showModal: nextProps.showModal });\r\n        }\r\n        if(nextProps.following!==this.state.following){\r\n            this.setState({following: nextProps.following.map((following) => {\r\n                return {...following,  isChecked: false};\r\n            })})\r\n          }\r\n      }\r\n    componentDidMount() {\r\n        const {invited} = this.state\r\n        document.addEventListener('keyup', (e) => {\r\n            if (e.keyCode === 27) this.handleCloseModal();\r\n        });\r\n        if (this.props.loggedInUser){\r\n            socketService.setup()\r\n            socketService.emit('user connection', this.props.loggedInUser._id);\r\n        }\r\n    }\r\n\r\n    componentWillUnmount(){\r\n        if (this.props.loggedInUser){\r\n            socketService.off('user connection', this.props.loggedInUser._id)\r\n            clearTimeout(this.timeout)\r\n        }\r\n    }\r\n\r\n    handleChange(user, invited) {\r\n        if (invited) {\r\n            let joined = this.state.invited.concat(user)\r\n            this.setState({invited: joined})\r\n        } else {\r\n            let removed = this.state.invited.filter( (userInvited)=> userInvited._id !== user._id)\r\n            this.setState({invited: removed})\r\n        }\r\n    }\r\n\r\n    selectAll () {\r\n        this.setState( {following: this.state.following.map((following) => {\r\n            return {...following, isChecked: true};\r\n        }), invited: this.state.following.slice()});\r\n    }\r\n    sendInvites() {\r\n        const link = `jam/${this.props.jamId}`\r\n        const msg = \r\n            `${this.props.loggedInUser.username} \r\n            has invited you to ${this.props.jamTitle}!!!`\r\n\r\n        this.state.invited.forEach(user=>{\r\n            console.log(user._id);\r\n            socketService.emit('user connection', user._id);\r\n            socketService.emit('invite', { msg, link })\r\n            socketService.emit('user connection', this.props.loggedInUser._id);\r\n        })\r\n    }\r\n    \r\n    render() {\r\n        const customStyles = {\r\n            content: {\r\n                top: '50%',\r\n                left: '50%',\r\n                right: 'auto',\r\n                bottom: 'auto',\r\n                marginRight: '-50%',\r\n                transform: 'translate(-50%, -50%)',\r\n                width: '550px',\r\n                height: '450px'\r\n                \r\n             \r\n\r\n            }\r\n        };\r\n        return (\r\n                <ReactModal\r\n                    isOpen={this.state.showModal}\r\n                    contentLabel=\"invite-modal\"\r\n                    style={customStyles}\r\n                    closeOnEsc={true}\r\n                    ariaHideApp={false}\r\n                >\r\n                    <button className=\"esc-btn-modal\" onClick={this.handleCloseModal}>X</button>\r\n                    <div className=\"invite-modal-title\">\r\n                    <h2>Invite Your Friends!</h2>\r\n                    </div>\r\n                    {/* <input type=\"checkbox\" name=\"select-all-box\" id=\"select-all-box\"></input>\r\n                    <label for=\"select-all-box\">Select All</label> */}\r\n                    <button className=\"select-all-btn\" onClick={() => this.selectAll()}>Select All</button>\r\n                    <div className=\"following-friends-list\">\r\n                   \r\n                    <ul className=\"following-list-con\">\r\n                        {this.state.following && this.state.following.map(function (user, index) {\r\n                            return <FriendsInvitePreview handleChange={this.handleChange.bind(this)}  key={index} user={user} />\r\n                        }.bind(this))}\r\n\r\n                    </ul>\r\n                    </div>\r\n                    <button className=\"send-invites-btn\" onClick={() => this.sendInvites()} >Send Invites</button>\r\n                </ReactModal>\r\n    \r\n        );\r\n    }\r\n}\r\nconst mapStateToProps = state => {\r\n    return {\r\n      loggedInUser: state.userModule.loggedInUser\r\n    }\r\n  }\r\n  const mapDispatchToProps = {\r\n  }\r\n  \r\n  export const InviteModal = connect(mapStateToProps, mapDispatchToProps)(_InviteModal)\r\n","C:\\Users\\danie\\OneDrive\\שולחן העבודה\\dev\\jameet\\jammit\\frontend\\src\\cmps\\InviteFriends.jsx",[],"C:\\Users\\danie\\OneDrive\\שולחן העבודה\\dev\\jameet\\jammit\\frontend\\src\\cmps\\StaticMap.jsx",["242"],"import React from 'react';\r\n\r\nexport class StaticMap extends React.Component {\r\n \r\n    render() {\r\n        const API_KEY = 'AIzaSyBTd-r9ES9me88-mTQasKgom191cNMihjY';\r\n        return (\r\n            <div>\r\n                <img src={`https://maps.googleapis.com/maps/api/staticmap?center=40.714728,-73.998672&zoom=12&size=500x300&key=${API_KEY}`} />\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\n","C:\\Users\\danie\\OneDrive\\שולחן העבודה\\dev\\jameet\\jammit\\frontend\\src\\pages\\JamsList.jsx",[],"C:\\Users\\danie\\OneDrive\\שולחן העבודה\\dev\\jameet\\jammit\\frontend\\src\\cmps\\JamChat.jsx",[],"C:\\Users\\danie\\OneDrive\\שולחן העבודה\\dev\\jameet\\jammit\\frontend\\src\\services\\socketService.js",[],{"ruleId":"243","replacedBy":"244"},{"ruleId":"245","replacedBy":"246"},{"ruleId":"247","severity":1,"message":"248","line":6,"column":10,"nodeType":"249","messageId":"250","endLine":6,"endColumn":20},{"ruleId":"247","severity":1,"message":"251","line":7,"column":8,"nodeType":"249","messageId":"250","endLine":7,"endColumn":17},{"ruleId":"247","severity":1,"message":"252","line":19,"column":7,"nodeType":"249","messageId":"250","endLine":19,"endColumn":12},{"ruleId":"253","severity":1,"message":"254","line":298,"column":1,"nodeType":"255","messageId":"256","endLine":324,"endColumn":23},{"ruleId":"247","severity":1,"message":"257","line":56,"column":27,"nodeType":"249","messageId":"250","endLine":56,"endColumn":35},{"ruleId":"258","severity":1,"message":"259","line":74,"column":29,"nodeType":"260","endLine":74,"endColumn":62},{"ruleId":"247","severity":1,"message":"261","line":10,"column":10,"nodeType":"249","messageId":"250","endLine":10,"endColumn":17},{"ruleId":"258","severity":1,"message":"259","line":83,"column":11,"nodeType":"260","endLine":83,"endColumn":58},{"ruleId":"247","severity":1,"message":"262","line":7,"column":8,"nodeType":"249","messageId":"250","endLine":7,"endColumn":16},{"ruleId":"247","severity":1,"message":"263","line":90,"column":34,"nodeType":"249","messageId":"250","endLine":90,"endColumn":45},{"ruleId":"247","severity":1,"message":"264","line":10,"column":10,"nodeType":"249","messageId":"250","endLine":10,"endColumn":19},{"ruleId":"265","severity":1,"message":"266","line":29,"column":45,"nodeType":"267","messageId":"268","endLine":29,"endColumn":47},{"ruleId":"243","replacedBy":"269"},{"ruleId":"245","replacedBy":"270"},{"ruleId":"247","severity":1,"message":"271","line":1,"column":8,"nodeType":"249","messageId":"250","endLine":1,"endColumn":22},{"ruleId":"265","severity":1,"message":"272","line":9,"column":34,"nodeType":"267","messageId":"268","endLine":9,"endColumn":36},{"ruleId":"247","severity":1,"message":"273","line":51,"column":10,"nodeType":"249","messageId":"250","endLine":51,"endColumn":16},{"ruleId":"247","severity":1,"message":"274","line":3,"column":8,"nodeType":"249","messageId":"250","endLine":3,"endColumn":19},{"ruleId":"265","severity":1,"message":"272","line":7,"column":41,"nodeType":"267","messageId":"268","endLine":7,"endColumn":43},{"ruleId":"275","severity":1,"message":"276","line":20,"column":72,"nodeType":"277","endLine":20,"endColumn":93},{"ruleId":"265","severity":1,"message":"272","line":28,"column":79,"nodeType":"267","messageId":"268","endLine":28,"endColumn":81},{"ruleId":"258","severity":1,"message":"259","line":15,"column":24,"nodeType":"260","endLine":15,"endColumn":91},{"ruleId":"247","severity":1,"message":"278","line":5,"column":8,"nodeType":"249","messageId":"250","endLine":5,"endColumn":22},{"ruleId":"247","severity":1,"message":"279","line":10,"column":11,"nodeType":"249","messageId":"250","endLine":10,"endColumn":18},{"ruleId":"258","severity":1,"message":"259","line":15,"column":21,"nodeType":"260","endLine":15,"endColumn":46},{"ruleId":"247","severity":1,"message":"280","line":43,"column":16,"nodeType":"249","messageId":"250","endLine":43,"endColumn":23},{"ruleId":"258","severity":1,"message":"259","line":9,"column":17,"nodeType":"260","endLine":9,"endColumn":143},"no-native-reassign",["281"],"no-negated-in-lhs",["282"],"no-unused-vars","'JamPreview' is defined but never used.","Identifier","unusedVar","'jamMarker' is defined but never used.","'shape' is assigned a value but never used.","no-lone-blocks","Block is redundant.","BlockStatement","redundantBlock","'fullname' is assigned a value but never used.","jsx-a11y/alt-text","img elements must have an alt prop, either with meaningful text, or an empty string for decorative images.","JSXOpeningElement","'JamList' is defined but never used.","'HomeIcon' is defined but never used.","'isUserAdmin' is assigned a value but never used.","'JamScroll' is defined but never used.","array-callback-return","Array.prototype.filter() expects a value to be returned at the end of arrow function.","ArrowFunctionExpression","expectedAtEnd",["281"],["282"],"'LocationOnIcon' is defined but never used.","Array.prototype.map() expects a value to be returned at the end of arrow function.","'makeId' is defined but never used.","'userService' is defined but never used.","react/jsx-no-duplicate-props","No duplicate props allowed","JSXAttribute","'AddRoundedIcon' is defined but never used.","'history' is assigned a value but never used.","'invited' is assigned a value but never used.","no-global-assign","no-unsafe-negation"]
>>>>>>> 8d516946e78ab8ebd65fa6a226108f85414bb5f2
