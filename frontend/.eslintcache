[{"/Users/evyatarmintz/Desktop/jammit/frontend/src/index.js":"1","/Users/evyatarmintz/Desktop/jammit/frontend/src/serviceWorkerRegistration.js":"2","/Users/evyatarmintz/Desktop/jammit/frontend/src/reportWebVitals.js":"3","/Users/evyatarmintz/Desktop/jammit/frontend/src/store/store.js":"4","/Users/evyatarmintz/Desktop/jammit/frontend/src/App.jsx":"5","/Users/evyatarmintz/Desktop/jammit/frontend/src/pages/Home.jsx":"6","/Users/evyatarmintz/Desktop/jammit/frontend/src/pages/LoginSignup.jsx":"7","/Users/evyatarmintz/Desktop/jammit/frontend/src/pages/UserProfile.jsx":"8","/Users/evyatarmintz/Desktop/jammit/frontend/src/pages/JamDetails.jsx":"9","/Users/evyatarmintz/Desktop/jammit/frontend/src/pages/JamExplore.jsx":"10","/Users/evyatarmintz/Desktop/jammit/frontend/src/pages/MembersList.jsx":"11","/Users/evyatarmintz/Desktop/jammit/frontend/src/cmps/MainNav.jsx":"12","/Users/evyatarmintz/Desktop/jammit/frontend/src/pages/JamCreate.jsx":"13","/Users/evyatarmintz/Desktop/jammit/frontend/src/pages/UserSection.jsx":"14","/Users/evyatarmintz/Desktop/jammit/frontend/src/store/reducers/index.js":"15","/Users/evyatarmintz/Desktop/jammit/frontend/src/cmps/UserList.jsx":"16","/Users/evyatarmintz/Desktop/jammit/frontend/src/cmps/JamScroll.jsx":"17","/Users/evyatarmintz/Desktop/jammit/frontend/src/cmps/HeroSection.jsx":"18","/Users/evyatarmintz/Desktop/jammit/frontend/src/cmps/JamPreview.jsx":"19","/Users/evyatarmintz/Desktop/jammit/frontend/src/cmps/LoaderSpinner.jsx":"20","/Users/evyatarmintz/Desktop/jammit/frontend/src/cmps/JamList.jsx":"21","/Users/evyatarmintz/Desktop/jammit/frontend/src/store/actions/jamActions.js":"22","/Users/evyatarmintz/Desktop/jammit/frontend/src/store/actions/userActions.js":"23","/Users/evyatarmintz/Desktop/jammit/frontend/src/services/authService.js":"24","/Users/evyatarmintz/Desktop/jammit/frontend/src/services/mainNavService.js":"25","/Users/evyatarmintz/Desktop/jammit/frontend/src/services/userService.js":"26","/Users/evyatarmintz/Desktop/jammit/frontend/src/services/jamService.js":"27","/Users/evyatarmintz/Desktop/jammit/frontend/src/services/utilService.js":"28","/Users/evyatarmintz/Desktop/jammit/frontend/src/cmps/UserPreview.jsx":"29","/Users/evyatarmintz/Desktop/jammit/frontend/src/cmps/MapContainer.jsx":"30","/Users/evyatarmintz/Desktop/jammit/frontend/src/cmps/JamDetailsNavbar.jsx":"31","/Users/evyatarmintz/Desktop/jammit/frontend/src/cmps/JamUserPreview.jsx":"32","/Users/evyatarmintz/Desktop/jammit/frontend/src/cmps/JamGoingModal.jsx":"33","/Users/evyatarmintz/Desktop/jammit/frontend/src/assets/img/inst-icons/icons.js":"34","/Users/evyatarmintz/Desktop/jammit/frontend/src/cmps/JamCreateForm.jsx":"35","/Users/evyatarmintz/Desktop/jammit/frontend/src/store/reducers/userReducer.js":"36","/Users/evyatarmintz/Desktop/jammit/frontend/src/store/reducers/reviewReducer.js":"37","/Users/evyatarmintz/Desktop/jammit/frontend/src/store/reducers/systemReducer.js":"38","/Users/evyatarmintz/Desktop/jammit/frontend/src/store/reducers/jamReducer.js":"39","/Users/evyatarmintz/Desktop/jammit/frontend/src/cmps/UserProfile/UserInfo.jsx":"40","/Users/evyatarmintz/Desktop/jammit/frontend/src/cmps/UserProfile/UserTalents.jsx":"41","/Users/evyatarmintz/Desktop/jammit/frontend/src/services/httpService.js":"42","/Users/evyatarmintz/Desktop/jammit/frontend/src/cmps/InviteModal.jsx":"43","/Users/evyatarmintz/Desktop/jammit/frontend/src/cmps/LoginModal.jsx":"44","/Users/evyatarmintz/Desktop/jammit/frontend/src/cmps/InviteFriends.jsx":"45","/Users/evyatarmintz/Desktop/jammit/frontend/src/cmps/StaticMap.jsx":"46","/Users/evyatarmintz/Desktop/jammit/frontend/src/pages/JamsList.jsx":"47","/Users/evyatarmintz/Desktop/jammit/frontend/src/services/socketService.js":"48","/Users/evyatarmintz/Desktop/jammit/frontend/src/cmps/JamChat.jsx":"49"},{"size":910,"mtime":1610196596000,"results":"50","hashOfConfig":"51"},{"size":5064,"mtime":499162500000,"results":"52","hashOfConfig":"51"},{"size":364,"mtime":499162500000,"results":"53","hashOfConfig":"51"},{"size":323,"mtime":1609071193000,"results":"54","hashOfConfig":"51"},{"size":1382,"mtime":1611168238796,"results":"55","hashOfConfig":"51"},{"size":3441,"mtime":1611416772899,"results":"56","hashOfConfig":"51"},{"size":4731,"mtime":1610982187179,"results":"57","hashOfConfig":"51"},{"size":2553,"mtime":1611325649014,"results":"58","hashOfConfig":"51"},{"size":8350,"mtime":1611433827222,"results":"59","hashOfConfig":"51"},{"size":13172,"mtime":1611433827224,"results":"60","hashOfConfig":"51"},{"size":3833,"mtime":1611320457550,"results":"61","hashOfConfig":"51"},{"size":3093,"mtime":1611430923319,"results":"62","hashOfConfig":"51"},{"size":1723,"mtime":1610878828751,"results":"63","hashOfConfig":"51"},{"size":4720,"mtime":1611408733732,"results":"64","hashOfConfig":"51"},{"size":396,"mtime":1610546436417,"results":"65","hashOfConfig":"51"},{"size":268,"mtime":1610807381185,"results":"66","hashOfConfig":"51"},{"size":1507,"mtime":1611416558694,"results":"67","hashOfConfig":"51"},{"size":1411,"mtime":1611393147487,"results":"68","hashOfConfig":"51"},{"size":2574,"mtime":1611411713212,"results":"69","hashOfConfig":"51"},{"size":485,"mtime":1611075733228,"results":"70","hashOfConfig":"51"},{"size":258,"mtime":1611066595840,"results":"71","hashOfConfig":"51"},{"size":1483,"mtime":1611272257104,"results":"72","hashOfConfig":"51"},{"size":1628,"mtime":1611263402159,"results":"73","hashOfConfig":"51"},{"size":1539,"mtime":1610560658938,"results":"74","hashOfConfig":"51"},{"size":1538,"mtime":1611229389908,"results":"75","hashOfConfig":"51"},{"size":2017,"mtime":1611229389908,"results":"76","hashOfConfig":"51"},{"size":1595,"mtime":1611272356736,"results":"77","hashOfConfig":"51"},{"size":1052,"mtime":1610708489092,"results":"78","hashOfConfig":"51"},{"size":1516,"mtime":1611273915737,"results":"79","hashOfConfig":"51"},{"size":1010,"mtime":1611062130197,"results":"80","hashOfConfig":"51"},{"size":2627,"mtime":1611402186564,"results":"81","hashOfConfig":"51"},{"size":635,"mtime":1611273481589,"results":"82","hashOfConfig":"51"},{"size":2595,"mtime":1611433827216,"results":"83","hashOfConfig":"51"},{"size":335,"mtime":1610751806747,"results":"84","hashOfConfig":"51"},{"size":5112,"mtime":1611096704711,"results":"85","hashOfConfig":"51"},{"size":849,"mtime":1611263424956,"results":"86","hashOfConfig":"51"},{"size":669,"mtime":1609956874000,"results":"87","hashOfConfig":"51"},{"size":322,"mtime":1609071005000,"results":"88","hashOfConfig":"51"},{"size":1040,"mtime":1611226567649,"results":"89","hashOfConfig":"51"},{"size":2018,"mtime":1611329881388,"results":"90","hashOfConfig":"51"},{"size":1129,"mtime":1611344592287,"results":"91","hashOfConfig":"51"},{"size":1081,"mtime":1611095239674,"results":"92","hashOfConfig":"51"},{"size":5115,"mtime":1611427964312,"results":"93","hashOfConfig":"51"},{"size":1615,"mtime":1611229389878,"results":"94","hashOfConfig":"51"},{"size":1389,"mtime":1611425283262,"results":"95","hashOfConfig":"51"},{"size":453,"mtime":1611433827217,"results":"96","hashOfConfig":"51"},{"size":4475,"mtime":1611310995765,"results":"97","hashOfConfig":"51"},{"size":1628,"mtime":1611356016761,"results":"98","hashOfConfig":"51"},{"size":1962,"mtime":1611408128349,"results":"99","hashOfConfig":"51"},{"filePath":"100","messages":"101","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"102"},"1noxppp",{"filePath":"103","messages":"104","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"102"},{"filePath":"105","messages":"106","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"102"},{"filePath":"107","messages":"108","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"102"},{"filePath":"109","messages":"110","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"102"},{"filePath":"111","messages":"112","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"113","messages":"114","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"102"},{"filePath":"115","messages":"116","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"117","messages":"118","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"119","messages":"120","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"121","usedDeprecatedRules":"102"},{"filePath":"122","messages":"123","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"124","messages":"125","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"126","messages":"127","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"102"},{"filePath":"128","messages":"129","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"130","messages":"131","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"102"},{"filePath":"132","messages":"133","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"102"},{"filePath":"134","messages":"135","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"136","messages":"137","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"138","messages":"139","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"140","messages":"141","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"142"},{"filePath":"143","messages":"144","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"102"},{"filePath":"145","messages":"146","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"147","usedDeprecatedRules":"102"},{"filePath":"148","messages":"149","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"150","messages":"151","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"102"},{"filePath":"152","messages":"153","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"102"},{"filePath":"154","messages":"155","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"102"},{"filePath":"156","messages":"157","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"158","messages":"159","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"102"},{"filePath":"160","messages":"161","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"162","usedDeprecatedRules":"102"},{"filePath":"163","messages":"164","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"142"},{"filePath":"165","messages":"166","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"102"},{"filePath":"167","messages":"168","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"169","messages":"170","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"102"},{"filePath":"171","messages":"172","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"102"},{"filePath":"173","messages":"174","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"102"},{"filePath":"175","messages":"176","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"177","messages":"178","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"102"},{"filePath":"179","messages":"180","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"102"},{"filePath":"181","messages":"182","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"102"},{"filePath":"183","messages":"184","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"185","messages":"186","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"187","messages":"188","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"102"},{"filePath":"189","messages":"190","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"191","messages":"192","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"102"},{"filePath":"193","messages":"194","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"195","messages":"196","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"197","usedDeprecatedRules":"102"},{"filePath":"198","messages":"199","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"200","messages":"201","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"202","messages":"203","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"/Users/evyatarmintz/Desktop/jammit/frontend/src/index.js",[],["204","205"],"/Users/evyatarmintz/Desktop/jammit/frontend/src/serviceWorkerRegistration.js",[],"/Users/evyatarmintz/Desktop/jammit/frontend/src/reportWebVitals.js",[],"/Users/evyatarmintz/Desktop/jammit/frontend/src/store/store.js",[],"/Users/evyatarmintz/Desktop/jammit/frontend/src/App.jsx",[],"/Users/evyatarmintz/Desktop/jammit/frontend/src/pages/Home.jsx",["206","207"],"/Users/evyatarmintz/Desktop/jammit/frontend/src/pages/LoginSignup.jsx",[],"/Users/evyatarmintz/Desktop/jammit/frontend/src/pages/UserProfile.jsx",["208"],"/Users/evyatarmintz/Desktop/jammit/frontend/src/pages/JamDetails.jsx",["209"],"/Users/evyatarmintz/Desktop/jammit/frontend/src/pages/JamExplore.jsx",["210"],"import React, { Component } from \"react\";\nimport { Map, GoogleApiWrapper, Marker, InfoWindow } from \"google-maps-react\";\nimport { connect } from \"react-redux\";\nimport { loadJams, updateJamGoing } from \"../store/actions/jamActions.js\";\nimport { loadUsers } from \"../store/actions/userActions.js\";\nimport jamMarker from \"../assets/img/green-marker.png\"\nimport GpsFixedIcon from '@material-ui/icons/GpsFixed';\nimport Loader from \"react-loader-spinner\";\nimport PeopleAltRoundedIcon from '@material-ui/icons/PeopleAltRounded';\nimport EmojiPeopleRoundedIcon from '@material-ui/icons/EmojiPeopleRounded';\nimport RoomRoundedIcon from '@material-ui/icons/RoomRounded';\nimport AccessTimeRoundedIcon from '@material-ui/icons/AccessTimeRounded';\nimport HourglassEmptyRoundedIcon from '@material-ui/icons/HourglassEmptyRounded';\nimport { Link } from \"react-router-dom\";\nimport { JamNavbar } from '../cmps/JamDetailsNavbar';\n\nconst mapStyles = {\n    width: \"100%\",\n    height: \"100%\",\n};\n\n// const containerStyle = {\n//     position: 'static',  \n//     width: '100%',\n//     height: '100%'\n// }\n\nconst mapStyle = [\n    {\n        featureType: 'landscape.man_made',\n        elementType: 'geometry.fill',\n        stylers: [\n            {\n                color: '#dceafa'\n            }\n        ]\n    },\n    {\n        elementType: \"labels.text\",\n        stylers: [\n            {\n                visibility: \"off\"\n            }\n        ]\n    },\n    {\n        featureType: \"road.highway\",\n        elementType: \"labels\",\n        stylers: [\n            {\n                visibility: \"on\"\n            }\n        ]\n    },\n    {\n        featureType: \"road.arterial\",\n        elementType: \"labels.text\",\n        stylers: [\n            {\n                visibility: \"on\"\n            }\n        ]\n    },\n    {\n        featureType: \"road.local\",\n        elementType: \"labels.text\",\n        stylers: [\n            {\n                visibility: \"on\"\n            }\n        ]\n    },\n]\nclass _JamExplore extends Component {\n    state = {\n        markers: null,\n        userPos: null,\n        mapZoom: 14,\n        showingInfoWindow: false, // Hides or shows the InfoWindow\n        activeMarker: {}, // Shows the active marker upon click\n        selectedPlace: null, // Shows the InfoWindow to the selected place upon a marker\n        isPopupShow: false,\n        selectedJam: null\n    };\n\n    mapRef = React.createRef();\n    componentDidMount() {\n        this.props.loadJams()\n        navigator.geolocation.getCurrentPosition(pos => {\n            const userPos = { position: { lat: null, lng: null } }\n            userPos.position.lat = pos.coords.latitude\n            userPos.position.lng = pos.coords.longitude\n            this.setState({ selectedPlace: userPos, userPos: userPos })\n            return pos.coords\n        })\n        this.setState({ markers: this.displayMarkers() })\n    }\n\n    timeFormatter = () => {\n        return <p>\n            <span>{new Intl.DateTimeFormat('il', { month: 'short' }).format(new Date(this.state.selectedJam.startsAt))}</span><span>-</span>\n            <span>{new Date(this.state.selectedJam.startsAt).toLocaleString('he-IL', { day: '2-digit', hour: '2-digit', minute: '2-digit' })}</span>\n        </p>\n    }\n\n    onMarkerClick = (props, marker) => {\n        this.setState({\n            activeMarker: marker,\n            showingInfoWindow: true,\n            selectedPlace: props,\n            mapZoom: 17\n        });\n        this.setState({ isPopupShow: true, selectedJam: props.jam })\n    }\n\n    componentDidUpdate(prevProps) {\n        if (this.props.jams !== prevProps.jams) {\n            this.setState({ markers: this.displayMarkers() });\n            if (this.state.activeMarker && this.state.activeMarker.position) {\n                this.setState({ selectedJam : this.props.jams.filter( (jam) => jam._id === this.state.activeMarker.jam._id )[0]});\n                /*this.setState({\n                    activeMarker: {...this.state.activeMarker , jam: this.props.jams.filter( (jam) => jam._id === this.state.activeMarker.jam._id )[0]}\n                });*/\n               \n            }\n          \n        }\n    }\n\n    onJamCenter = (jamId) => {\n        const marker = this.state.markers.find(marker => {\n            return marker.key === jamId\n        })\n        const props = marker.props\n        this.setState({\n            selectedPlace: props,\n            mapZoom: 17\n        });\n    }\n\n    onClose = props => {\n        if (this.state.showingInfoWindow) {\n            this.setState({\n                showingInfoWindow: false,\n                activeMarker: null\n            });\n        }\n    };\n    displayMarkers = () => {\n        return this.props.jams.map(jam => {\n            return <Marker key={jam._id}\n                position={{\n                    lat: jam.location.lat,\n                    lng: jam.location.lng\n                }}\n                onMousedown={this.onMarkerClick}\n                jam={jam}\n                title={jam.title}\n                imgUrl={jam.imgUrl}\n                currMembers={jam.usersGoing.length}\n                capacity={jam.capacity}\n                icon={{\n                    url: \"http://maps.google.com/mapfiles/ms/icons/purple-dot.png\",\n                    // url: jamMarker,\n                    anchor: new this.props.google.maps.Point(32, 32),\n                    scaledSize: new this.props.google.maps.Size(50, 50)\n                }}\n            />\n        });\n    }\n\n    //   centerMoved(mapProps, map) {\n    //       console.log(map.center.lat());\n\n    //   }\n    _mapLoaded(mapProps, map) {\n        map.setOptions({\n            styles: mapStyle\n        })\n    }\n\n    render() {\n        const { jams, loggedInUser } = this.props\n        const { userPos, selectedPlace, mapZoom, markers, isPopupShow } = this.state\n        const jam = this.state.selectedJam\n        if (!selectedPlace || jams.length === 0) {\n            return <div className=\"loader main-content pos-relative\">\n                <Loader type=\"Bars\" color=\"#00475F\" height={200} width={200} timeout={5000} />\n            </div>\n        }\n        return (\n            <>\n                <section className=\"flex explore-container pos-relative\">\n                    <button className=\"center-map-btn\" onClick={() => {\n                        const selectedPlaceCopy = { ...selectedPlace }\n                        selectedPlaceCopy.position.lat = userPos.position.lat\n                        selectedPlaceCopy.position.lng = userPos.position.lng\n                        this.setState({ selectedPlace: selectedPlaceCopy, mapZoom: 15 })\n                    }}><GpsFixedIcon style={{ fontSize: 40 }} /></button>\n                    <Map\n                        ref={this.mapRef}\n                        // containerStyle={containerStyle}\n                        google={this.props.google}\n                        zoom={mapZoom}\n                        style={mapStyles}\n                        // centerAroundCurrentLocation={true}\n                        initialCenter={{ lat: selectedPlace.position.lat, lng: selectedPlace.position.lng }}\n                        center={{ lat: selectedPlace.position.lat, lng: selectedPlace.position.lng }}\n                        onReady={(mapProps, map) => this._mapLoaded(mapProps, map)}\n                        disableDefaultUI={true}\n                    // onBoundsChanged={this.centerMoved}\n                    >\n                        {markers}\n                        {loggedInUser && <Marker\n                            name={'Your position'}\n                            position={userPos.position}\n                            icon={{\n                                url: loggedInUser.imgUrl,\n                                // anchor: new this.props.google.maps.Point(32, 32),\n                                scaledSize: new this.props.google.maps.Size(50, 50),\n                                origin: new this.props.google.maps.Point(0, 0),\n                                anchor: new this.props.google.maps.Point(17, 34),\n                            }}\n                        />}\n                        <InfoWindow\n                            marker={this.state.activeMarker}\n                            visible={this.state.showingInfoWindow}\n                            onClose={this.onClose}\n                        >\n                            <div>\n                                <h2>{this.state.selectedPlace.title}</h2>\n                            </div>\n                        </InfoWindow>\n                    </Map>\n                    {isPopupShow &&\n                        <div className=\"jam-popup\">\n                            <div className=\"details-con\">\n                                <div className=\"close-details\">\n                                    <h3 >{jam.title} </h3>\n                                    <span onClick={()=>this.setState({isPopupShow: false})}>&times;</span> \n                                </div>\n                                <div className=\"map-thumb-wrapper\" onClick={() => this.props.history.push(`jam/${jam._id}`)}>\n                                    <img src={jam.imgUrl} alt=\"jam-thumbnail\" />\n                                </div>\n                                <JamNavbar\n                                history={this.props.history}\n                                user={this.props.loggedInUser}\n                                jam={jam}\n                                updateJamGoing={this.props.updateJamGoing}\n                                isUserAdmin={false}\n                                showBasicActionsOnly={true}\n                                />\n                                <h3 className=\"title-style\">Details</h3>\n                                <p><span className=\"icon-style\"><HourglassEmptyRoundedIcon /></span><span className=\"details-style\">{jam.capacity - jam.usersGoing.length} Slots Available</span></p>\n                                <p><span className=\"icon-style\"><PeopleAltRoundedIcon /></span> <span className=\"details-style\">{jam.usersGoing.length} People going</span></p>\n                                <p><span className=\"icon-style\"><EmojiPeopleRoundedIcon /></span> <span className=\"details-style\">Created by <Link to={\"/user/\" + jam.createdBy._id} > {jam.createdBy.fullname}</Link></span></p>\n                                <p><span className=\"icon-style\"><RoomRoundedIcon /></span> <span className=\"details-style\">{jam.location.address}, {jam.location.city}</span></p>\n                                <p><span className=\"icon-style\"><AccessTimeRoundedIcon /></span> <span className=\"details-style\">{this.timeFormatter()}</span></p>\n                                <div className=\"description-con\">\n                                    <h3 className=\"title-style\">Description</h3>\n                                    <p>{jam.description}</p>\n                                </div>\n                                <ul className=\"jam-card-tags big-tags flex\">{jam.tags.map((tag, idx) => {\n                                    return <li key={idx}>{tag}</li>\n                                })}\n                                </ul>\n                            </div>\n                        </div>\n                    }\n                </section>\n            </>\n        );\n    }\n}\n\nconst mapStateToProps = (state) => {\n    return {\n        jams: state.jamModule.jams,\n        users: state.userModule.users,\n        loggedInUser: state.userModule.loggedInUser\n    };\n};\nconst mapDispatchToProps = {\n    loadJams,\n    loadUsers,\n    updateJamGoing\n};\n\nexport const JamExplore = GoogleApiWrapper({\n    apiKey: \"AIzaSyBTd-r9ES9me88-mTQasKgom191cNMihjY\",\n})(connect(mapStateToProps, mapDispatchToProps)(_JamExplore));\n\n{/* <div className=\"jams-explore-container\">\n                <div className=\"jams-explore-filter flex column\">\n                    <h1>Filter Jams</h1>\n                    <div className=\"filter-inputs\">\n                        <input type=\"text\" name=\"name\" id=\"\"/>\n                        <select name=\"filterByInst\">\n                            <option value=\"\">By Instrument Missing</option>\n                            <option value=\"\">Singer</option>\n                            <option value=\"\">Guitar</option>\n                            <option value=\"\">Drums</option>\n                            <option value=\"\">Bass</option>\n                            <option value=\"\">Keyboard</option>\n                        </select>\n                        <select name=\"filterByRegion\">\n                            <option value=\"\">By Region</option>\n                            <option value=\"\">North</option>\n                            <option value=\"\">Center</option>\n                            <option value=\"\">South</option>\n                        </select>\n                    </div>\n                </div>\n                <ul className=\"jams-explore-list\">\n                    {jams.map((jam) => (\n                        <JamPreview key={jam._id} jam={jam}/>\n                    ))}\n                </ul>\n            </div> */}","/Users/evyatarmintz/Desktop/jammit/frontend/src/pages/MembersList.jsx",["211"],"/Users/evyatarmintz/Desktop/jammit/frontend/src/cmps/MainNav.jsx",["212"],"/Users/evyatarmintz/Desktop/jammit/frontend/src/pages/JamCreate.jsx",[],"/Users/evyatarmintz/Desktop/jammit/frontend/src/pages/UserSection.jsx",["213","214"],"/Users/evyatarmintz/Desktop/jammit/frontend/src/store/reducers/index.js",[],"/Users/evyatarmintz/Desktop/jammit/frontend/src/cmps/UserList.jsx",[],"/Users/evyatarmintz/Desktop/jammit/frontend/src/cmps/JamScroll.jsx",[],"/Users/evyatarmintz/Desktop/jammit/frontend/src/cmps/HeroSection.jsx",["215"],"/Users/evyatarmintz/Desktop/jammit/frontend/src/cmps/JamPreview.jsx",["216","217"],"/Users/evyatarmintz/Desktop/jammit/frontend/src/cmps/LoaderSpinner.jsx",[],["218","219"],"/Users/evyatarmintz/Desktop/jammit/frontend/src/cmps/JamList.jsx",[],"/Users/evyatarmintz/Desktop/jammit/frontend/src/store/actions/jamActions.js",["220"],"import { jamService } from '../../services/jamService'\n\nexport function loadJams(filterBy) {\n  return async dispatch => {\n    try {\n      const jams = await jamService.query(filterBy)\n      dispatch({ type: 'SET_JAMS', jams })\n\n    } catch (err) {\n      console.log('JamActions: err in loadJams', err)\n    }\n  }\n}\n\nexport function saveJam(jam, creatingUser) {\n  return async dispatch => {\n    try {\n      jam.createdAt = Date.now()\n      jam.createdBy = creatingUser\n      jam.usersGoing.push(creatingUser)\n      console.log(creatingUser);\n      \n      jam = await jamService.save(jam)\n      dispatch({ type: 'ADD_JAM', jam })\n    } catch (err) {\n      console.log('JamActions: err in saveJam', err)\n    }\n  }\n}\n\n\n\nexport function updateJamGoing(jam, user, isGoing) {\n  return async dispatch => {\n    try {\n     jamService.updateJamGoing(jam._id, user, isGoing);\n      if (isGoing) {\n        dispatch({ type: 'UPDATE_JAM_IS_GOING', data:  {jam: jam, user: user} });\n      } else {\n        dispatch({ type: 'UPDATE_JAM_IS_NOT_GOING', data:  {jam: jam, user: user} });\n      }\n     \n\n    } catch (err) {\n      console.log('JamActions: err in loadJams', err)\n    }\n  }\n}\n\n\nfunction makeId(length = 6) {\n  var txt = '';\n  var possible = 'ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789';\n\n  for (var i = 0; i < length; i++) {\n      txt += possible.charAt(Math.floor(Math.random() * possible.length));\n  }\n\n  return txt;\n}","/Users/evyatarmintz/Desktop/jammit/frontend/src/store/actions/userActions.js",[],"/Users/evyatarmintz/Desktop/jammit/frontend/src/services/authService.js",[],"/Users/evyatarmintz/Desktop/jammit/frontend/src/services/mainNavService.js",[],"/Users/evyatarmintz/Desktop/jammit/frontend/src/services/userService.js",[],"/Users/evyatarmintz/Desktop/jammit/frontend/src/services/jamService.js",["221"],"/Users/evyatarmintz/Desktop/jammit/frontend/src/services/utilService.js",[],"/Users/evyatarmintz/Desktop/jammit/frontend/src/cmps/UserPreview.jsx",["222","223","224"],"import { useHistory } from \"react-router-dom\";\nimport LocationOnIcon from '@material-ui/icons/LocationOn';\nimport {instIcons} from '../assets/img/inst-icons/icons.js'\n\nexport function UserPreview({ user }) {\n\n    function showIcons() {\n        return instIcons.map((icon, idx)=>{\n            const talent = user.talents.find(talent=>{\n                return (talent === Object.keys(icon)[0])\n            })\n            if (talent) return <img key={idx} className=\"user-inst-icon\" src={Object.values(icon)[0]} alt=\"instrument\"/>\n        })\n    }\n\n    const history = useHistory()\n    return (\n        <li className=\"user-card flex column\" onClick={()=>history.push(`/user/${user._id}`)}>\n            <div className=\"thumb flex column pos-relative\">\n                <div className=\"img-wrapper flex justify-center\">\n                    <img className=\"user-card thumb\" src={user.imgUrl} className=\"userThumb\" alt=\"user-thumbnail\"/>\n                    <div className=\"user-inst-icons-wrapper\">\n                        {showIcons()}\n                    </div>\n                </div>\n            </div>\n            <div className=\"user-card-content flex column\">\n                <h2>{user.username}</h2>\n                <ul className=\"user-card-tags flex\">{user.tags.map((tag, idx) => {\n                    if (idx < 3) return <li key={idx}>{tag}</li> })}\n                </ul>\n                <p><LocationOnIcon/>{user.location.city}</p>\n            </div>\n        </li>\n    );\n}","/Users/evyatarmintz/Desktop/jammit/frontend/src/cmps/MapContainer.jsx",[],"/Users/evyatarmintz/Desktop/jammit/frontend/src/cmps/JamDetailsNavbar.jsx",[],"/Users/evyatarmintz/Desktop/jammit/frontend/src/cmps/JamUserPreview.jsx",[],"/Users/evyatarmintz/Desktop/jammit/frontend/src/cmps/JamGoingModal.jsx",[],"/Users/evyatarmintz/Desktop/jammit/frontend/src/assets/img/inst-icons/icons.js",[],"/Users/evyatarmintz/Desktop/jammit/frontend/src/cmps/JamCreateForm.jsx",[],"/Users/evyatarmintz/Desktop/jammit/frontend/src/store/reducers/userReducer.js",[],"/Users/evyatarmintz/Desktop/jammit/frontend/src/store/reducers/reviewReducer.js",[],"/Users/evyatarmintz/Desktop/jammit/frontend/src/store/reducers/systemReducer.js",[],"/Users/evyatarmintz/Desktop/jammit/frontend/src/store/reducers/jamReducer.js",[],"/Users/evyatarmintz/Desktop/jammit/frontend/src/cmps/UserProfile/UserInfo.jsx",["225","226","227"],"/Users/evyatarmintz/Desktop/jammit/frontend/src/cmps/UserProfile/UserTalents.jsx",["228","229"],"/Users/evyatarmintz/Desktop/jammit/frontend/src/services/httpService.js",[],"/Users/evyatarmintz/Desktop/jammit/frontend/src/cmps/InviteModal.jsx",["230"],"/Users/evyatarmintz/Desktop/jammit/frontend/src/cmps/LoginModal.jsx",[],"/Users/evyatarmintz/Desktop/jammit/frontend/src/cmps/InviteFriends.jsx",[],"/Users/evyatarmintz/Desktop/jammit/frontend/src/cmps/StaticMap.jsx",["231"],"import React from 'react';\n\nexport class StaticMap extends React.Component {\n \n    render() {\n        const API_KEY = 'AIzaSyBTd-r9ES9me88-mTQasKgom191cNMihjY';\n        return (\n            <div>\n                <img src={`https://maps.googleapis.com/maps/api/staticmap?center=${this.props.lat},${this.props.lng}&zoom=15&size=500x300&key=${API_KEY}&markers=label:J|scale:2|${this.props.lat},${this.props.lng}` } />\n            </div>\n        )\n    }\n}\n\n","/Users/evyatarmintz/Desktop/jammit/frontend/src/pages/JamsList.jsx",[],"/Users/evyatarmintz/Desktop/jammit/frontend/src/services/socketService.js",[],"/Users/evyatarmintz/Desktop/jammit/frontend/src/cmps/JamChat.jsx",[],{"ruleId":"232","replacedBy":"233"},{"ruleId":"234","replacedBy":"235"},{"ruleId":"236","severity":1,"message":"237","line":10,"column":10,"nodeType":"238","messageId":"239","endLine":10,"endColumn":17},{"ruleId":"240","severity":1,"message":"241","line":83,"column":11,"nodeType":"242","endLine":83,"endColumn":58},{"ruleId":"236","severity":1,"message":"243","line":11,"column":10,"nodeType":"238","messageId":"239","endLine":11,"endColumn":18},{"ruleId":"236","severity":1,"message":"244","line":92,"column":34,"nodeType":"238","messageId":"239","endLine":92,"endColumn":45},{"ruleId":"245","severity":1,"message":"246","line":292,"column":1,"nodeType":"247","messageId":"248","endLine":318,"endColumn":23},{"ruleId":"236","severity":1,"message":"249","line":56,"column":27,"nodeType":"238","messageId":"239","endLine":56,"endColumn":35},{"ruleId":"240","severity":1,"message":"241","line":72,"column":29,"nodeType":"242","endLine":72,"endColumn":62},{"ruleId":"236","severity":1,"message":"250","line":10,"column":10,"nodeType":"238","messageId":"239","endLine":10,"endColumn":19},{"ruleId":"251","severity":1,"message":"252","line":29,"column":45,"nodeType":"253","messageId":"254","endLine":29,"endColumn":47},{"ruleId":"236","severity":1,"message":"255","line":3,"column":10,"nodeType":"238","messageId":"239","endLine":3,"endColumn":14},{"ruleId":"236","severity":1,"message":"256","line":1,"column":8,"nodeType":"238","messageId":"239","endLine":1,"endColumn":22},{"ruleId":"251","severity":1,"message":"257","line":9,"column":41,"nodeType":"253","messageId":"254","endLine":9,"endColumn":43},{"ruleId":"232","replacedBy":"258"},{"ruleId":"234","replacedBy":"259"},{"ruleId":"236","severity":1,"message":"260","line":51,"column":10,"nodeType":"238","messageId":"239","endLine":51,"endColumn":16},{"ruleId":"236","severity":1,"message":"261","line":3,"column":8,"nodeType":"238","messageId":"239","endLine":3,"endColumn":19},{"ruleId":"251","severity":1,"message":"257","line":8,"column":41,"nodeType":"253","messageId":"254","endLine":8,"endColumn":43},{"ruleId":"262","severity":1,"message":"263","line":21,"column":72,"nodeType":"264","endLine":21,"endColumn":93},{"ruleId":"251","severity":1,"message":"257","line":29,"column":79,"nodeType":"253","messageId":"254","endLine":29,"endColumn":81},{"ruleId":"236","severity":1,"message":"265","line":5,"column":8,"nodeType":"238","messageId":"239","endLine":5,"endColumn":22},{"ruleId":"236","severity":1,"message":"266","line":10,"column":11,"nodeType":"238","messageId":"239","endLine":10,"endColumn":18},{"ruleId":"240","severity":1,"message":"241","line":15,"column":21,"nodeType":"242","endLine":15,"endColumn":46},{"ruleId":"240","severity":1,"message":"241","line":10,"column":31,"nodeType":"242","endLine":10,"endColumn":62},{"ruleId":"240","severity":1,"message":"241","line":21,"column":31,"nodeType":"242","endLine":21,"endColumn":63},{"ruleId":"236","severity":1,"message":"267","line":43,"column":16,"nodeType":"238","messageId":"239","endLine":43,"endColumn":23},{"ruleId":"240","severity":1,"message":"241","line":9,"column":17,"nodeType":"242","endLine":9,"endColumn":143},"no-native-reassign",["268"],"no-negated-in-lhs",["269"],"no-unused-vars","'JamList' is defined but never used.","Identifier","unusedVar","jsx-a11y/alt-text","img elements must have an alt prop, either with meaningful text, or an empty string for decorative images.","JSXOpeningElement","'UserList' is defined but never used.","'isUserAdmin' is assigned a value but never used.","no-lone-blocks","Block is redundant.","BlockStatement","redundantBlock","'fullname' is assigned a value but never used.","'JamScroll' is defined but never used.","array-callback-return","Array.prototype.filter() expects a value to be returned at the end of arrow function.","ArrowFunctionExpression","expectedAtEnd","'Link' is defined but never used.","'LocationOnIcon' is defined but never used.","Array.prototype.map() expects a value to be returned at the end of arrow function.",["268"],["269"],"'makeId' is defined but never used.","'userService' is defined but never used.","react/jsx-no-duplicate-props","No duplicate props allowed","JSXAttribute","'AddRoundedIcon' is defined but never used.","'history' is assigned a value but never used.","'invited' is assigned a value but never used.","no-global-assign","no-unsafe-negation"]