[{"C:\\Users\\danie\\OneDrive\\שולחן העבודה\\dev\\jameet\\jammit\\frontend\\src\\index.js":"1","C:\\Users\\danie\\OneDrive\\שולחן העבודה\\dev\\jameet\\jammit\\frontend\\src\\reportWebVitals.js":"2","C:\\Users\\danie\\OneDrive\\שולחן העבודה\\dev\\jameet\\jammit\\frontend\\src\\serviceWorkerRegistration.js":"3","C:\\Users\\danie\\OneDrive\\שולחן העבודה\\dev\\jameet\\jammit\\frontend\\src\\store\\store.js":"4","C:\\Users\\danie\\OneDrive\\שולחן העבודה\\dev\\jameet\\jammit\\frontend\\src\\App.jsx":"5","C:\\Users\\danie\\OneDrive\\שולחן העבודה\\dev\\jameet\\jammit\\frontend\\src\\pages\\LoginSignup.jsx":"6","C:\\Users\\danie\\OneDrive\\שולחן העבודה\\dev\\jameet\\jammit\\frontend\\src\\pages\\Home.jsx":"7","C:\\Users\\danie\\OneDrive\\שולחן העבודה\\dev\\jameet\\jammit\\frontend\\src\\pages\\MembersList.jsx":"8","C:\\Users\\danie\\OneDrive\\שולחן העבודה\\dev\\jameet\\jammit\\frontend\\src\\pages\\UserProfile.jsx":"9","C:\\Users\\danie\\OneDrive\\שולחן העבודה\\dev\\jameet\\jammit\\frontend\\src\\pages\\JamDetails.jsx":"10","C:\\Users\\danie\\OneDrive\\שולחן העבודה\\dev\\jameet\\jammit\\frontend\\src\\pages\\JamExplore.jsx":"11","C:\\Users\\danie\\OneDrive\\שולחן העבודה\\dev\\jameet\\jammit\\frontend\\src\\pages\\JamCreate.jsx":"12","C:\\Users\\danie\\OneDrive\\שולחן העבודה\\dev\\jameet\\jammit\\frontend\\src\\cmps\\Header.jsx":"13","C:\\Users\\danie\\OneDrive\\שולחן העבודה\\dev\\jameet\\jammit\\frontend\\src\\cmps\\MainNav.jsx":"14","C:\\Users\\danie\\OneDrive\\שולחן העבודה\\dev\\jameet\\jammit\\frontend\\src\\store\\reducers\\index.js":"15","C:\\Users\\danie\\OneDrive\\שולחן העבודה\\dev\\jameet\\jammit\\frontend\\src\\cmps\\UserList.jsx":"16","C:\\Users\\danie\\OneDrive\\שולחן העבודה\\dev\\jameet\\jammit\\frontend\\src\\cmps\\HeroSection.jsx":"17","C:\\Users\\danie\\OneDrive\\שולחן העבודה\\dev\\jameet\\jammit\\frontend\\src\\cmps\\JamScroll.jsx":"18","C:\\Users\\danie\\OneDrive\\שולחן העבודה\\dev\\jameet\\jammit\\frontend\\src\\cmps\\JamPreview.jsx":"19","C:\\Users\\danie\\OneDrive\\שולחן העבודה\\dev\\jameet\\jammit\\frontend\\src\\cmps\\JamList.jsx":"20","C:\\Users\\danie\\OneDrive\\שולחן העבודה\\dev\\jameet\\jammit\\frontend\\src\\services\\authService.js":"21","C:\\Users\\danie\\OneDrive\\שולחן העבודה\\dev\\jameet\\jammit\\frontend\\src\\store\\actions\\jamActions.js":"22","C:\\Users\\danie\\OneDrive\\שולחן העבודה\\dev\\jameet\\jammit\\frontend\\src\\store\\actions\\userActions.js":"23","C:\\Users\\danie\\OneDrive\\שולחן העבודה\\dev\\jameet\\jammit\\frontend\\src\\services\\utilService.js":"24","C:\\Users\\danie\\OneDrive\\שולחן העבודה\\dev\\jameet\\jammit\\frontend\\src\\services\\userService.js":"25","C:\\Users\\danie\\OneDrive\\שולחן העבודה\\dev\\jameet\\jammit\\frontend\\src\\services\\jamService.js":"26","C:\\Users\\danie\\OneDrive\\שולחן העבודה\\dev\\jameet\\jammit\\frontend\\src\\cmps\\UserPreview.jsx":"27","C:\\Users\\danie\\OneDrive\\שולחן העבודה\\dev\\jameet\\jammit\\frontend\\src\\assets\\img\\inst-icons\\icons.js":"28","C:\\Users\\danie\\OneDrive\\שולחן העבודה\\dev\\jameet\\jammit\\frontend\\src\\cmps\\MapContainer.jsx":"29","C:\\Users\\danie\\OneDrive\\שולחן העבודה\\dev\\jameet\\jammit\\frontend\\src\\cmps\\JamGoingModal.jsx":"30","C:\\Users\\danie\\OneDrive\\שולחן העבודה\\dev\\jameet\\jammit\\frontend\\src\\cmps\\JamUserPreview.jsx":"31","C:\\Users\\danie\\OneDrive\\שולחן העבודה\\dev\\jameet\\jammit\\frontend\\src\\cmps\\JamDetailsNavbar.jsx":"32","C:\\Users\\danie\\OneDrive\\שולחן העבודה\\dev\\jameet\\jammit\\frontend\\src\\cmps\\JamCreateForm.jsx":"33","C:\\Users\\danie\\OneDrive\\שולחן העבודה\\dev\\jameet\\jammit\\frontend\\src\\store\\reducers\\reviewReducer.js":"34","C:\\Users\\danie\\OneDrive\\שולחן העבודה\\dev\\jameet\\jammit\\frontend\\src\\store\\reducers\\jamReducer.js":"35","C:\\Users\\danie\\OneDrive\\שולחן העבודה\\dev\\jameet\\jammit\\frontend\\src\\store\\reducers\\userReducer.js":"36","C:\\Users\\danie\\OneDrive\\שולחן העבודה\\dev\\jameet\\jammit\\frontend\\src\\store\\reducers\\systemReducer.js":"37","C:\\Users\\danie\\OneDrive\\שולחן העבודה\\dev\\jameet\\jammit\\frontend\\src\\services\\httpService.js":"38","C:\\Users\\danie\\OneDrive\\שולחן העבודה\\dev\\jameet\\jammit\\frontend\\src\\services\\mainNavService.js":"39","C:\\Users\\danie\\OneDrive\\שולחן העבודה\\dev\\jameet\\jammit\\frontend\\src\\cmps\\LoginModal.jsx":"40","C:\\Users\\danie\\OneDrive\\שולחן העבודה\\dev\\jameet\\jammit\\frontend\\src\\pages\\ForYou.jsx":"41","C:\\Users\\danie\\OneDrive\\שולחן העבודה\\dev\\jameet\\jammit\\frontend\\src\\cmps\\UserProfile\\UserTalents.jsx":"42","C:\\Users\\danie\\OneDrive\\שולחן העבודה\\dev\\jameet\\jammit\\frontend\\src\\cmps\\UserProfile\\UserInfo.jsx":"43"},{"size":935,"mtime":1610550173931,"results":"44","hashOfConfig":"45"},{"size":377,"mtime":1610550173933,"results":"46","hashOfConfig":"45"},{"size":5201,"mtime":1610550173933,"results":"47","hashOfConfig":"45"},{"size":323,"mtime":1610550173941,"results":"48","hashOfConfig":"45"},{"size":1375,"mtime":1610982346062,"results":"49","hashOfConfig":"45"},{"size":4878,"mtime":1610981948005,"results":"50","hashOfConfig":"45"},{"size":1850,"mtime":1610992636047,"results":"51","hashOfConfig":"45"},{"size":1326,"mtime":1610723850431,"results":"52","hashOfConfig":"45"},{"size":2453,"mtime":1611012964759,"results":"53","hashOfConfig":"45"},{"size":8234,"mtime":1611048504145,"results":"54","hashOfConfig":"45"},{"size":8902,"mtime":1610972923323,"results":"55","hashOfConfig":"45"},{"size":1790,"mtime":1610881707933,"results":"56","hashOfConfig":"45"},{"size":2326,"mtime":1610917599452,"results":"57","hashOfConfig":"45"},{"size":2095,"mtime":1610984938588,"results":"58","hashOfConfig":"45"},{"size":396,"mtime":1610550173940,"results":"59","hashOfConfig":"45"},{"size":278,"mtime":1610808786640,"results":"60","hashOfConfig":"45"},{"size":978,"mtime":1610982346074,"results":"61","hashOfConfig":"45"},{"size":1695,"mtime":1610992636043,"results":"62","hashOfConfig":"45"},{"size":2604,"mtime":1610982346075,"results":"63","hashOfConfig":"45"},{"size":303,"mtime":1610724675786,"results":"64","hashOfConfig":"45"},{"size":1596,"mtime":1610560975527,"results":"65","hashOfConfig":"45"},{"size":1499,"mtime":1610881707936,"results":"66","hashOfConfig":"45"},{"size":1574,"mtime":1610550173939,"results":"67","hashOfConfig":"45"},{"size":1052,"mtime":1610708401163,"results":"68","hashOfConfig":"45"},{"size":1900,"mtime":1611012964761,"results":"69","hashOfConfig":"45"},{"size":13259,"mtime":1611048188991,"results":"70","hashOfConfig":"45"},{"size":1489,"mtime":1610982346077,"results":"71","hashOfConfig":"45"},{"size":349,"mtime":1610754815343,"results":"72","hashOfConfig":"45"},{"size":1047,"mtime":1611048188990,"results":"73","hashOfConfig":"45"},{"size":2948,"mtime":1610997784288,"results":"74","hashOfConfig":"45"},{"size":654,"mtime":1610997784289,"results":"75","hashOfConfig":"45"},{"size":1938,"mtime":1610997784286,"results":"76","hashOfConfig":"45"},{"size":5355,"mtime":1610881707931,"results":"77","hashOfConfig":"45"},{"size":669,"mtime":1610550173940,"results":"78","hashOfConfig":"45"},{"size":1239,"mtime":1610881707937,"results":"79","hashOfConfig":"45"},{"size":737,"mtime":1610550173941,"results":"80","hashOfConfig":"45"},{"size":322,"mtime":1610550173940,"results":"81","hashOfConfig":"45"},{"size":1081,"mtime":1610550173935,"results":"82","hashOfConfig":"45"},{"size":1588,"mtime":1610975634491,"results":"83","hashOfConfig":"45"},{"size":1728,"mtime":1610997784290,"results":"84","hashOfConfig":"45"},{"size":2475,"mtime":1610992636046,"results":"85","hashOfConfig":"45"},{"size":722,"mtime":1610992636044,"results":"86","hashOfConfig":"45"},{"size":1931,"mtime":1610992636044,"results":"87","hashOfConfig":"45"},{"filePath":"88","messages":"89","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"90"},"15qkesh",{"filePath":"91","messages":"92","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"90"},{"filePath":"93","messages":"94","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"90"},{"filePath":"95","messages":"96","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"90"},{"filePath":"97","messages":"98","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"99","usedDeprecatedRules":"90"},{"filePath":"100","messages":"101","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"90"},{"filePath":"102","messages":"103","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"104","usedDeprecatedRules":"90"},{"filePath":"105","messages":"106","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"90"},{"filePath":"107","messages":"108","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"90"},{"filePath":"109","messages":"110","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"111"},{"filePath":"112","messages":"113","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"114","usedDeprecatedRules":"90"},{"filePath":"115","messages":"116","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"90"},{"filePath":"117","messages":"118","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"119","usedDeprecatedRules":"90"},{"filePath":"120","messages":"121","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"122","usedDeprecatedRules":"90"},{"filePath":"123","messages":"124","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"90"},{"filePath":"125","messages":"126","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"90"},{"filePath":"127","messages":"128","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"90"},{"filePath":"129","messages":"130","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"90"},{"filePath":"131","messages":"132","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"133","usedDeprecatedRules":"90"},{"filePath":"134","messages":"135","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"90"},{"filePath":"136","messages":"137","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"90"},{"filePath":"138","messages":"139","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"90"},{"filePath":"140","messages":"141","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"90"},{"filePath":"142","messages":"143","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"90"},{"filePath":"144","messages":"145","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"90"},{"filePath":"146","messages":"147","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"90"},{"filePath":"148","messages":"149","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"150","usedDeprecatedRules":"90"},{"filePath":"151","messages":"152","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"90"},{"filePath":"153","messages":"154","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"90"},{"filePath":"155","messages":"156","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"90"},{"filePath":"157","messages":"158","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"90"},{"filePath":"159","messages":"160","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"90"},{"filePath":"161","messages":"162","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"90"},{"filePath":"163","messages":"164","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"90"},{"filePath":"165","messages":"166","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"90"},{"filePath":"167","messages":"168","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"90"},{"filePath":"169","messages":"170","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"90"},{"filePath":"171","messages":"172","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"90"},{"filePath":"173","messages":"174","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"90"},{"filePath":"175","messages":"176","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"177","usedDeprecatedRules":"90"},{"filePath":"178","messages":"179","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"180","usedDeprecatedRules":"90"},{"filePath":"181","messages":"182","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"183","usedDeprecatedRules":"90"},{"filePath":"184","messages":"185","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"186","usedDeprecatedRules":"90"},"C:\\Users\\danie\\OneDrive\\שולחן העבודה\\dev\\jameet\\jammit\\frontend\\src\\index.js",[],["187","188"],"C:\\Users\\danie\\OneDrive\\שולחן העבודה\\dev\\jameet\\jammit\\frontend\\src\\reportWebVitals.js",[],"C:\\Users\\danie\\OneDrive\\שולחן העבודה\\dev\\jameet\\jammit\\frontend\\src\\serviceWorkerRegistration.js",[],"C:\\Users\\danie\\OneDrive\\שולחן העבודה\\dev\\jameet\\jammit\\frontend\\src\\store\\store.js",[],"C:\\Users\\danie\\OneDrive\\שולחן העבודה\\dev\\jameet\\jammit\\frontend\\src\\App.jsx",["189"],"import React from 'react'\r\nimport { HashRouter as Router, Switch, Route } from 'react-router-dom'\r\nimport { Home } from './pages/Home'\r\nimport { LoginSignup } from './pages/LoginSignup'\r\nimport { JamDetails } from './pages/JamDetails'\r\nimport { UserProfile } from './pages/UserProfile'\r\nimport { Header } from './cmps/Header'\r\nimport { JamExplore } from './pages/JamExplore'\r\nimport { MembersList } from './pages/MembersList'\r\nimport { JamCreate } from './pages/JamCreate'\r\nimport { MainNav } from './cmps/MainNav'\r\nimport { ForYou } from './pages/ForYou'\r\n\r\nexport function App() {\r\n  return (\r\n    <div className=\"app main-container\">\r\n      <Router>\r\n        <MainNav/>\r\n        <main className=\"main-content-container\">\r\n        {/* <Header></Header> */}\r\n          <Switch>\r\n            <Route path=\"/jam/create\" component={JamCreate} />\r\n            <Route path=\"/jam/:id\" component={JamDetails} />\r\n            <Route path=\"/user/:id\" component={UserProfile} />\r\n            <Route path=\"/members\" component={MembersList} />\r\n            <Route path=\"/foryou\" component={ForYou} />\r\n            <Route path=\"/login\" component={LoginSignup} />\r\n            <Route path=\"/search\" component={JamExplore} />\r\n            <Route path=\"/\" component={Home} />\r\n          </Switch>\r\n        </main>\r\n        <footer>\r\n        </footer>\r\n      </Router>\r\n    </div>\r\n  )\r\n}\r\n\r\n","C:\\Users\\danie\\OneDrive\\שולחן העבודה\\dev\\jameet\\jammit\\frontend\\src\\pages\\LoginSignup.jsx",[],"C:\\Users\\danie\\OneDrive\\שולחן העבודה\\dev\\jameet\\jammit\\frontend\\src\\pages\\Home.jsx",["190"],"import React, { Component } from 'react'\r\nimport { connect } from 'react-redux'\r\nimport { loadJams } from '../store/actions/jamActions.js'\r\nimport { loadUsers } from '../store/actions/userActions.js'\r\nimport { UserList } from '../cmps/UserList.jsx'\r\nimport { JamScroll } from '../cmps/JamScroll.jsx'\r\nimport { HeroSection } from '../cmps/HeroSection.jsx'\r\n\r\nclass _Home extends Component {\r\n  state = {\r\n    \r\n  }\r\n  componentDidMount() {\r\n    this.props.loadJams()\r\n    this.props.loadUsers()\r\n  }\r\n  onJamClick = (jamId)=> {\r\n    this.props.history.push(`jam/${jamId}`)\r\n  }\r\n\r\n  scrollDown = ()=> {\r\n    \r\n  }\r\n\r\n  filterMembersByFollow = () =>{\r\n    return this.props.users.filter(user=> {\r\n      return user.followers.find(user=> user._id === this.props.loggedInUser._id)\r\n    })\r\n  }\r\n\r\n  filterJamsByInst = ()=> {\r\n    return this.props.jams.filter(jam=>{\r\n      const user = jam.usersGoing.find(user=> {\r\n        return user.playing.some(inst=>{\r\n          return inst === this.props.loggedInUser.talents[0]\r\n        })\r\n      })\r\n      if (!user) return jam\r\n    })\r\n  }\r\n\r\n  filterJamsByRegion = ()=> {\r\n    return this.props.jams.filter(jam=>{\r\n      return jam.location.region === this.props.loggedInUser.location.region\r\n    })\r\n  }\r\n\r\n  render() {\r\n    const { jams, users, loggedInUser } = this.props\r\n    if (jams.length === 0 || users.length === 0) return <h2>Loading...</h2>\r\n    return ( \r\n      <div className=\"home\">\r\n        <HeroSection onDownScrollClick={this.scrollDown}/>\r\n        \r\n        <main className=\"main-content flex space-between\">\r\n        {loggedInUser ? \r\n        <div className=\"user-filtered-container\">\r\n           <div className=\"inst-filtered section\"><h1>Jams Without {loggedInUser.talents[0]}</h1>\r\n            <JamScroll jams={this.filterJamsByInst()} onJamClick={this.onJamClick}/>\r\n          </div>\r\n          <div className=\"region-filtered section\"><h1>Jams Around {loggedInUser.location.region} Region</h1>\r\n            <JamScroll jams={this.filterJamsByRegion()} onJamClick={this.onJamClick}/>\r\n          </div>\r\n        </div>\r\n          :\r\n        <div className=\"user-filtered-container\">\r\n          <div className=\"jams section\">\r\n            <h1>Most Popular Jams</h1>\r\n            <JamScroll jams={jams} onJamClick={this.onJamClick}/>\r\n          </div>\r\n          <div className=\"jams section\">\r\n            <h1>Recently Added Jams</h1>\r\n            <JamScroll jams={jams} onJamClick={this.onJamClick}/>\r\n          </div>\r\n        </div>\r\n        }\r\n      {loggedInUser && loggedInUser.following.length > 0 ?\r\n        <div className=\"members-container\">\r\n        <div className=\"members-list-preview\">\r\n        <h1>Members You Follow</h1>\r\n          <UserList users={this.filterMembersByFollow()}/>\r\n        </div>\r\n      </div>\r\n        :\r\n        <div className=\"members-container\">\r\n          <div className=\"members-list-preview\">\r\n          <h1>Featured Members</h1>\r\n            <UserList users={users}/>\r\n          </div>\r\n        </div>\r\n      }\r\n        </main>\r\n      </div>\r\n    )\r\n  }\r\n}\r\n\r\nconst mapStateToProps = state => {\r\n  return {\r\n    jams: state.jamModule.jams,\r\n    users: state.userModule.users,\r\n    loggedInUser: state.userModule.loggedInUser\r\n  }\r\n}\r\nconst mapDispatchToProps = {\r\n  loadJams,\r\n  loadUsers,\r\n}\r\n\r\nexport const Home = connect(mapStateToProps, mapDispatchToProps)(_Home)\r\n","C:\\Users\\danie\\OneDrive\\שולחן העבודה\\dev\\jameet\\jammit\\frontend\\src\\pages\\MembersList.jsx",[],"C:\\Users\\danie\\OneDrive\\שולחן העבודה\\dev\\jameet\\jammit\\frontend\\src\\pages\\UserProfile.jsx",[],"C:\\Users\\danie\\OneDrive\\שולחן העבודה\\dev\\jameet\\jammit\\frontend\\src\\pages\\JamDetails.jsx",["191"],"import React, { Component } from 'react'\r\nimport { jamService } from '../services/jamService'\r\nimport RoomRoundedIcon from '@material-ui/icons/RoomRounded';\r\nimport AccessTimeRoundedIcon from '@material-ui/icons/AccessTimeRounded';\r\nimport PeopleAltRoundedIcon from '@material-ui/icons/PeopleAltRounded';\r\nimport EmojiPeopleRoundedIcon from '@material-ui/icons/EmojiPeopleRounded';\r\nimport HomeIcon from '@material-ui/icons/Home';\r\nimport { MapContainer } from '../cmps/MapContainer';\r\nimport { JamUserPreview } from '../cmps/JamUserPreview';\r\nimport { utilService } from '../services/utilService';\r\nimport { Link } from 'react-router-dom';\r\nimport { JamNavbar } from '../cmps/JamDetailsNavbar';\r\nimport JamGoingListModal from '../cmps/JamGoingModal';\r\nimport { connect } from 'react-redux';\r\nimport { updateJamGoing, loadJams, saveJam } from '../store/actions/jamActions.js';\r\n// import { jamGoingListModal } from '../cmps/JamGoingModal'\r\n// import { loadJams } from '../store/actions/jamActions'\r\nimport HourglassEmptyRoundedIcon from '@material-ui/icons/HourglassEmptyRounded';\r\n\r\nconst emptyJam = {\r\n    title: \"\",\r\n    description: \"\",\r\n    imgUrl: \"http://some-img\",\r\n    capacity: null,\r\n    location: {\r\n        region: \"\",\r\n        city: \"\",\r\n        address: \"\",\r\n        lat: null,\r\n        lng: null\r\n    },\r\n    createdBy: {},\r\n    startsAt: null,\r\n    tags: [],\r\n    createdAt: null,\r\n    usersGoing: []\r\n}\r\n\r\nclass _JamDetails extends Component {\r\n    state = {\r\n        jam: null,\r\n        isUserAdmin: false,\r\n        isEditMode: false\r\n    }\r\n\r\n\r\n    async componentDidMount() {\r\n        this.props.loadJams()\r\n        if (this.props.isEditMode) {\r\n            this.setState({ jam: emptyJam, isEditMode: true, isUserAdmin: true })\r\n        }\r\n        else {\r\n            const jam = await jamService.getById(this.props.match.params.id);\r\n            console.log(jam);\r\n            this.setState({ jam }, () => {\r\n                this.checkIfUserHost()\r\n            })\r\n        }\r\n    }\r\n\r\n    componentWillReceiveProps(props){\r\n        if (props.isSubmit) {\r\n            const miniUser = {}\r\n            miniUser._id = this.props.loggedInUser._id\r\n            miniUser.fullname = this.props.loggedInUser.fullname\r\n            miniUser.imgUrl = this.props.loggedInUser.imgUrl\r\n            miniUser.playing = this.props.loggedInUser.talents\r\n            this.props.saveJam(this.state.jam, miniUser)\r\n            this.props.jamSaved()\r\n        }\r\n        this.setState({jam: props.jam})\r\n    }\r\n\r\n    componentDidUpdate(prevProps) {\r\n        if (this.state.isEditMode) return\r\n        if (this.props.jams !== prevProps.jams) {\r\n            this.setState({ jam: this.props.jams.find(jam => jam._id === this.props.match.params.id) });\r\n        }\r\n    }\r\n\r\n    checkIfUserHost = () => {\r\n        if (!this.props.loggedInUser) return\r\n        if (this.props.loggedInUser._id === this.state.jam.createdBy._id) {\r\n            this.setState({ isUserAdmin: true })\r\n        }\r\n    }\r\n\r\n    render() {\r\n        const { jam, isEditMode, isUserAdmin } = this.state\r\n        return (\r\n            <section className=\"jam-details\">\r\n                {!this.state.jam && <div> Loading... </div>}\r\n                {this.state.jam &&\r\n                    <div className=\"page-con\">\r\n                        <div className=\"jam-title-img-con\">\r\n                            {isUserAdmin && <button className=\"jam-save-btn\"\r\n                                onClick={() => {\r\n                                    if (this.state.isEditMode) this.onSaveChanges()\r\n                                    this.setState({ isEditMode: !isEditMode })\r\n                                }}\r\n                            >\r\n                                {isEditMode ? \"Save Changes\" : \"Edit Details\"}\r\n                            </button>}\r\n                            <h1 className=\"jam-title\">{this.state.jam.title}</h1>\r\n                        </div>\r\n                        {!this.state.isEditMode &&  <div>\r\n                            <JamNavbar\r\n                                history={this.props.history}\r\n                                user={this.props.loggedInUser}\r\n                                jam={this.state.jam}\r\n                                updateJamGoing={this.props.updateJamGoing}\r\n                                isUserAdmin={this.state.isUserAdmin}\r\n                            />\r\n                        </div>}\r\n                        <div className=\"page-content\">\r\n                            <div className=\"left-page-details\">\r\n                                <div className=\"details-con\">\r\n                                    <h3 className=\"title-style\">Details</h3>\r\n                                    <p><span className=\"icon-style\"><HourglassEmptyRoundedIcon/></span><span className=\"details-style\">{this.state.jam.capacity - this.state.jam.usersGoing.length} Slots Available</span></p>\r\n                                    <p><span className=\"icon-style\"><PeopleAltRoundedIcon /></span> <span className=\"details-style\">{this.state.jam.usersGoing.length} People going</span></p>\r\n                                    {!isEditMode && <p><span className=\"icon-style\"><EmojiPeopleRoundedIcon /></span> <span className=\"details-style\">Created by <Link to={\"/user/\" + this.state.jam.createdBy._id} > {this.state.jam.createdBy.fullname}</Link></span></p>}\r\n                                    <p><span className=\"icon-style\"><RoomRoundedIcon /></span> <span className=\"details-style\">{this.state.jam.location.address}, {this.state.jam.location.city}</span></p>\r\n                                    <p><span className=\"icon-style\"><AccessTimeRoundedIcon /></span> <span className=\"details-style\">{utilService.getFormattedDate(this.state.jam.startsAt)}</span></p>\r\n                                    <div className=\"description-con\">\r\n                                        <h3 className=\"title-style\">Description</h3>\r\n                                        <p>{this.state.jam.description}</p>\r\n                                    </div>\r\n                                   \r\n                                    </div>\r\n                                    <div className=\"tags-jam-list\">\r\n                                    <div className=\"jam-tags\">\r\n                                        <ul className=\"jam-card-tags flex\">{jam.tags.map((tag, idx) => {\r\n                                            return <li key={idx}>{tag}</li>\r\n                                        })}\r\n                                        </ul>\r\n                                    </div>\r\n                                    </div>\r\n                                  \r\n                              \r\n                            \r\n\r\n                            </div>\r\n                            <div className=\"left-page-con\">\r\n                            <div className=\"location-con\">\r\n                                <h3 className=\"title-style\">Location</h3>\r\n                                <div><MapContainer lat={this.state.jam.location.lat} lng={this.state.jam.location.lng}/></div>\r\n                            </div>\r\n                            {!isEditMode && <div className=\"users-going-con-section\">\r\n                                    <ul className=\"users-going-con\">\r\n                                        {this.state.jam.usersGoing.slice(0, 3).map(function (user, index) {\r\n                                            return <JamUserPreview key={index} user={user} />\r\n                                        })}\r\n\r\n                                    </ul>\r\n                                    <div className=\"users-going-actions\"> <JamGoingListModal usersGoing={this.state.jam.usersGoing} /> </div>\r\n                                </div>}\r\n                                </div>\r\n                        </div>\r\n                    </div>}\r\n            </section>\r\n        )\r\n    }\r\n}\r\n\r\n\r\nconst mapStateToProps = state => {\r\n    return {\r\n        loggedInUser: state.userModule.loggedInUser,\r\n        jams: state.jamModule.jams\r\n    }\r\n}\r\nconst mapDispatchToProps = {\r\n    loadJams,\r\n    saveJam,\r\n    updateJamGoing\r\n}\r\n\r\nexport const JamDetails = connect(mapStateToProps, mapDispatchToProps)(_JamDetails)","C:\\Users\\danie\\OneDrive\\שולחן העבודה\\dev\\jameet\\jammit\\frontend\\src\\pages\\JamExplore.jsx",["192","193","194"],"import React, { Component } from \"react\";\r\nimport { Map, GoogleApiWrapper, Marker, InfoWindow } from \"google-maps-react\";\r\nimport { connect } from \"react-redux\";\r\nimport { loadJams } from \"../store/actions/jamActions.js\";\r\nimport { loadUsers } from \"../store/actions/userActions.js\";\r\nimport jamThumb from \"../assets/img/jam-thumb.jpg\"\r\nimport { JamScroll } from \"../cmps/JamScroll.jsx\";\r\nimport { JamList } from \"../cmps/JamList.jsx\";\r\nimport { JamPreview } from \"../cmps/JamPreview.jsx\";\r\nimport jamMarker from \"../assets/img/green-marker.png\"\r\nimport GpsFixedIcon from '@material-ui/icons/GpsFixed';\r\n\r\n\r\n\r\nconst mapStyles = {\r\n    width: \"50%\",\r\n    height: \"100%\",\r\n};\r\n\r\n// const containerStyle = {\r\n//     position: 'static',  \r\n//     width: '100%',\r\n//     height: '100%'\r\n// }\r\n\r\nconst mapStyle = [\r\n    {\r\n      featureType: 'landscape.man_made',\r\n      elementType: 'geometry.fill',\r\n      stylers: [\r\n        {\r\n          color: '#dceafa'\r\n        }\r\n      ]\r\n    },\r\n    {\r\n        elementType: \"labels.text\",\r\n        stylers: [\r\n            {\r\n                visibility: \"off\"\r\n            }\r\n        ]\r\n    },\r\n    {\r\n        featureType: \"road.highway\",\r\n        elementType: \"labels\",\r\n        stylers: [\r\n            {\r\n                visibility: \"on\"\r\n            }\r\n        ]\r\n    },\r\n    {\r\n        featureType: \"road.arterial\",\r\n        elementType: \"labels.text\",\r\n        stylers: [\r\n            {\r\n                visibility: \"on\"\r\n            }\r\n        ]\r\n    },\r\n    {\r\n        featureType: \"road.local\",\r\n        elementType: \"labels.text\",\r\n        stylers: [\r\n            {\r\n                visibility: \"on\"\r\n            }\r\n        ]\r\n    },\r\n    ]\r\nclass _JamExplore extends Component {\r\n    state = {\r\n        markers: null,\r\n        userPos: null,\r\n        mapZoom: 14,\r\n        showingInfoWindow: false, // Hides or shows the InfoWindow\r\n        activeMarker: {}, // Shows the active marker upon click\r\n        selectedPlace: null, // Shows the InfoWindow to the selected place upon a marker\r\n    };\r\n    mapRef = React.createRef();\r\n    componentDidMount() {     \r\n        this.props.loadJams()\r\n        navigator.geolocation.getCurrentPosition(pos =>{\r\n            const userPos = {position: {lat: null, lng: null}}\r\n            userPos.position.lat = pos.coords.latitude\r\n            userPos.position.lng = pos.coords.longitude\r\n            this.setState({selectedPlace: userPos, userPos: userPos})\r\n            return pos.coords\r\n        })\r\n        this.setState({markers: this.displayMarkers()})\r\n    }\r\n\r\n    onMarkerClick = (props, marker) => {\r\n        console.log('props', props);\r\n        \r\n        this.setState({\r\n            activeMarker: marker,\r\n            showingInfoWindow: true,\r\n            selectedPlace: props,\r\n            mapZoom: 17\r\n        });\r\n    }\r\n\r\n    onJamCenter = (jamId) => {\r\n        const marker  = this.state.markers.find(marker => {\r\n            return marker.key === jamId\r\n        })\r\n        const props = marker.props\r\n        this.setState({\r\n            selectedPlace: props,\r\n            mapZoom: 17\r\n        });\r\n    }\r\n\r\n    onJamClick = (jamId) => {\r\n        this.props.history.push(`jam/${jamId}`)\r\n    }\r\n\r\n    onClose = props => {\r\n        if (this.state.showingInfoWindow) {\r\n          this.setState({\r\n            showingInfoWindow: false,\r\n            activeMarker: null\r\n          });\r\n        }\r\n      };\r\n    displayMarkers = () => {\r\n        return this.props.jams.map(jam => {\r\n                return  <Marker key={jam._id} \r\n                    position={{\r\n                        lat: jam.location.lat,\r\n                        lng: jam.location.lng\r\n                    }} \r\n                    onMousedown={this.onMarkerClick}\r\n                    name={jam.title}\r\n                    currMembers={jam.usersGoing.length}\r\n                    capacity={jam.capacity}\r\n                    icon={{\r\n                        url: jamMarker,\r\n                        anchor: new this.props.google.maps.Point(32,32),\r\n                        scaledSize:  new this.props.google.maps.Size(50,50)\r\n                    }}\r\n                />\r\n            });\r\n    }\r\n      \r\n    //   centerMoved(mapProps, map) {\r\n    //       console.log(map.center.lat());\r\n          \r\n    //   }\r\n    _mapLoaded(mapProps, map) {\r\n        map.setOptions({\r\n           styles: mapStyle\r\n        })\r\n    }    \r\n\r\n    render() {\r\n        const { jams, loggedInUser } = this.props\r\n        const {userPos, selectedPlace, mapZoom, markers} = this.state\r\n        if (!selectedPlace || jams.length === 0) return <h2>Loading...</h2>\r\n        console.log(userPos);\r\n        return (\r\n            <>\r\n            <section className=\"flex explore-container pos-relative\">\r\n                {/* <h1 className=\"jams-explore-title\">Jams In Current Area</h1> */}\r\n                {/* <JamScroll jams={this.props.jams} onJamClick={this.onJamClick}/> */}\r\n                <button onClick={()=>{\r\n                    const selectedPlaceCopy = {...selectedPlace}\r\n                    selectedPlaceCopy.position.lat = userPos.position.lat\r\n                    selectedPlaceCopy.position.lng = userPos.position.lng\r\n                    this.setState({selectedPlace: selectedPlaceCopy, mapZoom: 15})\r\n                    }}><GpsFixedIcon style={{fontSize: 40}}/></button>\r\n                <Map\r\n                    ref={this.mapRef}\r\n                    // containerStyle={containerStyle}\r\n                    google={this.props.google}\r\n                    zoom={mapZoom}\r\n                    style={mapStyles}\r\n                    // centerAroundCurrentLocation={true}\r\n                    initialCenter={{lat: selectedPlace.position.lat, lng: selectedPlace.position.lng}}\r\n                    center={{lat: selectedPlace.position.lat, lng: selectedPlace.position.lng}}\r\n                    onReady={(mapProps, map) => this._mapLoaded(mapProps, map)}\r\n                    disableDefaultUI= {true}\r\n                    // onBoundsChanged={this.centerMoved}\r\n                >\r\n                {markers}\r\n                {loggedInUser && <Marker\r\n                    name={'Your position'}\r\n                    position={userPos.position}\r\n                    icon={{\r\n                    url: loggedInUser.imgUrl,\r\n                    anchor: new this.props.google.maps.Point(32,32),\r\n                    scaledSize:  new this.props.google.maps.Size(50,50)\r\n                    }}\r\n                    />}\r\n                <InfoWindow\r\n                marker={this.state.activeMarker}\r\n                visible={this.state.showingInfoWindow}\r\n                onClose={this.onClose}\r\n              >\r\n                <div>\r\n                    <h2>{this.state.selectedPlace.name}</h2>\r\n                    <h3>Capacity: {this.state.selectedPlace.currMembers} / {this.state.selectedPlace.capacity}</h3>\r\n                </div>\r\n                </InfoWindow>\r\n            </Map>\r\n            <div className=\"jams-explore-container\">\r\n                <div className=\"jams-explore-filter flex column\">\r\n                    <h1>Filter Jams</h1>\r\n                    <div className=\"filter-inputs\">\r\n                        <input type=\"text\" name=\"name\" id=\"\"/>\r\n                        <select name=\"filterByInst\">\r\n                            <option value=\"\">By Instrument Missing</option>\r\n                            <option value=\"\">Singer</option>\r\n                            <option value=\"\">Guitar</option>\r\n                            <option value=\"\">Drums</option>\r\n                            <option value=\"\">Bass</option>\r\n                            <option value=\"\">Keyboard</option>\r\n                        </select>\r\n                        <select name=\"filterByRegion\">\r\n                            <option value=\"\">By Region</option>\r\n                            <option value=\"\">North</option>\r\n                            <option value=\"\">Center</option>\r\n                            <option value=\"\">South</option>\r\n                        </select>\r\n                    </div>\r\n                </div>\r\n                <ul className=\"jams-explore-list\">\r\n                    {jams.map((jam) => (\r\n                        <JamPreview key={jam._id} jam={jam} onJamClick={this.onJamClick}/>\r\n                    ))}\r\n                </ul>\r\n            </div>\r\n            {/* <JamList jams={jams} onJamClick={this.onJamClick}/> */}\r\n            </section>\r\n            </>\r\n        );\r\n    }\r\n}\r\n\r\nconst mapStateToProps = (state) => {\r\n    return {\r\n        jams: state.jamModule.jams,\r\n        users: state.userModule.users,\r\n        loggedInUser: state.userModule.loggedInUser \r\n    };\r\n};\r\nconst mapDispatchToProps = {\r\n    loadJams,\r\n    loadUsers,\r\n};\r\n\r\nexport const JamExplore = GoogleApiWrapper({\r\n    apiKey: \"AIzaSyBTd-r9ES9me88-mTQasKgom191cNMihjY\",\r\n})(connect(mapStateToProps, mapDispatchToProps)(_JamExplore));\r\n","C:\\Users\\danie\\OneDrive\\שולחן העבודה\\dev\\jameet\\jammit\\frontend\\src\\pages\\JamCreate.jsx",[],"C:\\Users\\danie\\OneDrive\\שולחן העבודה\\dev\\jameet\\jammit\\frontend\\src\\cmps\\Header.jsx",["195","196"],"import React, { Component } from 'react'\r\nimport { withRouter, NavLink, Link } from 'react-router-dom'\r\nimport { connect } from 'react-redux'\r\nimport { logout } from '../store/actions/userActions.js'\r\n\r\nclass _Header extends Component {\r\n\r\n    // onAvatarClick = (userId)=> {\r\n    //     this.props.history.push(`user/${userId}`)\r\n    //   }\r\n\r\n    render() {\r\n        const {loggedInUser} = this.props;\r\n        console.log(loggedInUser,'logdinuser')\r\n        return <header>\r\n            \r\n            <div className=\"logo fs40\">\r\n                <NavLink to=\"/\">\r\n                    Jameet\r\n                    <span className=\"fs20\"> people&music</span>\r\n                </NavLink>\r\n            </div>\r\n            \r\n            <div className=\"flex nav-right-side white\">\r\n                {/* {loggedInUser ? <div className=\"user-greet flex align-center white\">\r\n                    <Link to={`user/${loggedInUser._id}`}><h2>Welcome {loggedInUser.fullname.split(' ')[0]}</h2></Link>\r\n                    <span onClick={()=>this.props.logout()}>Sign out</span></div>\r\n                    : <div className=\"user-greet flex align-center\">Welcome Guest</div>} */}\r\n                <nav className=\"fs24\">\r\n                    <NavLink to=\"/search\">Jams</NavLink>\r\n                    <NavLink to=\"/members\">Members</NavLink>\r\n                {loggedInUser ? <div className=\"loggedin-avatar flex fs12\">\r\n                <img src={loggedInUser.imgUrl} className=\"cursor-pointer\" onClick={()=>this.props.history.push(`/user/${loggedInUser._id}`)}/>\r\n                    {/* <Link to={`user/${loggedInUser._id}`}></Link> */}\r\n                    {/* <span onClick={()=>this.props.logout()}>Sign out</span> */}\r\n                    </div>\r\n                    : <div className=\"user-greet flex align-center\">Hi Guest</div>}\r\n                  {/* { loggedInUser ? <span className=\"cursor-pointer\" onClick={()=>this.props.logout()}>Sign out</span> :<NavLink to=\"/login\">Login</NavLink> } */}\r\n                </nav>\r\n            </div>\r\n            \r\n        </header>\r\n    }\r\n\r\n}\r\nconst mapStateToProps = state => {\r\n    return {\r\n        loggedInUser: state.userModule.loggedInUser\r\n    }\r\n}\r\nconst mapDispatchToProps = {\r\n    logout\r\n}\r\n\r\n\r\nexport const Header = withRouter(connect(mapStateToProps, mapDispatchToProps)(_Header))","C:\\Users\\danie\\OneDrive\\שולחן העבודה\\dev\\jameet\\jammit\\frontend\\src\\cmps\\MainNav.jsx",["197"],"import { withRouter, NavLink } from 'react-router-dom'\r\nimport { connect } from 'react-redux'\r\nimport { logout } from '../store/actions/userActions.js'\r\nimport React, { Component } from 'react'\r\nimport { mainNavService } from '../services/mainNavService.js'\r\n\r\nclass _MainNav extends Component {\r\n\r\n\r\n    componentDidMount() {\r\n        console.log(this.props.location.pathname, 'componentDidMount');\r\n        console.log(this.props ,'props componentDidMount');\r\n        mainNavService.setHomePageNavStyle()\r\n    }\r\n\r\n    componentDidUpdate() {\r\n        // let {locationPathName }= this.props.location.pathname\r\n        if( this.props.location.pathname !== '/'){\r\n            console.log(this.props.location.pathname, 'otherpathname');\r\n            mainNavService.setNavStyle()\r\n        }else{\r\n            console.log(this.props.location.pathname, 'homepagepathname');\r\n            console.log(this.props.location, 'homepagepathname');\r\n            mainNavService.setHomePageNavStyle()\r\n        }\r\n    }\r\n\r\n    render() {\r\n        const { loggedInUser } = this.props;\r\n        return (\r\n            <nav className=\"navbar\">\r\n                <div className=\"logo fs30\">\r\n                    <NavLink to=\"/\">Jameet<span className=\"fs20\"> people&music</span></NavLink>\r\n                </div>\r\n                <div>\r\n                    <NavLink to=\"/search\" className=\"jams-nav-link\">Jams</NavLink>\r\n                    <NavLink to=\"/members\" className=\"members-nav-link\">Members</NavLink>\r\n                    {loggedInUser && <div className=\"loggedin-avatar flex fs12\">\r\n                        <img src={loggedInUser.imgUrl} className=\"cursor-pointer\" onClick={() => this.props.history.push(`/user/${loggedInUser._id}`)} />\r\n                    </div>\r\n                    }\r\n                </div>\r\n            </nav>\r\n        )\r\n    }\r\n}\r\nconst mapStateToProps = state => {\r\n    return {\r\n        loggedInUser: state.userModule.loggedInUser\r\n    }\r\n}\r\nconst mapDispatchToProps = {\r\n    logout\r\n}\r\n\r\n\r\nexport const MainNav = withRouter(connect(mapStateToProps, mapDispatchToProps)(_MainNav))\r\n","C:\\Users\\danie\\OneDrive\\שולחן העבודה\\dev\\jameet\\jammit\\frontend\\src\\store\\reducers\\index.js",[],"C:\\Users\\danie\\OneDrive\\שולחן העבודה\\dev\\jameet\\jammit\\frontend\\src\\cmps\\UserList.jsx",[],"C:\\Users\\danie\\OneDrive\\שולחן העבודה\\dev\\jameet\\jammit\\frontend\\src\\cmps\\HeroSection.jsx",[],"C:\\Users\\danie\\OneDrive\\שולחן העבודה\\dev\\jameet\\jammit\\frontend\\src\\cmps\\JamScroll.jsx",[],"C:\\Users\\danie\\OneDrive\\שולחן העבודה\\dev\\jameet\\jammit\\frontend\\src\\cmps\\JamPreview.jsx",["198","199"],"import jamThumb from \"../assets/img/jam-thumb.jpg\"\r\nimport LocationOnIcon from '@material-ui/icons/LocationOn';\r\nimport EventIcon from '@material-ui/icons/Event';\r\nimport {instIcons} from '../assets/img/inst-icons/icons.js'\r\n\r\n\r\nexport function JamPreview({ jam, onJamClick }) {\r\n\r\n    function showIcons (){\r\n        return instIcons.map(icon=>{\r\n            const user = jam.usersGoing.find(user => {\r\n                return user.playing.some(inst=>{\r\n                    const instName = Object.keys(icon)[0]\r\n                    return instName === inst\r\n                })\r\n            })\r\n            if (user) return <img className=\"inst-icon\" src={Object.values(icon)[0]} alt=\"instrument\"/>\r\n        })\r\n    }\r\n\r\n    const slotsLeft = jam.capacity - jam.usersGoing.length\r\n    \r\n    return (\r\n        <li className=\"jam-card flex column\" onClick={()=>onJamClick(jam._id)}>\r\n            <div className=\"thumb flex column pos-relative\">\r\n                <img className=\"jam-card thumb\" src={jamThumb} className=\"jamThumb\" alt=\"jam-thumbnail\"/>\r\n                <div className=\"inst-icons-wrapper\">\r\n                    {showIcons()}\r\n                </div>\r\n            </div>\r\n            <div className=\"jam-card-content flex column\" >\r\n                <h2>{jam.title}</h2>\r\n            \r\n            <ul className=\"jam-card-tags flex\">{jam.tags.map((tag, idx) => {\r\n                return <li key={idx}>{tag}</li> })}\r\n            </ul>\r\n            \r\n                <div><p><LocationOnIcon/>{jam.location.city}</p></div>\r\n                <div className=\"date-slots\">\r\n                    <div className=\"date\">\r\n                        <EventIcon/>\r\n                        {new Date(jam.startsAt).toLocaleString('he-IL',{month: '2-digit', day: '2-digit', hour: '2-digit', minute:'2-digit'})}\r\n                    </div>\r\n                    {slotsLeft < 10 ? <span className=\"red\">\r\n                        {slotsLeft} Slots Left\r\n                    </span>: <span className=\"green\">Open</span> }\r\n                </div>\r\n                \r\n            </div>\r\n        </li>\r\n    );\r\n}","C:\\Users\\danie\\OneDrive\\שולחן העבודה\\dev\\jameet\\jammit\\frontend\\src\\cmps\\JamList.jsx",[],"C:\\Users\\danie\\OneDrive\\שולחן העבודה\\dev\\jameet\\jammit\\frontend\\src\\services\\authService.js",[],"C:\\Users\\danie\\OneDrive\\שולחן העבודה\\dev\\jameet\\jammit\\frontend\\src\\store\\actions\\jamActions.js",[],"C:\\Users\\danie\\OneDrive\\שולחן העבודה\\dev\\jameet\\jammit\\frontend\\src\\store\\actions\\userActions.js",[],"C:\\Users\\danie\\OneDrive\\שולחן העבודה\\dev\\jameet\\jammit\\frontend\\src\\services\\utilService.js",[],"C:\\Users\\danie\\OneDrive\\שולחן העבודה\\dev\\jameet\\jammit\\frontend\\src\\services\\userService.js",[],"C:\\Users\\danie\\OneDrive\\שולחן העבודה\\dev\\jameet\\jammit\\frontend\\src\\services\\jamService.js",[],"C:\\Users\\danie\\OneDrive\\שולחן העבודה\\dev\\jameet\\jammit\\frontend\\src\\cmps\\UserPreview.jsx",["200","201","202"],"import { useHistory } from \"react-router-dom\";\r\nimport LocationOnIcon from '@material-ui/icons/LocationOn';\r\nimport {instIcons} from '../assets/img/inst-icons/icons.js'\r\n\r\nexport function UserPreview({ user }) {\r\n\r\n    function showIcons() {\r\n        return instIcons.map(icon=>{\r\n            const talent = user.talents.find(talent=>{\r\n                return (talent === Object.keys(icon)[0])\r\n            })\r\n            if (talent) return <img className=\"user-inst-icon\" src={Object.values(icon)[0]} alt=\"instrument\"/>\r\n        })\r\n    }\r\n\r\n    const history = useHistory()\r\n    return (\r\n        <li className=\"user-card flex column\" onClick={()=>history.push(`/user/${user._id}`)}>\r\n            <div className=\"thumb flex column pos-relative\">\r\n                <div className=\"img-wrapper flex justify-center\">\r\n                    <img className=\"user-card thumb\" src={user.imgUrl} className=\"userThumb\" alt=\"user-thumbnail\"/>\r\n                    <div className=\"inst-icons-wrapper\">\r\n                        {showIcons()}\r\n                    </div>\r\n                </div>\r\n            </div>\r\n            <h2>{user.username}</h2>\r\n            <div className=\"flex\">\r\n                <div className=\"user-card-content flex column\">\r\n                    \r\n                    <ul className=\"user-card-tags flex\">{user.tags.map((tag, idx) => {\r\n                        if (idx < 3) return <li key={idx}>{tag}</li> })}\r\n                    </ul>\r\n                    <p><LocationOnIcon/>{user.location.city}</p>\r\n                </div>\r\n            </div>\r\n        </li>\r\n    );\r\n}","C:\\Users\\danie\\OneDrive\\שולחן העבודה\\dev\\jameet\\jammit\\frontend\\src\\assets\\img\\inst-icons\\icons.js",[],"C:\\Users\\danie\\OneDrive\\שולחן העבודה\\dev\\jameet\\jammit\\frontend\\src\\cmps\\MapContainer.jsx",[],"C:\\Users\\danie\\OneDrive\\שולחן העבודה\\dev\\jameet\\jammit\\frontend\\src\\cmps\\JamGoingModal.jsx",[],"C:\\Users\\danie\\OneDrive\\שולחן העבודה\\dev\\jameet\\jammit\\frontend\\src\\cmps\\JamUserPreview.jsx",[],"C:\\Users\\danie\\OneDrive\\שולחן העבודה\\dev\\jameet\\jammit\\frontend\\src\\cmps\\JamDetailsNavbar.jsx",[],"C:\\Users\\danie\\OneDrive\\שולחן העבודה\\dev\\jameet\\jammit\\frontend\\src\\cmps\\JamCreateForm.jsx",[],"C:\\Users\\danie\\OneDrive\\שולחן העבודה\\dev\\jameet\\jammit\\frontend\\src\\store\\reducers\\reviewReducer.js",[],"C:\\Users\\danie\\OneDrive\\שולחן העבודה\\dev\\jameet\\jammit\\frontend\\src\\store\\reducers\\jamReducer.js",[],"C:\\Users\\danie\\OneDrive\\שולחן העבודה\\dev\\jameet\\jammit\\frontend\\src\\store\\reducers\\userReducer.js",[],"C:\\Users\\danie\\OneDrive\\שולחן העבודה\\dev\\jameet\\jammit\\frontend\\src\\store\\reducers\\systemReducer.js",[],"C:\\Users\\danie\\OneDrive\\שולחן העבודה\\dev\\jameet\\jammit\\frontend\\src\\services\\httpService.js",[],"C:\\Users\\danie\\OneDrive\\שולחן העבודה\\dev\\jameet\\jammit\\frontend\\src\\services\\mainNavService.js",[],"C:\\Users\\danie\\OneDrive\\שולחן העבודה\\dev\\jameet\\jammit\\frontend\\src\\cmps\\LoginModal.jsx",["203"],"import ReactModal from 'react-modal';\r\nimport React from 'react';\r\nimport {_LoginSignup} from '../pages/LoginSignup'\r\n \r\nexport  class LoginModal extends React.Component {\r\n  constructor () {\r\n    super();\r\n    this.state = {\r\n      showModal: false\r\n\r\n\r\n    };\r\n    \r\n    this.handleOpenModal = this.handleOpenModal.bind(this);\r\n    this.handleCloseModal = this.handleCloseModal.bind(this);\r\n  }\r\n  \r\n  handleOpenModal () {\r\n    this.setState({ showModal: true \r\n    });\r\n  }\r\n  \r\n  handleCloseModal () {\r\n    this.setState({ showModal: false \r\n    \r\n    \r\n    });\r\n  }\r\n  \r\n  render () {\r\n      const customStyles = {\r\n          content : {\r\n            top                   : '50%',\r\n            left                  : '50%',\r\n            right                 : 'auto',\r\n            bottom                : 'auto',\r\n            marginRight           : '-50%',\r\n            transform             : 'translate(-50%, -50%)'\r\n          }\r\n        };\r\n    return (\r\n      <div>\r\n        <button onClick={this.handleOpenModal}></button>\r\n        <ReactModal \r\n           isOpen={this.state.showModal}\r\n           contentLabel=\"login-modal\"\r\n           style={customStyles}\r\n           shouldCloseOnEsc={true}\r\n           ariaHideApp={false}\r\n           >\r\n          <button onClick={this.handleCloseModal}>X</button>\r\n        \r\n          <_LoginSignup/>\r\n        \r\n         \r\n        </ReactModal>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\n","C:\\Users\\danie\\OneDrive\\שולחן העבודה\\dev\\jameet\\jammit\\frontend\\src\\pages\\ForYou.jsx",["204"],"import React, { Component } from 'react'\r\nimport { connect } from 'react-redux'\r\nimport { userService } from '../services/userService'\r\nimport { loadUsers } from '../store/actions/userActions'\r\nimport { loadJams } from '../store/actions/jamActions'\r\n\r\nclass _ForYou extends Component {\r\n    render() {\r\n        return <h2>FOR YOU!</h2>\r\n    }\r\n}\r\n\r\nconst mapStateToProps = state => {\r\n    return {\r\n      jams: state.jamModule.jams,\r\n      users: state.userModule.users,\r\n      loggedInUser: state.userModule.loggedInUser\r\n    }\r\n  }\r\n  const mapDispatchToProps = {\r\n    loadJams,\r\n    loadUsers,\r\n  }\r\n  \r\n  export const ForYou = connect(mapStateToProps, mapDispatchToProps)(_ForYou)","C:\\Users\\danie\\OneDrive\\שולחן העבודה\\dev\\jameet\\jammit\\frontend\\src\\cmps\\UserProfile\\UserTalents.jsx",["205"],"export function UserTalents({user}) {\r\n    return (\r\n        <div className=\"user-right-box flex column\">\r\n            <div className=\"top-card\">\r\n              <h1>Talents</h1>\r\n            <div className=\"user-talents\">\r\n              <ul className=\"flex column\">{user.talents.map((talent, idx) => {\r\n                return <li key={idx}>{talent}</li>\r\n              })}</ul>\r\n            </div>\r\n            </div>\r\n               <div className=\"followers bottom-card\">\r\n                <h1>Followers</h1>\r\n              {user.followers.map((follower, idx) => {\r\n                return <img className=\"follower-avatar\" src={follower.imgUrl} key={idx} />\r\n              })}\r\n            </div>\r\n        </div>\r\n    )\r\n}","C:\\Users\\danie\\OneDrive\\שולחן העבודה\\dev\\jameet\\jammit\\frontend\\src\\cmps\\UserProfile\\UserInfo.jsx",["206"],"import ChatRoundedIcon from '@material-ui/icons/ChatRounded';\r\nimport FavoriteBorderRoundedIcon from '@material-ui/icons/FavoriteBorderRounded';\r\nimport LocationOnOutlinedIcon from '@material-ui/icons/LocationOnOutlined';\r\nimport FavoriteRoundedIcon from '@material-ui/icons/FavoriteRounded';\r\nimport AddRoundedIcon from '@material-ui/icons/AddRounded';\r\nimport { useHistory } from 'react-router';\r\n\r\n\r\nexport function UserInfo({user, followToggle, onFollowIconClick, isUserAdmin}) {\r\n    const history = useHistory()\r\n    return (\r\n        <div className=\"user-left-box flex column\">\r\n            <div className=\"user-basic-info flex\">\r\n                <div className=\"user-img\">\r\n                    <img src={user.imgUrl} />\r\n                </div>\r\n                <div className=\"user-tags-name flex column\">\r\n                    <span className=\"user-stage-name fs30\">{user.username}</span>\r\n                    <div className=\"user-location\">\r\n                    <LocationOnOutlinedIcon className=\"location-icon\" />\r\n                    <span>{user.location.city}</span>\r\n                    </div>\r\n                    <ul className=\"user-tags flex\">{user.tags.map((tag, idx) => {\r\n                            return <li key={idx}>{tag}</li> })}\r\n                    </ul>\r\n                </div>\r\n            </div>\r\n            <div className=\"user-about\">\r\n                <span>{user.about}</span>\r\n            </div>\r\n            {!isUserAdmin && <div className=\"reaction-icon\">\r\n                <ChatRoundedIcon style={{fontSize: 40}}/>\r\n                {!followToggle ? <FavoriteBorderRoundedIcon style={{fontSize: 40}} onClick={()=>onFollowIconClick()}/>\r\n                : <FavoriteRoundedIcon style={{fontSize: 40}} onClick={()=>onFollowIconClick()}/>}  \r\n                <AddRoundedIcon onClick={()=>history.push(\"/jam/create\")} style={{fontSize: 40}} />\r\n            </div>}\r\n        </div>\r\n        \r\n    )\r\n}",{"ruleId":"207","replacedBy":"208"},{"ruleId":"209","replacedBy":"210"},{"ruleId":"211","severity":1,"message":"212","line":7,"column":10,"nodeType":"213","messageId":"214","endLine":7,"endColumn":16},{"ruleId":"215","severity":1,"message":"216","line":32,"column":38,"nodeType":"217","messageId":"218","endLine":32,"endColumn":40},{"ruleId":"211","severity":1,"message":"219","line":7,"column":8,"nodeType":"213","messageId":"214","endLine":7,"endColumn":16},{"ruleId":"211","severity":1,"message":"220","line":6,"column":8,"nodeType":"213","messageId":"214","endLine":6,"endColumn":16},{"ruleId":"211","severity":1,"message":"221","line":7,"column":10,"nodeType":"213","messageId":"214","endLine":7,"endColumn":19},{"ruleId":"211","severity":1,"message":"222","line":8,"column":10,"nodeType":"213","messageId":"214","endLine":8,"endColumn":17},{"ruleId":"211","severity":1,"message":"223","line":2,"column":31,"nodeType":"213","messageId":"214","endLine":2,"endColumn":35},{"ruleId":"224","severity":1,"message":"225","line":33,"column":17,"nodeType":"226","endLine":33,"endColumn":143},{"ruleId":"224","severity":1,"message":"225","line":39,"column":25,"nodeType":"226","endLine":39,"endColumn":154},{"ruleId":"215","severity":1,"message":"227","line":10,"column":34,"nodeType":"217","messageId":"218","endLine":10,"endColumn":36},{"ruleId":"228","severity":1,"message":"229","line":26,"column":64,"nodeType":"230","endLine":26,"endColumn":84},{"ruleId":"215","severity":1,"message":"227","line":8,"column":34,"nodeType":"217","messageId":"218","endLine":8,"endColumn":36},{"ruleId":"228","severity":1,"message":"229","line":21,"column":72,"nodeType":"230","endLine":21,"endColumn":93},{"ruleId":"215","severity":1,"message":"227","line":31,"column":83,"nodeType":"217","messageId":"218","endLine":31,"endColumn":85},{"ruleId":"231","severity":1,"message":"232","line":53,"column":11,"nodeType":"226","endLine":53,"endColumn":26},{"ruleId":"211","severity":1,"message":"233","line":3,"column":10,"nodeType":"213","messageId":"214","endLine":3,"endColumn":21},{"ruleId":"224","severity":1,"message":"225","line":15,"column":24,"nodeType":"226","endLine":15,"endColumn":91},{"ruleId":"224","severity":1,"message":"225","line":15,"column":21,"nodeType":"226","endLine":15,"endColumn":46},"no-native-reassign",["234"],"no-negated-in-lhs",["235"],"no-unused-vars","'Header' is defined but never used.","Identifier","unusedVar","array-callback-return","Array.prototype.filter() expects a value to be returned at the end of arrow function.","ArrowFunctionExpression","expectedAtEnd","'HomeIcon' is defined but never used.","'jamThumb' is defined but never used.","'JamScroll' is defined but never used.","'JamList' is defined but never used.","'Link' is defined but never used.","jsx-a11y/alt-text","img elements must have an alt prop, either with meaningful text, or an empty string for decorative images.","JSXOpeningElement","Array.prototype.map() expects a value to be returned at the end of arrow function.","react/jsx-no-duplicate-props","No duplicate props allowed","JSXAttribute","react/jsx-pascal-case","Imported JSX component _LoginSignup must be in PascalCase or SCREAMING_SNAKE_CASE","'userService' is defined but never used.","no-global-assign","no-unsafe-negation"]