[{"C:\\Users\\moreh\\OneDrive\\שולחן העבודה\\Sprint 4\\jammit\\frontend\\src\\index.js":"1","C:\\Users\\moreh\\OneDrive\\שולחן העבודה\\Sprint 4\\jammit\\frontend\\src\\serviceWorkerRegistration.js":"2","C:\\Users\\moreh\\OneDrive\\שולחן העבודה\\Sprint 4\\jammit\\frontend\\src\\reportWebVitals.js":"3","C:\\Users\\moreh\\OneDrive\\שולחן העבודה\\Sprint 4\\jammit\\frontend\\src\\store\\store.js":"4","C:\\Users\\moreh\\OneDrive\\שולחן העבודה\\Sprint 4\\jammit\\frontend\\src\\App.jsx":"5","C:\\Users\\moreh\\OneDrive\\שולחן העבודה\\Sprint 4\\jammit\\frontend\\src\\pages\\Home.jsx":"6","C:\\Users\\moreh\\OneDrive\\שולחן העבודה\\Sprint 4\\jammit\\frontend\\src\\pages\\UserProfile.jsx":"7","C:\\Users\\moreh\\OneDrive\\שולחן העבודה\\Sprint 4\\jammit\\frontend\\src\\pages\\LoginSignup.jsx":"8","C:\\Users\\moreh\\OneDrive\\שולחן העבודה\\Sprint 4\\jammit\\frontend\\src\\pages\\MembersList.jsx":"9","C:\\Users\\moreh\\OneDrive\\שולחן העבודה\\Sprint 4\\jammit\\frontend\\src\\pages\\JamDetails.jsx":"10","C:\\Users\\moreh\\OneDrive\\שולחן העבודה\\Sprint 4\\jammit\\frontend\\src\\pages\\JamExplore.jsx":"11","C:\\Users\\moreh\\OneDrive\\שולחן העבודה\\Sprint 4\\jammit\\frontend\\src\\pages\\JamCreate.jsx":"12","C:\\Users\\moreh\\OneDrive\\שולחן העבודה\\Sprint 4\\jammit\\frontend\\src\\cmps\\Header.jsx":"13","C:\\Users\\moreh\\OneDrive\\שולחן העבודה\\Sprint 4\\jammit\\frontend\\src\\store\\reducers\\index.js":"14","C:\\Users\\moreh\\OneDrive\\שולחן העבודה\\Sprint 4\\jammit\\frontend\\src\\cmps\\UserList.jsx":"15","C:\\Users\\moreh\\OneDrive\\שולחן העבודה\\Sprint 4\\jammit\\frontend\\src\\cmps\\JamScroll.jsx":"16","C:\\Users\\moreh\\OneDrive\\שולחן העבודה\\Sprint 4\\jammit\\frontend\\src\\store\\actions\\userActions.js":"17","C:\\Users\\moreh\\OneDrive\\שולחן העבודה\\Sprint 4\\jammit\\frontend\\src\\services\\authService.js":"18","C:\\Users\\moreh\\OneDrive\\שולחן העבודה\\Sprint 4\\jammit\\frontend\\src\\store\\actions\\jamActions.js":"19","C:\\Users\\moreh\\OneDrive\\שולחן העבודה\\Sprint 4\\jammit\\frontend\\src\\cmps\\JamList.jsx":"20","C:\\Users\\moreh\\OneDrive\\שולחן העבודה\\Sprint 4\\jammit\\frontend\\src\\cmps\\JamPreview.jsx":"21","C:\\Users\\moreh\\OneDrive\\שולחן העבודה\\Sprint 4\\jammit\\frontend\\src\\services\\userService.js":"22","C:\\Users\\moreh\\OneDrive\\שולחן העבודה\\Sprint 4\\jammit\\frontend\\src\\cmps\\UserPreview.jsx":"23","C:\\Users\\moreh\\OneDrive\\שולחן העבודה\\Sprint 4\\jammit\\frontend\\src\\services\\utilService.js":"24","C:\\Users\\moreh\\OneDrive\\שולחן העבודה\\Sprint 4\\jammit\\frontend\\src\\services\\jamService.js":"25","C:\\Users\\moreh\\OneDrive\\שולחן העבודה\\Sprint 4\\jammit\\frontend\\src\\store\\reducers\\userReducer.js":"26","C:\\Users\\moreh\\OneDrive\\שולחן העבודה\\Sprint 4\\jammit\\frontend\\src\\store\\reducers\\reviewReducer.js":"27","C:\\Users\\moreh\\OneDrive\\שולחן העבודה\\Sprint 4\\jammit\\frontend\\src\\store\\reducers\\systemReducer.js":"28","C:\\Users\\moreh\\OneDrive\\שולחן העבודה\\Sprint 4\\jammit\\frontend\\src\\store\\reducers\\jamReducer.js":"29","C:\\Users\\moreh\\OneDrive\\שולחן העבודה\\Sprint 4\\jammit\\frontend\\src\\assets\\img\\inst-icons\\icons.js":"30","C:\\Users\\moreh\\OneDrive\\שולחן העבודה\\Sprint 4\\jammit\\frontend\\src\\cmps\\MapContainer.jsx":"31","C:\\Users\\moreh\\OneDrive\\שולחן העבודה\\Sprint 4\\jammit\\frontend\\src\\cmps\\JamUserPreview.jsx":"32","C:\\Users\\moreh\\OneDrive\\שולחן העבודה\\Sprint 4\\jammit\\frontend\\src\\cmps\\JamGoingModal.jsx":"33","C:\\Users\\moreh\\OneDrive\\שולחן העבודה\\Sprint 4\\jammit\\frontend\\src\\cmps\\JamDetailsNavbar.jsx":"34","C:\\Users\\moreh\\OneDrive\\שולחן העבודה\\Sprint 4\\jammit\\frontend\\src\\cmps\\JamCreateForm.jsx":"35","C:\\Users\\moreh\\OneDrive\\שולחן העבודה\\Sprint 4\\jammit\\frontend\\src\\services\\httpService.js":"36","C:\\Users\\moreh\\OneDrive\\שולחן העבודה\\Sprint 4\\jammit\\frontend\\src\\cmps\\HeroSection.jsx":"37","C:\\Users\\moreh\\OneDrive\\שולחן העבודה\\Sprint 4\\jammit\\frontend\\src\\cmps\\MainNav.jsx":"38","C:\\Users\\moreh\\OneDrive\\שולחן העבודה\\Sprint 4\\jammit\\frontend\\src\\services\\mainNavService.js":"39"},{"size":935,"mtime":1610550371936,"results":"40","hashOfConfig":"41"},{"size":5201,"mtime":1610550371942,"results":"42","hashOfConfig":"41"},{"size":377,"mtime":1610550371940,"results":"43","hashOfConfig":"41"},{"size":323,"mtime":1610550371960,"results":"44","hashOfConfig":"41"},{"size":1242,"mtime":1610956368299,"results":"45","hashOfConfig":"41"},{"size":3371,"mtime":1610956368352,"results":"46","hashOfConfig":"41"},{"size":5014,"mtime":1610895534711,"results":"47","hashOfConfig":"41"},{"size":4871,"mtime":1610892554805,"results":"48","hashOfConfig":"41"},{"size":1326,"mtime":1610724880451,"results":"49","hashOfConfig":"41"},{"size":7745,"mtime":1610897282705,"results":"50","hashOfConfig":"41"},{"size":8897,"mtime":1610892554804,"results":"51","hashOfConfig":"41"},{"size":1790,"mtime":1610890606431,"results":"52","hashOfConfig":"41"},{"size":2326,"mtime":1610956368351,"results":"53","hashOfConfig":"41"},{"size":396,"mtime":1610550371955,"results":"54","hashOfConfig":"41"},{"size":278,"mtime":1610808500930,"results":"55","hashOfConfig":"41"},{"size":1786,"mtime":1610808500918,"results":"56","hashOfConfig":"41"},{"size":1574,"mtime":1610550371953,"results":"57","hashOfConfig":"41"},{"size":1596,"mtime":1610612281805,"results":"58","hashOfConfig":"41"},{"size":1499,"mtime":1610890606442,"results":"59","hashOfConfig":"41"},{"size":303,"mtime":1610724416141,"results":"60","hashOfConfig":"41"},{"size":2097,"mtime":1610814552392,"results":"61","hashOfConfig":"41"},{"size":16337,"mtime":1610898109737,"results":"62","hashOfConfig":"41"},{"size":1587,"mtime":1610814552393,"results":"63","hashOfConfig":"41"},{"size":1052,"mtime":1610660112295,"results":"64","hashOfConfig":"41"},{"size":13381,"mtime":1610956368353,"results":"65","hashOfConfig":"41"},{"size":737,"mtime":1610550371959,"results":"66","hashOfConfig":"41"},{"size":669,"mtime":1610550371957,"results":"67","hashOfConfig":"41"},{"size":322,"mtime":1610550371958,"results":"68","hashOfConfig":"41"},{"size":1239,"mtime":1610890606446,"results":"69","hashOfConfig":"41"},{"size":349,"mtime":1610756332721,"results":"70","hashOfConfig":"41"},{"size":1047,"mtime":1610891453216,"results":"71","hashOfConfig":"41"},{"size":606,"mtime":1610795162515,"results":"72","hashOfConfig":"41"},{"size":2773,"mtime":1610826938205,"results":"73","hashOfConfig":"41"},{"size":1106,"mtime":1610829167015,"results":"74","hashOfConfig":"41"},{"size":5355,"mtime":1610890606428,"results":"75","hashOfConfig":"41"},{"size":1081,"mtime":1610550371944,"results":"76","hashOfConfig":"41"},{"size":843,"mtime":1610956368351,"results":"77","hashOfConfig":"41"},{"size":1388,"mtime":1610964280899,"results":"78","hashOfConfig":"41"},{"size":636,"mtime":1610964280900,"results":"79","hashOfConfig":"41"},{"filePath":"80","messages":"81","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"82"},"14pi29",{"filePath":"83","messages":"84","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"82"},{"filePath":"85","messages":"86","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"82"},{"filePath":"87","messages":"88","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"82"},{"filePath":"89","messages":"90","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"91","usedDeprecatedRules":"82"},{"filePath":"92","messages":"93","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"94","usedDeprecatedRules":"82"},{"filePath":"95","messages":"96","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"97","usedDeprecatedRules":"82"},{"filePath":"98","messages":"99","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"82"},{"filePath":"100","messages":"101","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"82"},{"filePath":"102","messages":"103","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"82"},{"filePath":"104","messages":"105","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"106","usedDeprecatedRules":"82"},{"filePath":"107","messages":"108","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"82"},{"filePath":"109","messages":"110","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"111","usedDeprecatedRules":"82"},{"filePath":"112","messages":"113","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"82"},{"filePath":"114","messages":"115","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"82"},{"filePath":"116","messages":"117","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"82"},{"filePath":"118","messages":"119","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"82"},{"filePath":"120","messages":"121","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"82"},{"filePath":"122","messages":"123","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"82"},{"filePath":"124","messages":"125","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"82"},{"filePath":"126","messages":"127","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"128","usedDeprecatedRules":"82"},{"filePath":"129","messages":"130","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"82"},{"filePath":"131","messages":"132","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"133","usedDeprecatedRules":"82"},{"filePath":"134","messages":"135","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"82"},{"filePath":"136","messages":"137","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"82"},{"filePath":"138","messages":"139","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"82"},{"filePath":"140","messages":"141","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"82"},{"filePath":"142","messages":"143","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"82"},{"filePath":"144","messages":"145","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"82"},{"filePath":"146","messages":"147","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"82"},{"filePath":"148","messages":"149","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"82"},{"filePath":"150","messages":"151","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"82"},{"filePath":"152","messages":"153","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"82"},{"filePath":"154","messages":"155","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"82"},{"filePath":"156","messages":"157","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"82"},{"filePath":"158","messages":"159","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"82"},{"filePath":"160","messages":"161","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"82"},{"filePath":"162","messages":"163","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"164","messages":"165","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"C:\\Users\\moreh\\OneDrive\\שולחן העבודה\\Sprint 4\\jammit\\frontend\\src\\index.js",[],["166","167"],"C:\\Users\\moreh\\OneDrive\\שולחן העבודה\\Sprint 4\\jammit\\frontend\\src\\serviceWorkerRegistration.js",[],"C:\\Users\\moreh\\OneDrive\\שולחן העבודה\\Sprint 4\\jammit\\frontend\\src\\reportWebVitals.js",[],"C:\\Users\\moreh\\OneDrive\\שולחן העבודה\\Sprint 4\\jammit\\frontend\\src\\store\\store.js",[],"C:\\Users\\moreh\\OneDrive\\שולחן העבודה\\Sprint 4\\jammit\\frontend\\src\\App.jsx",["168"],"import React from 'react'\r\nimport { HashRouter as Router, Switch, Route } from 'react-router-dom'\r\nimport { Home } from './pages/Home'\r\nimport { LoginSignup } from './pages/LoginSignup'\r\nimport { JamDetails } from './pages/JamDetails'\r\nimport { UserProfile } from './pages/UserProfile'\r\nimport { Header } from './cmps/Header'\r\nimport { JamExplore } from './pages/JamExplore'\r\nimport { MembersList } from './pages/MembersList'\r\nimport { JamCreate } from './pages/JamCreate'\r\nimport { MainNav } from './cmps/MainNav'\r\n\r\nexport function App() {\r\n  return (\r\n    <div className=\"app main-container\">\r\n      <Router>\r\n        <MainNav/>\r\n        <main>\r\n        {/* <Header></Header> */}\r\n          <Switch>\r\n            <Route path=\"/jam/create\" component={JamCreate} />\r\n            <Route path=\"/jam/:id\" component={JamDetails} />\r\n            <Route path=\"/user/:id\" component={UserProfile} />\r\n            <Route path=\"/members\" component={MembersList} />\r\n            <Route path=\"/login\" component={LoginSignup} />\r\n            <Route path=\"/search\" component={JamExplore} />\r\n            <Route path=\"/\" component={Home} />\r\n          </Switch>\r\n        </main>\r\n        <footer>\r\n        </footer>\r\n      </Router>\r\n    </div>\r\n  )\r\n}\r\n\r\n","C:\\Users\\moreh\\OneDrive\\שולחן העבודה\\Sprint 4\\jammit\\frontend\\src\\pages\\Home.jsx",["169"],"import React, { Component } from 'react'\r\nimport { connect } from 'react-redux'\r\nimport { loadJams } from '../store/actions/jamActions.js'\r\nimport { loadUsers } from '../store/actions/userActions.js'\r\nimport { UserList } from '../cmps/UserList.jsx'\r\nimport { JamScroll } from '../cmps/JamScroll.jsx'\r\nimport { HeroSection } from '../cmps/HeroSection.jsx'\r\n\r\nclass _Home extends Component {\r\n  state = {\r\n    \r\n  }\r\n  componentDidMount() {\r\n    this.props.loadJams()\r\n    this.props.loadUsers()\r\n  }\r\n  onJamClick = (jamId)=> {\r\n    this.props.history.push(`jam/${jamId}`)\r\n  }\r\n\r\n  scrollDown = ()=> {\r\n    \r\n  }\r\n\r\n  filterMembersByFollow = () =>{\r\n    return this.props.users.filter(user=> {\r\n      return user.followers.find(user=> user._id === this.props.loggedInUser._id)\r\n    })\r\n  }\r\n\r\n  filterJamsByInst = ()=> {\r\n    return this.props.jams.filter(jam=>{\r\n      const user = jam.usersGoing.find(user=> {\r\n        return user.playing.some(inst=>{\r\n          return inst === this.props.loggedInUser.talents[0]\r\n        })\r\n      })\r\n      if (!user) return jam\r\n    })\r\n  }\r\n\r\n  filterJamsByRegion = ()=> {\r\n    return this.props.jams.filter(jam=>{\r\n      return jam.location.region === this.props.loggedInUser.location.region\r\n    })\r\n  }\r\n\r\n  render() {\r\n    const { jams, users, loggedInUser } = this.props\r\n    if (jams.length === 0 || users.length === 0) return <h2>Loading...</h2>\r\n    return ( \r\n      <div className=\"home\">\r\n        <HeroSection onDownScrollClick={this.scrollDown}/>\r\n        \r\n        <main className=\"main-content flex space-between\">\r\n        {loggedInUser ? \r\n        <div className=\"user-filtered-container\">\r\n           <div className=\"inst-filtered section\"><h1>Jams Without {loggedInUser.talents[0]}</h1>\r\n            <JamScroll jams={this.filterJamsByInst()} onJamClick={this.onJamClick}/>\r\n          </div>\r\n          <div className=\"region-filtered section\"><h1>Jams Around {loggedInUser.location.region} Region</h1>\r\n            <JamScroll jams={this.filterJamsByRegion()} onJamClick={this.onJamClick}/>\r\n          </div>\r\n        </div>\r\n          :\r\n        <div className=\"user-filtered-container\">\r\n          <div className=\"jams section\">\r\n            <h1>Most Popular Jams</h1>\r\n            <JamScroll jams={jams} onJamClick={this.onJamClick}/>\r\n          </div>\r\n          <div className=\"jams section\">\r\n            <h1>Recently Added Jams</h1>\r\n            <JamScroll jams={jams} onJamClick={this.onJamClick}/>\r\n          </div>\r\n        </div>\r\n        }\r\n      {loggedInUser && loggedInUser.following.length > 0 ?\r\n        <div className=\"members-container\">\r\n        <div className=\"members-list-preview\">\r\n        <h1>Members You Follow</h1>\r\n          <UserList users={this.filterMembersByFollow()}/>\r\n        </div>\r\n      </div>\r\n        :\r\n        <div className=\"members-container\">\r\n          <div className=\"members-list-preview\">\r\n          <h1>Featured Members</h1>\r\n            <UserList users={users}/>\r\n          </div>\r\n        </div>\r\n      }\r\n        </main>\r\n      </div>\r\n    )\r\n  }\r\n}\r\n\r\nconst mapStateToProps = state => {\r\n  return {\r\n    jams: state.jamModule.jams,\r\n    users: state.userModule.users,\r\n    loggedInUser: state.userModule.loggedInUser\r\n  }\r\n}\r\nconst mapDispatchToProps = {\r\n  loadJams,\r\n  loadUsers,\r\n}\r\n\r\nexport const Home = connect(mapStateToProps, mapDispatchToProps)(_Home)\r\n","C:\\Users\\moreh\\OneDrive\\שולחן העבודה\\Sprint 4\\jammit\\frontend\\src\\pages\\UserProfile.jsx",["170","171","172"],"import React, { Component } from 'react'\r\nimport { connect } from 'react-redux'\r\nimport { userService } from '../services/userService'\r\nimport { loadUsers } from '../store/actions/userActions'\r\nimport { loadJams } from '../store/actions/jamActions'\r\nimport ChatRoundedIcon from '@material-ui/icons/ChatRounded';\r\nimport FavoriteBorderRoundedIcon from '@material-ui/icons/FavoriteBorderRounded';\r\nimport LocationOnOutlinedIcon from '@material-ui/icons/LocationOnOutlined';\r\nimport FavoriteRoundedIcon from '@material-ui/icons/FavoriteRounded';\r\nimport AddRoundedIcon from '@material-ui/icons/AddRounded';\r\nimport { JamPreview } from '../cmps/JamPreview'\r\nimport { JamScroll } from '../cmps/JamScroll'\r\n\r\nclass _UserProfile extends Component {\r\n\r\n  state = {\r\n    user: null,\r\n    currUser: false,\r\n    followToggle:false\r\n  }\r\n\r\n  // async componentDidMount() {\r\n  //   const user = await userService.getById(this.props.match.params.id)\r\n  //   this.setState({user})\r\n  // }\r\n  onFollowIconClick =()=>{\r\n    const followToggle = this.state\r\n    console.log(followToggle, 'followToggleonFollowIconClick');\r\n    this.setState({followToggle: !this.state.followToggle})\r\n\r\n  }\r\n\r\n  componentDidMount() {\r\n    const user = userService.getById(this.props.match.params.id)\r\n    // console.log('userDits cmp didM', user);\r\n    this.setState({ user })\r\n    // this.props.loadUsers()\r\n    this.props.loadJams()\r\n  }\r\n\r\n  onJamClick = (jamId) => {\r\n    this.props.history.push(`../jam/${jamId}`)\r\n  }\r\n\r\n  findSelectedJams = () => {\r\n    return this.props.jams.filter(jam => {\r\n      return jam.usersGoing.find(userGoing => {\r\n        return userGoing._id === this.state.user._id\r\n      })\r\n\r\n    })\r\n  }\r\n\r\n  render() {\r\n    const { user } = this.state\r\n    const { jams } = this.props\r\n    const {followToggle } = this.state\r\n    // if (!user) return <div>Loding..</div>\r\n    if (jams.length === 0 || !user) return <h2>Loading...</h2>\r\n    return (\r\n      <>\r\n        <section className=\"user-box flex justify-center\">\r\n\r\n          <div className=\"user-left-box flex column\">\r\n\r\n            <div className=\"user-basic-info flex\">\r\n\r\n              <div className=\"user-img\">\r\n                <img src={user.imgUrl} />\r\n              </div>\r\n\r\n              <div className=\"user-tags-name flex column justify-center\">\r\n                <span className=\"user-stage-name fs30\">{user.username}</span>\r\n                <br />\r\n                <div className=\"user-location\">\r\n                  <LocationOnOutlinedIcon className=\"location-icon\" />\r\n                  <span>{user.location.city}</span>\r\n                </div>\r\n                <ul >{user.tags.map((tag, idx) => {\r\n                  return <li className=\"tags fs12\" key={idx}>{tag}</li>\r\n                })}</ul>\r\n              </div>\r\n\r\n            </div>\r\n\r\n            <div className=\"user-about\">\r\n              <span>{user.about}</span>\r\n            </div>\r\n\r\n            {/* <div className=\"followers\">\r\n              {user.followers.map((follower, idx) => {\r\n                return <img className=\"follower-avatar\" src={follower.imgUrl} key={idx} />\r\n              })}\r\n            </div> */}\r\n\r\n            <div className=\"reaction-icon\">\r\n              <ChatRoundedIcon style={{fontSize: 40}}/>\r\n              {!followToggle ? <FavoriteBorderRoundedIcon style={{fontSize: 40}} onClick={()=>this.onFollowIconClick()}/>\r\n               : <FavoriteRoundedIcon style={{fontSize: 40}} onClick={()=>this.onFollowIconClick()}/>}\r\n              \r\n              <AddRoundedIcon onClick={()=>this.props.history.push(\"/jam/create\")} style={{fontSize: 40}} />\r\n            </div>\r\n\r\n          </div>\r\n\r\n          <div className=\"user-right-box flex column\">\r\n            <div className=\"top-card\">\r\n              <h1>Talents</h1>\r\n            <div className=\"user-talents\">\r\n              <ul className=\"flex column\">{user.talents.map((talent, idx) => {\r\n                return <li key={idx}>{talent}</li>\r\n              })}</ul>\r\n            </div>\r\n            </div>\r\n            {/* <div className=\"bottom-card\"> */}\r\n               <div className=\"followers bottom-card\">\r\n                <h1>Followers</h1>\r\n              {user.followers.map((follower, idx) => {\r\n                return <img className=\"follower-avatar\" src={follower.imgUrl} key={idx} />\r\n              })}\r\n            </div>\r\n            {/* </div> */}\r\n\r\n          </div>\r\n        </section>\r\n\r\n        <section className=\"user-jams-list\">\r\n              <h1>Jams Attending</h1>\r\n              <div>\r\n                <JamScroll jams={this.findSelectedJams()} onJamClick={this.onJamClick}/>\r\n              </div>\r\n        </section>\r\n      </>\r\n\r\n    )\r\n  }\r\n}\r\n\r\n\r\nconst mapStateToProps = state => {\r\n  return {\r\n    jams: state.jamModule.jams,\r\n    users: state.userModule.users,\r\n    // loggedInUser: state.userModule.loggedInUser\r\n  }\r\n}\r\nconst mapDispatchToProps = {\r\n  loadJams,\r\n  loadUsers,\r\n}\r\n\r\nexport const UserProfile = connect(mapStateToProps, mapDispatchToProps)(_UserProfile)\r\n\r\n\r\n","C:\\Users\\moreh\\OneDrive\\שולחן העבודה\\Sprint 4\\jammit\\frontend\\src\\pages\\LoginSignup.jsx",[],"C:\\Users\\moreh\\OneDrive\\שולחן העבודה\\Sprint 4\\jammit\\frontend\\src\\pages\\MembersList.jsx",[],"C:\\Users\\moreh\\OneDrive\\שולחן העבודה\\Sprint 4\\jammit\\frontend\\src\\pages\\JamDetails.jsx",[],"C:\\Users\\moreh\\OneDrive\\שולחן העבודה\\Sprint 4\\jammit\\frontend\\src\\pages\\JamExplore.jsx",["173","174","175"],"import React, { Component } from \"react\";\r\nimport { Map, GoogleApiWrapper, Marker, InfoWindow } from \"google-maps-react\";\r\nimport { connect } from \"react-redux\";\r\nimport { loadJams } from \"../store/actions/jamActions.js\";\r\nimport { loadUsers } from \"../store/actions/userActions.js\";\r\nimport jamThumb from \"../assets/img/jam-thumb.jpg\"\r\nimport { JamScroll } from \"../cmps/JamScroll.jsx\";\r\nimport { JamList } from \"../cmps/JamList.jsx\";\r\nimport { JamPreview } from \"../cmps/JamPreview.jsx\";\r\nimport jamMarker from \"../assets/img/green-marker.png\"\r\nimport GpsFixedIcon from '@material-ui/icons/GpsFixed';\r\n\r\n\r\n\r\nconst mapStyles = {\r\n    width: \"50%\",\r\n    height: \"100%\",\r\n};\r\n\r\n// const containerStyle = {\r\n//     position: 'static',  \r\n//     width: '100%',\r\n//     height: '100%'\r\n// }\r\n\r\nconst mapStyle = [\r\n    {\r\n      featureType: 'landscape.man_made',\r\n      elementType: 'geometry.fill',\r\n      stylers: [\r\n        {\r\n          color: '#dceafa'\r\n        }\r\n      ]\r\n    },\r\n    {\r\n        elementType: \"labels.text\",\r\n        stylers: [\r\n            {\r\n                visibility: \"off\"\r\n            }\r\n        ]\r\n    },\r\n    {\r\n        featureType: \"road.highway\",\r\n        elementType: \"labels\",\r\n        stylers: [\r\n            {\r\n                visibility: \"on\"\r\n            }\r\n        ]\r\n    },\r\n    {\r\n        featureType: \"road.arterial\",\r\n        elementType: \"labels.text\",\r\n        stylers: [\r\n            {\r\n                visibility: \"on\"\r\n            }\r\n        ]\r\n    },\r\n    {\r\n        featureType: \"road.local\",\r\n        elementType: \"labels.text\",\r\n        stylers: [\r\n            {\r\n                visibility: \"on\"\r\n            }\r\n        ]\r\n    },\r\n    ]\r\nclass _JamExplore extends Component {\r\n    state = {\r\n        markers: null,\r\n        userPos: null,\r\n        mapZoom: 14,\r\n        showingInfoWindow: false, // Hides or shows the InfoWindow\r\n        activeMarker: {}, // Shows the active marker upon click\r\n        selectedPlace: null, // Shows the InfoWindow to the selected place upon a marker\r\n    };\r\n    mapRef = React.createRef();\r\n    componentDidMount() {\r\n        this.props.loadJams()\r\n        navigator.geolocation.getCurrentPosition(pos =>{\r\n            const userPos = {position: {lat: null, lng: null}}\r\n            userPos.position.lat = pos.coords.latitude\r\n            userPos.position.lng = pos.coords.longitude\r\n            this.setState({selectedPlace: userPos, userPos: userPos})\r\n            return pos.coords\r\n        })\r\n        this.setState({markers: this.displayMarkers()})\r\n    }\r\n\r\n    onMarkerClick = (props, marker) => {\r\n        console.log('props', props);\r\n        \r\n        this.setState({\r\n            activeMarker: marker,\r\n            showingInfoWindow: true,\r\n            selectedPlace: props,\r\n            mapZoom: 17\r\n        });\r\n    }\r\n\r\n    onJamCenter = (jamId) => {\r\n        const marker  = this.state.markers.find(marker => {\r\n            return marker.key === jamId\r\n        })\r\n        const props = marker.props\r\n        this.setState({\r\n            selectedPlace: props,\r\n            mapZoom: 17\r\n        });\r\n    }\r\n\r\n    onJamClick = (jamId) => {\r\n        this.props.history.push(`jam/${jamId}`)\r\n    }\r\n\r\n    onClose = props => {\r\n        if (this.state.showingInfoWindow) {\r\n          this.setState({\r\n            showingInfoWindow: false,\r\n            activeMarker: null\r\n          });\r\n        }\r\n      };\r\n    displayMarkers = () => {\r\n        return this.props.jams.map(jam => {\r\n                return  <Marker key={jam._id} \r\n                    position={{\r\n                        lat: jam.location.lat,\r\n                        lng: jam.location.lng\r\n                    }} \r\n                    onMousedown={this.onMarkerClick}\r\n                    name={jam.title}\r\n                    currMembers={jam.usersGoing.length}\r\n                    capacity={jam.capacity}\r\n                    icon={{\r\n                        url: jamMarker,\r\n                        anchor: new this.props.google.maps.Point(32,32),\r\n                        scaledSize:  new this.props.google.maps.Size(50,50)\r\n                    }}\r\n                />\r\n            });\r\n    }\r\n      \r\n    //   centerMoved(mapProps, map) {\r\n    //       console.log(map.center.lat());\r\n          \r\n    //   }\r\n    _mapLoaded(mapProps, map) {\r\n        map.setOptions({\r\n           styles: mapStyle\r\n        })\r\n    }    \r\n\r\n    render() {\r\n        const { jams, loggedInUser } = this.props\r\n        const {userPos, selectedPlace, mapZoom, markers} = this.state\r\n        if (!selectedPlace || jams.length === 0) return <h2>Loading...</h2>\r\n        console.log(userPos);\r\n        return (\r\n            <>\r\n            <section className=\"flex explore-container pos-relative\">\r\n                {/* <h1 className=\"jams-explore-title\">Jams In Current Area</h1> */}\r\n                {/* <JamScroll jams={this.props.jams} onJamClick={this.onJamClick}/> */}\r\n                <button onClick={()=>{\r\n                    const selectedPlaceCopy = {...selectedPlace}\r\n                    selectedPlaceCopy.position.lat = userPos.position.lat\r\n                    selectedPlaceCopy.position.lng = userPos.position.lng\r\n                    this.setState({selectedPlace: selectedPlaceCopy, mapZoom: 15})\r\n                    }}><GpsFixedIcon style={{fontSize: 40}}/></button>\r\n                <Map\r\n                    ref={this.mapRef}\r\n                    // containerStyle={containerStyle}\r\n                    google={this.props.google}\r\n                    zoom={mapZoom}\r\n                    style={mapStyles}\r\n                    // centerAroundCurrentLocation={true}\r\n                    initialCenter={{lat: selectedPlace.position.lat, lng: selectedPlace.position.lng}}\r\n                    center={{lat: selectedPlace.position.lat, lng: selectedPlace.position.lng}}\r\n                    onReady={(mapProps, map) => this._mapLoaded(mapProps, map)}\r\n                    disableDefaultUI= {true}\r\n                    // onBoundsChanged={this.centerMoved}\r\n                >\r\n                {markers}\r\n                {loggedInUser && <Marker\r\n                    name={'Your position'}\r\n                    position={userPos.position}\r\n                    icon={{\r\n                    url: loggedInUser.imgUrl,\r\n                    anchor: new this.props.google.maps.Point(32,32),\r\n                    scaledSize:  new this.props.google.maps.Size(50,50)\r\n                    }}\r\n                    />}\r\n                <InfoWindow\r\n                marker={this.state.activeMarker}\r\n                visible={this.state.showingInfoWindow}\r\n                onClose={this.onClose}\r\n              >\r\n                <div>\r\n                    <h2>{this.state.selectedPlace.name}</h2>\r\n                    <h3>Capacity: {this.state.selectedPlace.currMembers} / {this.state.selectedPlace.capacity}</h3>\r\n                </div>\r\n                </InfoWindow>\r\n            </Map>\r\n            <div className=\"jams-explore-container\">\r\n                <div className=\"jams-explore-filter flex column\">\r\n                    <h1>Filter Jams</h1>\r\n                    <div className=\"filter-inputs\">\r\n                        <input type=\"text\" name=\"name\" id=\"\"/>\r\n                        <select name=\"filterByInst\">\r\n                            <option value=\"\">By Instrument Missing</option>\r\n                            <option value=\"\">Singer</option>\r\n                            <option value=\"\">Guitar</option>\r\n                            <option value=\"\">Drums</option>\r\n                            <option value=\"\">Bass</option>\r\n                            <option value=\"\">Keyboard</option>\r\n                        </select>\r\n                        <select name=\"filterByRegion\">\r\n                            <option value=\"\">By Region</option>\r\n                            <option value=\"\">North</option>\r\n                            <option value=\"\">Center</option>\r\n                            <option value=\"\">South</option>\r\n                        </select>\r\n                    </div>\r\n                </div>\r\n                <ul className=\"jams-explore-list\">\r\n                    {jams.map((jam) => (\r\n                        <JamPreview key={jam._id} jam={jam} onJamClick={this.onJamClick}/>\r\n                    ))}\r\n                </ul>\r\n            </div>\r\n            {/* <JamList jams={jams} onJamClick={this.onJamClick}/> */}\r\n            </section>\r\n            </>\r\n        );\r\n    }\r\n}\r\n\r\nconst mapStateToProps = (state) => {\r\n    return {\r\n        jams: state.jamModule.jams,\r\n        users: state.userModule.users,\r\n        loggedInUser: state.userModule.loggedInUser \r\n    };\r\n};\r\nconst mapDispatchToProps = {\r\n    loadJams,\r\n    loadUsers,\r\n};\r\n\r\nexport const JamExplore = GoogleApiWrapper({\r\n    apiKey: \"AIzaSyBTd-r9ES9me88-mTQasKgom191cNMihjY\",\r\n})(connect(mapStateToProps, mapDispatchToProps)(_JamExplore));\r\n","C:\\Users\\moreh\\OneDrive\\שולחן העבודה\\Sprint 4\\jammit\\frontend\\src\\pages\\JamCreate.jsx",[],"C:\\Users\\moreh\\OneDrive\\שולחן העבודה\\Sprint 4\\jammit\\frontend\\src\\cmps\\Header.jsx",["176","177"],"import React, { Component } from 'react'\r\nimport { withRouter, NavLink, Link } from 'react-router-dom'\r\nimport { connect } from 'react-redux'\r\nimport { logout } from '../store/actions/userActions.js'\r\n\r\nclass _Header extends Component {\r\n\r\n    // onAvatarClick = (userId)=> {\r\n    //     this.props.history.push(`user/${userId}`)\r\n    //   }\r\n\r\n    render() {\r\n        const {loggedInUser} = this.props;\r\n        console.log(loggedInUser,'logdinuser')\r\n        return <header>\r\n            \r\n            <div className=\"logo fs40\">\r\n                <NavLink to=\"/\">\r\n                    Jameet\r\n                    <span className=\"fs20\"> people&music</span>\r\n                </NavLink>\r\n            </div>\r\n            \r\n            <div className=\"flex nav-right-side white\">\r\n                {/* {loggedInUser ? <div className=\"user-greet flex align-center white\">\r\n                    <Link to={`user/${loggedInUser._id}`}><h2>Welcome {loggedInUser.fullname.split(' ')[0]}</h2></Link>\r\n                    <span onClick={()=>this.props.logout()}>Sign out</span></div>\r\n                    : <div className=\"user-greet flex align-center\">Welcome Guest</div>} */}\r\n                <nav className=\"fs24\">\r\n                    <NavLink to=\"/search\">Jams</NavLink>\r\n                    <NavLink to=\"/members\">Members</NavLink>\r\n                {loggedInUser ? <div className=\"loggedin-avatar flex fs12\">\r\n                <img src={loggedInUser.imgUrl} className=\"cursor-pointer\" onClick={()=>this.props.history.push(`/user/${loggedInUser._id}`)}/>\r\n                    {/* <Link to={`user/${loggedInUser._id}`}></Link> */}\r\n                    {/* <span onClick={()=>this.props.logout()}>Sign out</span> */}\r\n                    </div>\r\n                    : <div className=\"user-greet flex align-center\">Hi Guest</div>}\r\n                  {/* { loggedInUser ? <span className=\"cursor-pointer\" onClick={()=>this.props.logout()}>Sign out</span> :<NavLink to=\"/login\">Login</NavLink> } */}\r\n                </nav>\r\n            </div>\r\n            \r\n        </header>\r\n    }\r\n\r\n}\r\nconst mapStateToProps = state => {\r\n    return {\r\n        loggedInUser: state.userModule.loggedInUser\r\n    }\r\n}\r\nconst mapDispatchToProps = {\r\n    logout\r\n}\r\n\r\n\r\nexport const Header = withRouter(connect(mapStateToProps, mapDispatchToProps)(_Header))","C:\\Users\\moreh\\OneDrive\\שולחן העבודה\\Sprint 4\\jammit\\frontend\\src\\store\\reducers\\index.js",[],"C:\\Users\\moreh\\OneDrive\\שולחן העבודה\\Sprint 4\\jammit\\frontend\\src\\cmps\\UserList.jsx",[],"C:\\Users\\moreh\\OneDrive\\שולחן העבודה\\Sprint 4\\jammit\\frontend\\src\\cmps\\JamScroll.jsx",[],"C:\\Users\\moreh\\OneDrive\\שולחן העבודה\\Sprint 4\\jammit\\frontend\\src\\store\\actions\\userActions.js",[],"C:\\Users\\moreh\\OneDrive\\שולחן העבודה\\Sprint 4\\jammit\\frontend\\src\\services\\authService.js",[],"C:\\Users\\moreh\\OneDrive\\שולחן העבודה\\Sprint 4\\jammit\\frontend\\src\\store\\actions\\jamActions.js",[],"C:\\Users\\moreh\\OneDrive\\שולחן העבודה\\Sprint 4\\jammit\\frontend\\src\\cmps\\JamList.jsx",[],"C:\\Users\\moreh\\OneDrive\\שולחן העבודה\\Sprint 4\\jammit\\frontend\\src\\cmps\\JamPreview.jsx",["178","179"],"import jamThumb from \"../assets/img/jam-thumb.jpg\"\r\nimport LocationOnIcon from '@material-ui/icons/LocationOn';\r\nimport EventIcon from '@material-ui/icons/Event';\r\nimport {instIcons} from '../assets/img/inst-icons/icons.js'\r\n\r\n\r\nexport function JamPreview({ jam, onJamClick }) {\r\n\r\n    function showIcons (){\r\n        return instIcons.map(icon=>{\r\n            const user = jam.usersGoing.find(user => {\r\n                return user.playing.some(inst=>{\r\n                    const instName = Object.keys(icon)[0]\r\n                    return instName === inst\r\n                })\r\n            })\r\n            if (user) return <img className=\"inst-icon\" src={Object.values(icon)[0]} alt=\"instrument\"/>\r\n        })\r\n    }\r\n\r\n    const slotsLeft = jam.capacity - jam.usersGoing.length\r\n    \r\n    return (\r\n        <li className=\"jam-card flex column\" onClick={()=>onJamClick(jam._id)}>\r\n            <div className=\"thumb flex column pos-relative\">\r\n                <img className=\"jam-card thumb\" src={jamThumb} className=\"jamThumb\" alt=\"jam-thumbnail\"/>\r\n                <div className=\"inst-icons-wrapper\">\r\n                    {showIcons()}\r\n                </div>\r\n            </div>\r\n            <div className=\"jam-card-content flex column\" >\r\n                <h2>{jam.title}</h2>\r\n            \r\n            <ul className=\"jam-card-tags flex\">{jam.tags.map((tag, idx) => {\r\n                return <li key={idx}>{tag}</li> })}\r\n            </ul>\r\n            \r\n                <div><p><LocationOnIcon/>{jam.location.city}</p></div>\r\n                <div className=\"date-slots\">\r\n                    <div className=\"date\">\r\n                        <EventIcon/>\r\n                        {new Date(jam.startsAt).toLocaleString('he-IL',{month: '2-digit', day: '2-digit', hour: '2-digit', minute:'2-digit'})}\r\n                    </div>\r\n                    {slotsLeft < 10 ? <span className=\"red\">\r\n                        {slotsLeft} Slots Left\r\n                    </span>: <span className=\"green\">Open</span> }\r\n                </div>\r\n                \r\n            </div>\r\n        </li>\r\n    );\r\n}","C:\\Users\\moreh\\OneDrive\\שולחן העבודה\\Sprint 4\\jammit\\frontend\\src\\services\\userService.js",[],"C:\\Users\\moreh\\OneDrive\\שולחן העבודה\\Sprint 4\\jammit\\frontend\\src\\cmps\\UserPreview.jsx",["180","181","182"],"import { useHistory } from \"react-router-dom\";\r\nimport LocationOnIcon from '@material-ui/icons/LocationOn';\r\nimport {instIcons} from '../assets/img/inst-icons/icons.js'\r\n\r\nexport function UserPreview({ user }) {\r\n\r\n    function showIcons() {\r\n        return instIcons.map(icon=>{\r\n            const talent = user.talents.find(talent=>{\r\n                return (talent === Object.keys(icon)[0])\r\n            })\r\n            if (talent) return <img className=\"user-inst-icon\" src={Object.values(icon)[0]} alt=\"instrument\"/>\r\n        })\r\n    }\r\n\r\n    const history = useHistory()\r\n    return (\r\n        <li className=\"user-card flex column\" onClick={()=>history.push(`/user/${user._id}`)}>\r\n            <div className=\"thumb flex column pos-relative\">\r\n                <div className=\"img-wrapper flex justify-center\">\r\n                    <img className=\"user-card thumb\" src={user.imgUrl} className=\"userThumb\" alt=\"user-thumbnail\"/>\r\n                    <div className=\"inst-icons-wrapper\">\r\n                        {showIcons()}\r\n                    </div>\r\n                </div>\r\n            </div>\r\n            <h2>{user.username}</h2>\r\n            <div className=\"flex\">\r\n                <div className=\"user-card-content flex column\">\r\n                    \r\n                    <ul className=\"user-card-tags flex\">{user.tags.map((tag, idx) => {\r\n                        if (idx < 3) return <li key={idx}>{tag}</li> })}\r\n                    </ul>\r\n                    <p><LocationOnIcon/>{user.location.city}</p>\r\n                </div>\r\n            </div>\r\n        </li>\r\n    );\r\n}","C:\\Users\\moreh\\OneDrive\\שולחן העבודה\\Sprint 4\\jammit\\frontend\\src\\services\\utilService.js",[],"C:\\Users\\moreh\\OneDrive\\שולחן העבודה\\Sprint 4\\jammit\\frontend\\src\\services\\jamService.js",[],"C:\\Users\\moreh\\OneDrive\\שולחן העבודה\\Sprint 4\\jammit\\frontend\\src\\store\\reducers\\userReducer.js",[],"C:\\Users\\moreh\\OneDrive\\שולחן העבודה\\Sprint 4\\jammit\\frontend\\src\\store\\reducers\\reviewReducer.js",[],"C:\\Users\\moreh\\OneDrive\\שולחן העבודה\\Sprint 4\\jammit\\frontend\\src\\store\\reducers\\systemReducer.js",[],"C:\\Users\\moreh\\OneDrive\\שולחן העבודה\\Sprint 4\\jammit\\frontend\\src\\store\\reducers\\jamReducer.js",[],"C:\\Users\\moreh\\OneDrive\\שולחן העבודה\\Sprint 4\\jammit\\frontend\\src\\assets\\img\\inst-icons\\icons.js",[],"C:\\Users\\moreh\\OneDrive\\שולחן העבודה\\Sprint 4\\jammit\\frontend\\src\\cmps\\MapContainer.jsx",[],"C:\\Users\\moreh\\OneDrive\\שולחן העבודה\\Sprint 4\\jammit\\frontend\\src\\cmps\\JamUserPreview.jsx",[],"C:\\Users\\moreh\\OneDrive\\שולחן העבודה\\Sprint 4\\jammit\\frontend\\src\\cmps\\JamGoingModal.jsx",[],"C:\\Users\\moreh\\OneDrive\\שולחן העבודה\\Sprint 4\\jammit\\frontend\\src\\cmps\\JamDetailsNavbar.jsx",[],"C:\\Users\\moreh\\OneDrive\\שולחן העבודה\\Sprint 4\\jammit\\frontend\\src\\cmps\\JamCreateForm.jsx",[],"C:\\Users\\moreh\\OneDrive\\שולחן העבודה\\Sprint 4\\jammit\\frontend\\src\\services\\httpService.js",[],"C:\\Users\\moreh\\OneDrive\\שולחן העבודה\\Sprint 4\\jammit\\frontend\\src\\cmps\\HeroSection.jsx",[],"C:\\Users\\moreh\\OneDrive\\שולחן העבודה\\Sprint 4\\jammit\\frontend\\src\\cmps\\MainNav.jsx",["183"],"C:\\Users\\moreh\\OneDrive\\שולחן העבודה\\Sprint 4\\jammit\\frontend\\src\\services\\mainNavService.js",[],{"ruleId":"184","replacedBy":"185"},{"ruleId":"186","replacedBy":"187"},{"ruleId":"188","severity":1,"message":"189","line":7,"column":10,"nodeType":"190","messageId":"191","endLine":7,"endColumn":16},{"ruleId":"192","severity":1,"message":"193","line":27,"column":38,"nodeType":"194","messageId":"195","endLine":27,"endColumn":40},{"ruleId":"188","severity":1,"message":"196","line":9,"column":10,"nodeType":"190","messageId":"191","endLine":9,"endColumn":20},{"ruleId":"197","severity":1,"message":"198","line":59,"column":17,"nodeType":"199","endLine":59,"endColumn":42},{"ruleId":"197","severity":1,"message":"198","line":106,"column":24,"nodeType":"199","endLine":106,"endColumn":91},{"ruleId":"188","severity":1,"message":"200","line":6,"column":8,"nodeType":"190","messageId":"191","endLine":6,"endColumn":16},{"ruleId":"188","severity":1,"message":"201","line":7,"column":10,"nodeType":"190","messageId":"191","endLine":7,"endColumn":19},{"ruleId":"188","severity":1,"message":"202","line":8,"column":10,"nodeType":"190","messageId":"191","endLine":8,"endColumn":17},{"ruleId":"188","severity":1,"message":"203","line":2,"column":31,"nodeType":"190","messageId":"191","endLine":2,"endColumn":35},{"ruleId":"197","severity":1,"message":"198","line":33,"column":17,"nodeType":"199","endLine":33,"endColumn":143},{"ruleId":"192","severity":1,"message":"204","line":10,"column":34,"nodeType":"194","messageId":"195","endLine":10,"endColumn":36},{"ruleId":"205","severity":1,"message":"206","line":26,"column":64,"nodeType":"207","endLine":26,"endColumn":84},{"ruleId":"192","severity":1,"message":"204","line":8,"column":34,"nodeType":"194","messageId":"195","endLine":8,"endColumn":36},{"ruleId":"205","severity":1,"message":"206","line":21,"column":72,"nodeType":"207","endLine":21,"endColumn":93},{"ruleId":"192","severity":1,"message":"204","line":31,"column":83,"nodeType":"194","messageId":"195","endLine":31,"endColumn":85},{"ruleId":"197","severity":1,"message":"198","line":24,"column":17,"nodeType":"199","endLine":24,"endColumn":143},"no-native-reassign",["208"],"no-negated-in-lhs",["209"],"no-unused-vars","'Header' is defined but never used.","Identifier","unusedVar","array-callback-return","Array.prototype.filter() expects a value to be returned at the end of arrow function.","ArrowFunctionExpression","expectedAtEnd","'JamPreview' is defined but never used.","jsx-a11y/alt-text","img elements must have an alt prop, either with meaningful text, or an empty string for decorative images.","JSXOpeningElement","'jamThumb' is defined but never used.","'JamScroll' is defined but never used.","'JamList' is defined but never used.","'Link' is defined but never used.","Array.prototype.map() expects a value to be returned at the end of arrow function.","react/jsx-no-duplicate-props","No duplicate props allowed","JSXAttribute","no-global-assign","no-unsafe-negation"]