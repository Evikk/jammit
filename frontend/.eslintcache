[{"C:\\Users\\moreh\\OneDrive\\שולחן העבודה\\Sprint 4\\jammit\\frontend\\src\\index.js":"1","C:\\Users\\moreh\\OneDrive\\שולחן העבודה\\Sprint 4\\jammit\\frontend\\src\\serviceWorkerRegistration.js":"2","C:\\Users\\moreh\\OneDrive\\שולחן העבודה\\Sprint 4\\jammit\\frontend\\src\\reportWebVitals.js":"3","C:\\Users\\moreh\\OneDrive\\שולחן העבודה\\Sprint 4\\jammit\\frontend\\src\\store\\store.js":"4","C:\\Users\\moreh\\OneDrive\\שולחן העבודה\\Sprint 4\\jammit\\frontend\\src\\App.jsx":"5","C:\\Users\\moreh\\OneDrive\\שולחן העבודה\\Sprint 4\\jammit\\frontend\\src\\pages\\Home.jsx":"6","C:\\Users\\moreh\\OneDrive\\שולחן העבודה\\Sprint 4\\jammit\\frontend\\src\\pages\\UserProfile.jsx":"7","C:\\Users\\moreh\\OneDrive\\שולחן העבודה\\Sprint 4\\jammit\\frontend\\src\\pages\\LoginSignup.jsx":"8","C:\\Users\\moreh\\OneDrive\\שולחן העבודה\\Sprint 4\\jammit\\frontend\\src\\pages\\MembersList.jsx":"9","C:\\Users\\moreh\\OneDrive\\שולחן העבודה\\Sprint 4\\jammit\\frontend\\src\\pages\\JamDetails.jsx":"10","C:\\Users\\moreh\\OneDrive\\שולחן העבודה\\Sprint 4\\jammit\\frontend\\src\\pages\\JamExplore.jsx":"11","C:\\Users\\moreh\\OneDrive\\שולחן העבודה\\Sprint 4\\jammit\\frontend\\src\\pages\\JamCreate.jsx":"12","C:\\Users\\moreh\\OneDrive\\שולחן העבודה\\Sprint 4\\jammit\\frontend\\src\\cmps\\Header.jsx":"13","C:\\Users\\moreh\\OneDrive\\שולחן העבודה\\Sprint 4\\jammit\\frontend\\src\\store\\reducers\\index.js":"14","C:\\Users\\moreh\\OneDrive\\שולחן העבודה\\Sprint 4\\jammit\\frontend\\src\\cmps\\UserList.jsx":"15","C:\\Users\\moreh\\OneDrive\\שולחן העבודה\\Sprint 4\\jammit\\frontend\\src\\cmps\\JamScroll.jsx":"16","C:\\Users\\moreh\\OneDrive\\שולחן העבודה\\Sprint 4\\jammit\\frontend\\src\\store\\actions\\userActions.js":"17","C:\\Users\\moreh\\OneDrive\\שולחן העבודה\\Sprint 4\\jammit\\frontend\\src\\services\\authService.js":"18","C:\\Users\\moreh\\OneDrive\\שולחן העבודה\\Sprint 4\\jammit\\frontend\\src\\store\\actions\\jamActions.js":"19","C:\\Users\\moreh\\OneDrive\\שולחן העבודה\\Sprint 4\\jammit\\frontend\\src\\cmps\\JamList.jsx":"20","C:\\Users\\moreh\\OneDrive\\שולחן העבודה\\Sprint 4\\jammit\\frontend\\src\\cmps\\JamPreview.jsx":"21","C:\\Users\\moreh\\OneDrive\\שולחן העבודה\\Sprint 4\\jammit\\frontend\\src\\services\\userService.js":"22","C:\\Users\\moreh\\OneDrive\\שולחן העבודה\\Sprint 4\\jammit\\frontend\\src\\cmps\\UserPreview.jsx":"23","C:\\Users\\moreh\\OneDrive\\שולחן העבודה\\Sprint 4\\jammit\\frontend\\src\\services\\utilService.js":"24","C:\\Users\\moreh\\OneDrive\\שולחן העבודה\\Sprint 4\\jammit\\frontend\\src\\services\\jamService.js":"25","C:\\Users\\moreh\\OneDrive\\שולחן העבודה\\Sprint 4\\jammit\\frontend\\src\\store\\reducers\\userReducer.js":"26","C:\\Users\\moreh\\OneDrive\\שולחן העבודה\\Sprint 4\\jammit\\frontend\\src\\store\\reducers\\reviewReducer.js":"27","C:\\Users\\moreh\\OneDrive\\שולחן העבודה\\Sprint 4\\jammit\\frontend\\src\\store\\reducers\\systemReducer.js":"28","C:\\Users\\moreh\\OneDrive\\שולחן העבודה\\Sprint 4\\jammit\\frontend\\src\\store\\reducers\\jamReducer.js":"29","C:\\Users\\moreh\\OneDrive\\שולחן העבודה\\Sprint 4\\jammit\\frontend\\src\\assets\\img\\inst-icons\\icons.js":"30","C:\\Users\\moreh\\OneDrive\\שולחן העבודה\\Sprint 4\\jammit\\frontend\\src\\cmps\\MapContainer.jsx":"31","C:\\Users\\moreh\\OneDrive\\שולחן העבודה\\Sprint 4\\jammit\\frontend\\src\\cmps\\JamUserPreview.jsx":"32","C:\\Users\\moreh\\OneDrive\\שולחן העבודה\\Sprint 4\\jammit\\frontend\\src\\cmps\\JamGoingModal.jsx":"33","C:\\Users\\moreh\\OneDrive\\שולחן העבודה\\Sprint 4\\jammit\\frontend\\src\\cmps\\JamDetailsNavbar.jsx":"34","C:\\Users\\moreh\\OneDrive\\שולחן העבודה\\Sprint 4\\jammit\\frontend\\src\\cmps\\JamCreateForm.jsx":"35","C:\\Users\\moreh\\OneDrive\\שולחן העבודה\\Sprint 4\\jammit\\frontend\\src\\services\\httpService.js":"36","C:\\Users\\moreh\\OneDrive\\שולחן העבודה\\Sprint 4\\jammit\\frontend\\src\\cmps\\HeroSection.jsx":"37","C:\\Users\\moreh\\OneDrive\\שולחן העבודה\\Sprint 4\\jammit\\frontend\\src\\cmps\\MainNav.jsx":"38","C:\\Users\\moreh\\OneDrive\\שולחן העבודה\\Sprint 4\\jammit\\frontend\\src\\services\\mainNavService.js":"39","C:\\Users\\moreh\\OneDrive\\שולחן העבודה\\Sprint 4\\jammit\\frontend\\src\\cmps\\LoginModal.jsx":"40","C:\\Users\\moreh\\OneDrive\\שולחן העבודה\\Sprint 4\\jammit\\frontend\\src\\cmps\\UserProfile\\UserInfo.jsx":"41","C:\\Users\\moreh\\OneDrive\\שולחן העבודה\\Sprint 4\\jammit\\frontend\\src\\cmps\\UserProfile\\UserTalents.jsx":"42","C:\\Users\\moreh\\OneDrive\\שולחן העבודה\\Sprint 4\\jammit\\frontend\\src\\pages\\UserSection.jsx":"43","C:\\Users\\moreh\\OneDrive\\שולחן העבודה\\Sprint 4\\jammit\\frontend\\src\\cmps\\InviteModal.jsx":"44","C:\\Users\\moreh\\OneDrive\\שולחן העבודה\\Sprint 4\\jammit\\frontend\\src\\cmps\\InviteFriends.jsx":"45","C:\\Users\\moreh\\OneDrive\\שולחן העבודה\\Sprint 4\\jammit\\frontend\\src\\cmps\\LoaderSpinner.jsx":"46","C:\\Users\\moreh\\OneDrive\\שולחן העבודה\\Sprint 4\\jammit\\frontend\\src\\cmps\\StaticMap.jsx":"47","C:\\Users\\moreh\\OneDrive\\שולחן העבודה\\Sprint 4\\jammit\\frontend\\src\\pages\\JamsList.jsx":"48","C:\\Users\\moreh\\OneDrive\\שולחן העבודה\\Sprint 4\\jammit\\frontend\\src\\cmps\\JamChat.jsx":"49","C:\\Users\\moreh\\OneDrive\\שולחן העבודה\\Sprint 4\\jammit\\frontend\\src\\services\\socketService.js":"50"},{"size":935,"mtime":1610550371936,"results":"51","hashOfConfig":"52"},{"size":5201,"mtime":1610550371942,"results":"53","hashOfConfig":"52"},{"size":377,"mtime":1610550371940,"results":"54","hashOfConfig":"52"},{"size":323,"mtime":1610550371960,"results":"55","hashOfConfig":"52"},{"size":1420,"mtime":1611229457085,"results":"56","hashOfConfig":"52"},{"size":3209,"mtime":1611329761020,"results":"57","hashOfConfig":"52"},{"size":3031,"mtime":1611225510989,"results":"58","hashOfConfig":"52"},{"size":4878,"mtime":1610979314998,"results":"59","hashOfConfig":"52"},{"size":3949,"mtime":1611329761023,"results":"60","hashOfConfig":"52"},{"size":8354,"mtime":1611329761038,"results":"61","hashOfConfig":"52"},{"size":13295,"mtime":1611329761034,"results":"62","hashOfConfig":"52"},{"size":1790,"mtime":1610890606431,"results":"63","hashOfConfig":"52"},{"size":2326,"mtime":1610956368351,"results":"64","hashOfConfig":"52"},{"size":396,"mtime":1610550371955,"results":"65","hashOfConfig":"52"},{"size":278,"mtime":1610808500930,"results":"66","hashOfConfig":"52"},{"size":1398,"mtime":1611244064042,"results":"67","hashOfConfig":"52"},{"size":1628,"mtime":1611182734684,"results":"68","hashOfConfig":"52"},{"size":1596,"mtime":1610612281805,"results":"69","hashOfConfig":"52"},{"size":1544,"mtime":1611310760673,"results":"70","hashOfConfig":"52"},{"size":268,"mtime":1611085963156,"results":"71","hashOfConfig":"52"},{"size":2488,"mtime":1611310760668,"results":"72","hashOfConfig":"52"},{"size":2017,"mtime":1611182734678,"results":"73","hashOfConfig":"52"},{"size":1550,"mtime":1611310760669,"results":"74","hashOfConfig":"52"},{"size":1052,"mtime":1610660112295,"results":"75","hashOfConfig":"52"},{"size":1656,"mtime":1611310760672,"results":"76","hashOfConfig":"52"},{"size":849,"mtime":1611182734690,"results":"77","hashOfConfig":"52"},{"size":669,"mtime":1610550371957,"results":"78","hashOfConfig":"52"},{"size":322,"mtime":1610550371958,"results":"79","hashOfConfig":"52"},{"size":1066,"mtime":1611229457189,"results":"80","hashOfConfig":"52"},{"size":349,"mtime":1610756332721,"results":"81","hashOfConfig":"52"},{"size":1047,"mtime":1610999702021,"results":"82","hashOfConfig":"52"},{"size":654,"mtime":1611310760669,"results":"83","hashOfConfig":"52"},{"size":2945,"mtime":1611146111404,"results":"84","hashOfConfig":"52"},{"size":2649,"mtime":1611310760667,"results":"85","hashOfConfig":"52"},{"size":5249,"mtime":1611130795384,"results":"86","hashOfConfig":"52"},{"size":1081,"mtime":1610550371944,"results":"87","hashOfConfig":"52"},{"size":1437,"mtime":1611244064037,"results":"88","hashOfConfig":"52"},{"size":1893,"mtime":1611182734653,"results":"89","hashOfConfig":"52"},{"size":1592,"mtime":1611256702735,"results":"90","hashOfConfig":"52"},{"size":1683,"mtime":1611173192026,"results":"91","hashOfConfig":"52"},{"size":1850,"mtime":1611219681888,"results":"92","hashOfConfig":"52"},{"size":1027,"mtime":1611226564209,"results":"93","hashOfConfig":"52"},{"size":4637,"mtime":1611168372794,"results":"94","hashOfConfig":"52"},{"size":3750,"mtime":1611270104969,"results":"95","hashOfConfig":"52"},{"size":1530,"mtime":1611268458154,"results":"96","hashOfConfig":"52"},{"size":502,"mtime":1611085963158,"results":"97","hashOfConfig":"52"},{"size":467,"mtime":1611318266803,"results":"98","hashOfConfig":"52"},{"size":4613,"mtime":1611329761021,"results":"99","hashOfConfig":"52"},{"size":2016,"mtime":1611329761019,"results":"100","hashOfConfig":"52"},{"size":1628,"mtime":1610550371948,"results":"101","hashOfConfig":"52"},{"filePath":"102","messages":"103","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"104"},"14pi29",{"filePath":"105","messages":"106","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"104"},{"filePath":"107","messages":"108","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"104"},{"filePath":"109","messages":"110","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"104"},{"filePath":"111","messages":"112","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"104"},{"filePath":"113","messages":"114","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"115","usedDeprecatedRules":"104"},{"filePath":"116","messages":"117","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"118","usedDeprecatedRules":"104"},{"filePath":"119","messages":"120","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"104"},{"filePath":"121","messages":"122","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"104"},{"filePath":"123","messages":"124","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"125","messages":"126","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"127","usedDeprecatedRules":"104"},{"filePath":"128","messages":"129","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"104"},{"filePath":"130","messages":"131","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"132","usedDeprecatedRules":"133"},{"filePath":"134","messages":"135","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"104"},{"filePath":"136","messages":"137","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"104"},{"filePath":"138","messages":"139","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"104"},{"filePath":"140","messages":"141","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"104"},{"filePath":"142","messages":"143","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"104"},{"filePath":"144","messages":"145","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"146","messages":"147","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"104"},{"filePath":"148","messages":"149","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"150","usedDeprecatedRules":"104"},{"filePath":"151","messages":"152","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"104"},{"filePath":"153","messages":"154","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"155","usedDeprecatedRules":"104"},{"filePath":"156","messages":"157","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"104"},{"filePath":"158","messages":"159","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"160","usedDeprecatedRules":"104"},{"filePath":"161","messages":"162","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"104"},{"filePath":"163","messages":"164","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"104"},{"filePath":"165","messages":"166","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"104"},{"filePath":"167","messages":"168","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"104"},{"filePath":"169","messages":"170","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"104"},{"filePath":"171","messages":"172","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"173"},{"filePath":"174","messages":"175","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"104"},{"filePath":"176","messages":"177","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"104"},{"filePath":"178","messages":"179","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"104"},{"filePath":"180","messages":"181","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"104"},{"filePath":"182","messages":"183","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"104"},{"filePath":"184","messages":"185","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"104"},{"filePath":"186","messages":"187","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"188","usedDeprecatedRules":"104"},{"filePath":"189","messages":"190","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"104"},{"filePath":"191","messages":"192","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"104"},{"filePath":"193","messages":"194","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"195","usedDeprecatedRules":"104"},{"filePath":"196","messages":"197","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"198","usedDeprecatedRules":"104"},{"filePath":"199","messages":"200","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"201","usedDeprecatedRules":"104"},{"filePath":"202","messages":"203","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"204","messages":"205","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"206","messages":"207","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"208"},{"filePath":"209","messages":"210","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"211","messages":"212","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"104"},{"filePath":"213","messages":"214","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"215","messages":"216","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"C:\\Users\\moreh\\OneDrive\\שולחן העבודה\\Sprint 4\\jammit\\frontend\\src\\index.js",[],["217","218"],"C:\\Users\\moreh\\OneDrive\\שולחן העבודה\\Sprint 4\\jammit\\frontend\\src\\serviceWorkerRegistration.js",[],"C:\\Users\\moreh\\OneDrive\\שולחן העבודה\\Sprint 4\\jammit\\frontend\\src\\reportWebVitals.js",[],"C:\\Users\\moreh\\OneDrive\\שולחן העבודה\\Sprint 4\\jammit\\frontend\\src\\store\\store.js",[],"C:\\Users\\moreh\\OneDrive\\שולחן העבודה\\Sprint 4\\jammit\\frontend\\src\\App.jsx",[],"C:\\Users\\moreh\\OneDrive\\שולחן העבודה\\Sprint 4\\jammit\\frontend\\src\\pages\\Home.jsx",["219"],"import React, { Component } from 'react'\r\nimport { connect } from 'react-redux'\r\nimport { loadJams } from '../store/actions/jamActions.js'\r\nimport { loadUsers } from '../store/actions/userActions.js'\r\nimport { UserList } from '../cmps/UserList.jsx'\r\nimport { JamScroll } from '../cmps/JamScroll.jsx'\r\nimport { HeroSection } from '../cmps/HeroSection.jsx'\r\nimport Loader from 'react-loader-spinner'\r\nimport { Link } from 'react-router-dom'\r\nimport { JamList } from '../cmps/JamList.jsx'\r\n\r\nclass _Home extends Component {\r\n  state = {}\r\n\r\n  componentDidMount() {\r\n    this.props.loadJams()\r\n    this.props.loadUsers()\r\n  }\r\n\r\n  getUpcomingJams = ()=> {\r\n    return this.props.jams.filter(jam => {\r\n      const weekFromNow = new Date().getTime()+86400000*7\r\n      return jam.startsAt > Date.now() && jam.startsAt < weekFromNow\r\n    })\r\n  }\r\n  getPopularJams = () => {\r\n    return this.props.jams.filter(jam => {\r\n      const slotsLeft = jam.capacity - jam.usersGoing.length\r\n      return slotsLeft < 10\r\n    })\r\n  }\r\n\r\n  getFeaturedMembers = ()=> {\r\n    return this.props.users.slice(0,4)\r\n  }\r\n\r\n  render() {\r\n    const { jams, users } = this.props\r\n    if (jams.length === 0 || users.length === 0) \r\n      return  <div className=\"loader main-content pos-relative\">\r\n                <Loader type=\"Bars\" color=\"#00475F\" height={200} width={200} timeout={5000} />\r\n              </div>\r\n    return ( \r\n      <div className=\"home\">\r\n        <HeroSection/>\r\n        <main className=\"main-content zebra-container flex column space-between\">\r\n          <div className=\"jams section\">\r\n              <div className=\"title-row\">\r\n                <h1 className=\"staatliches\">Most Popular Jams</h1>\r\n                <Link to=\"/search\">See All</Link>\r\n              </div>\r\n              <JamScroll jams={this.getPopularJams()} />\r\n          </div>\r\n          <div className=\"jams section\">\r\n          <div className=\"title-row\">\r\n                <h1 className=\"staatliches\">Upcoming This Week</h1>\r\n                <Link to=\"/search\">See All</Link>\r\n              </div>\r\n              <JamScroll jams={this.getUpcomingJams()} />\r\n          </div>\r\n          {/* <div className=\"jams section\">\r\n              <h1>Jams</h1>\r\n              <JamList jams={jams} />\r\n          </div> */}\r\n\r\n          <div className=\"members-container section\">\r\n            <div className=\"members-list-preview\">\r\n            <div className=\"title-row\">\r\n              <h1 className=\"staatliches\">Featured Members</h1>\r\n              <UserList users={this.getFeaturedMembers()}/>\r\n            </div>\r\n            </div>\r\n          </div>\r\n        </main>\r\n      </div>\r\n    )\r\n  }\r\n}\r\n\r\nconst mapStateToProps = state => {\r\n  return {\r\n    jams: state.jamModule.jams,\r\n    users: state.userModule.users,\r\n    loggedInUser: state.userModule.loggedInUser\r\n  }\r\n}\r\nconst mapDispatchToProps = {\r\n  loadJams,\r\n  loadUsers,\r\n}\r\n\r\nexport const Home = connect(mapStateToProps, mapDispatchToProps)(_Home)\r\n","C:\\Users\\moreh\\OneDrive\\שולחן העבודה\\Sprint 4\\jammit\\frontend\\src\\pages\\UserProfile.jsx",["220","221"],"import React, { Component } from 'react'\r\nimport { connect } from 'react-redux'\r\nimport { userService } from '../services/userService'\r\nimport { loadUsers } from '../store/actions/userActions'\r\nimport { loadJams } from '../store/actions/jamActions'\r\nimport { JamScroll } from '../cmps/JamScroll'\r\nimport { UserInfo } from '../cmps/UserProfile/UserInfo'\r\nimport { UserTalents } from '../cmps/UserProfile/UserTalents'\r\nimport Loader from 'react-loader-spinner'\r\nimport { JamList } from \"../cmps/JamList\";\r\nimport { UserList } from \"../cmps/UserList\";\r\n\r\n\r\nclass _UserProfile extends Component {\r\n\r\n  state = {\r\n    user: null,\r\n    currUser: false,\r\n    followToggle: false,\r\n    userJams: []\r\n  }\r\n\r\n  onFollowIconClick = () => {\r\n    this.setState({ followToggle: !this.state.followToggle })\r\n  }\r\n\r\n  async componentDidMount() {\r\n    const user = await userService.getById(this.props.match.params.id)\r\n    this.setState({ user })\r\n    this.props.loadJams()\r\n  }\r\n\r\n  getUserJams = () => {\r\n    return this.props.jams.filter(jam => {\r\n      return jam.usersGoing.find(userGoing => {\r\n        return userGoing._id === this.state.user._id\r\n      })\r\n    })\r\n  }\r\n\r\n\r\n\r\n  render() {\r\n    const { user, followToggle } = this.state;\r\n    const { jams } = this.props;\r\n    if (jams.length === 0 || !user) {\r\n      return <div className=\"loader main-content pos-relative\">\r\n        <Loader type=\"Bars\" color=\"#00475F\" height={200} width={200} timeout={5000} />\r\n      </div>\r\n    }\r\n    return (\r\n      // <main className=\"main-content\">\r\n      //   <section className=\"user-box flex\">\r\n      //     <UserInfo \r\n      //       user={user} \r\n      //       followToggle={followToggle} \r\n      //       onFollowIconClick={this.onFollowIconClick}\r\n      //     />\r\n      //     <UserTalents user={user}/>\r\n      //    </section>\r\n      //   {this.getUserJams().length > 0 && <div className=\"jams section\">\r\n      //         <h1>Jams Attending</h1>\r\n      //         <JamScroll jams={this.getUserJams()}/>\r\n      //   </div>}\r\n      // </main>\r\n      <main className=\"main-content user-section flex\">\r\n        <section className=\"right-side user-details-aside flex column\">\r\n            <UserInfo user={user}\r\n              followToggle={followToggle}\r\n              onFollowIconClick={this.onFollowIconClick} />\r\n            <UserTalents user={user} />\r\n        </section>\r\n        <section className=\"left-side jam-attending-section\">\r\n                     {this.getUserJams().length > 0 && <div className=\"jams  section attending-list\">\r\n              <h1>Jams Attending</h1>\r\n              <JamScroll jams={this.getUserJams()} />\r\n            </div>}\r\n       \r\n        </section>\r\n      </main >\r\n    )\r\n  }\r\n}\r\n\r\nconst mapStateToProps = state => {\r\n  return {\r\n    jams: state.jamModule.jams,\r\n    users: state.userModule.users,\r\n    // loggedInUser: state.userModule.loggedInUser\r\n  }\r\n}\r\nconst mapDispatchToProps = {\r\n  loadJams,\r\n  loadUsers,\r\n}\r\n\r\nexport const UserProfile = connect(mapStateToProps, mapDispatchToProps)(_UserProfile)","C:\\Users\\moreh\\OneDrive\\שולחן העבודה\\Sprint 4\\jammit\\frontend\\src\\pages\\LoginSignup.jsx",[],"C:\\Users\\moreh\\OneDrive\\שולחן העבודה\\Sprint 4\\jammit\\frontend\\src\\pages\\MembersList.jsx",[],"C:\\Users\\moreh\\OneDrive\\שולחן העבודה\\Sprint 4\\jammit\\frontend\\src\\pages\\JamDetails.jsx",["222","223"],"C:\\Users\\moreh\\OneDrive\\שולחן העבודה\\Sprint 4\\jammit\\frontend\\src\\pages\\JamExplore.jsx",["224","225","226"],"import React, { Component } from \"react\";\r\nimport { Map, GoogleApiWrapper, Marker, InfoWindow } from \"google-maps-react\";\r\nimport { connect } from \"react-redux\";\r\nimport { loadJams, updateJamGoing } from \"../store/actions/jamActions.js\";\r\nimport { loadUsers } from \"../store/actions/userActions.js\";\r\nimport { JamPreview } from \"../cmps/JamPreview.jsx\";\r\nimport jamMarker from \"../assets/img/green-marker.png\"\r\nimport GpsFixedIcon from '@material-ui/icons/GpsFixed';\r\nimport Loader from \"react-loader-spinner\";\r\nimport PeopleAltRoundedIcon from '@material-ui/icons/PeopleAltRounded';\r\nimport EmojiPeopleRoundedIcon from '@material-ui/icons/EmojiPeopleRounded';\r\nimport RoomRoundedIcon from '@material-ui/icons/RoomRounded';\r\nimport AccessTimeRoundedIcon from '@material-ui/icons/AccessTimeRounded';\r\nimport HourglassEmptyRoundedIcon from '@material-ui/icons/HourglassEmptyRounded';\r\nimport { Link } from \"react-router-dom\"\r\nimport RoomOutlinedIcon from '@material-ui/icons/RoomOutlined';\r\n\r\nimport { JamNavbar } from '../cmps/JamDetailsNavbar';\r\n\r\nconst shape = {\r\n    coords: [1, 1, 1, 20, 18, 20, 18, 1],\r\n    type: \"poly\",\r\n  };\r\n\r\nconst mapStyles = {\r\n    width: \"100%\",\r\n    height: \"100%\",\r\n};\r\n\r\n// const containerStyle = {\r\n//     position: 'static',  \r\n//     width: '100%',\r\n//     height: '100%'\r\n// }\r\n\r\nconst mapStyle = [\r\n    {\r\n        featureType: 'landscape.man_made',\r\n        elementType: 'geometry.fill',\r\n        stylers: [\r\n            {\r\n                color: '#dceafa'\r\n            }\r\n        ]\r\n    },\r\n    {\r\n        elementType: \"labels.text\",\r\n        stylers: [\r\n            {\r\n                visibility: \"off\"\r\n            }\r\n        ]\r\n    },\r\n    {\r\n        featureType: \"road.highway\",\r\n        elementType: \"labels\",\r\n        stylers: [\r\n            {\r\n                visibility: \"on\"\r\n            }\r\n        ]\r\n    },\r\n    {\r\n        featureType: \"road.arterial\",\r\n        elementType: \"labels.text\",\r\n        stylers: [\r\n            {\r\n                visibility: \"on\"\r\n            }\r\n        ]\r\n    },\r\n    {\r\n        featureType: \"road.local\",\r\n        elementType: \"labels.text\",\r\n        stylers: [\r\n            {\r\n                visibility: \"on\"\r\n            }\r\n        ]\r\n    },\r\n]\r\nclass _JamExplore extends Component {\r\n    state = {\r\n        markers: null,\r\n        userPos: null,\r\n        mapZoom: 14,\r\n        showingInfoWindow: false, // Hides or shows the InfoWindow\r\n        activeMarker: {}, // Shows the active marker upon click\r\n        selectedPlace: null, // Shows the InfoWindow to the selected place upon a marker\r\n        isPopupShow: false,\r\n        selectedJam: null\r\n    };\r\n\r\n    mapRef = React.createRef();\r\n    componentDidMount() {\r\n        this.props.loadJams()\r\n        navigator.geolocation.getCurrentPosition(pos => {\r\n            const userPos = { position: { lat: null, lng: null } }\r\n            userPos.position.lat = pos.coords.latitude\r\n            userPos.position.lng = pos.coords.longitude\r\n            this.setState({ selectedPlace: userPos, userPos: userPos })\r\n            return pos.coords\r\n        })\r\n        this.setState({ markers: this.displayMarkers() })\r\n    }\r\n\r\n   \r\n \r\n    timeFormatter = () => {\r\n        return <p>\r\n            <span>{new Intl.DateTimeFormat('il', { month: 'short' }).format(new Date(this.state.selectedJam.startsAt))}</span>\r\n            <span>{new Date(this.state.selectedJam.startsAt).toLocaleString('he-IL', { day: '2-digit', hour: '2-digit', minute: '2-digit' })}</span>\r\n        </p>\r\n    }\r\n\r\n    onMarkerClick = (props, marker) => {\r\n        this.setState({\r\n            activeMarker: marker,\r\n            showingInfoWindow: true,\r\n            selectedPlace: props,\r\n            mapZoom: 17\r\n        });\r\n        this.setState({ isPopupShow: true, selectedJam: props.jam })\r\n    }\r\n\r\n    componentDidUpdate(prevProps) {\r\n        if (this.props.jams !== prevProps.jams) {\r\n            this.setState({ markers: this.displayMarkers() });\r\n            if (this.state.activeMarker && this.state.activeMarker.position) {\r\n                this.setState({ selectedJam : this.props.jams.filter( (jam) => jam._id === this.state.activeMarker.jam._id )[0]});\r\n                /*this.setState({\r\n                    activeMarker: {...this.state.activeMarker , jam: this.props.jams.filter( (jam) => jam._id === this.state.activeMarker.jam._id )[0]}\r\n                });*/\r\n               \r\n            }\r\n          \r\n        }\r\n    }\r\n\r\n    onJamCenter = (jamId) => {\r\n        const marker = this.state.markers.find(marker => {\r\n            return marker.key === jamId\r\n        })\r\n        const props = marker.props\r\n        this.setState({\r\n            selectedPlace: props,\r\n            mapZoom: 17\r\n        });\r\n    }\r\n\r\n    onClose = props => {\r\n        if (this.state.showingInfoWindow) {\r\n            this.setState({\r\n                showingInfoWindow: false,\r\n                activeMarker: null\r\n            });\r\n        }\r\n    };\r\n    displayMarkers = () => {\r\n        return this.props.jams.map(jam => {\r\n            return <Marker key={jam._id}\r\n                position={{\r\n                    lat: jam.location.lat,\r\n                    lng: jam.location.lng\r\n                }}\r\n                onMousedown={this.onMarkerClick}\r\n                jam={jam}\r\n                title={jam.title}\r\n                imgUrl={jam.imgUrl}\r\n                currMembers={jam.usersGoing.length}\r\n                capacity={jam.capacity}\r\n                icon={{\r\n                    url: jamMarker,\r\n                    anchor: new this.props.google.maps.Point(32, 32),\r\n                    scaledSize: new this.props.google.maps.Size(50, 50)\r\n                }}\r\n            />\r\n        });\r\n    }\r\n\r\n    //   centerMoved(mapProps, map) {\r\n    //       console.log(map.center.lat());\r\n\r\n    //   }\r\n    _mapLoaded(mapProps, map) {\r\n        map.setOptions({\r\n            styles: mapStyle\r\n        })\r\n    }\r\n\r\n    render() {\r\n        const { jams, loggedInUser } = this.props\r\n        const { userPos, selectedPlace, mapZoom, markers, isPopupShow } = this.state\r\n        const jam = this.state.selectedJam\r\n        if (!selectedPlace || jams.length === 0) {\r\n            return <div className=\"loader main-content pos-relative\">\r\n                <Loader type=\"Bars\" color=\"#00475F\" height={200} width={200} timeout={5000} />\r\n            </div>\r\n        }\r\n        return (\r\n            <>\r\n                <section className=\"flex explore-container pos-relative\">\r\n                    <button className=\"center-map-btn\" onClick={() => {\r\n                        const selectedPlaceCopy = { ...selectedPlace }\r\n                        selectedPlaceCopy.position.lat = userPos.position.lat\r\n                        selectedPlaceCopy.position.lng = userPos.position.lng\r\n                        this.setState({ selectedPlace: selectedPlaceCopy, mapZoom: 15 })\r\n                    }}><GpsFixedIcon style={{ fontSize: 40 }} /></button>\r\n                    <Map\r\n                        ref={this.mapRef}\r\n                        // containerStyle={containerStyle}\r\n                        google={this.props.google}\r\n                        zoom={mapZoom}\r\n                        style={mapStyles}\r\n                        // centerAroundCurrentLocation={true}\r\n                        initialCenter={{ lat: selectedPlace.position.lat, lng: selectedPlace.position.lng }}\r\n                        center={{ lat: selectedPlace.position.lat, lng: selectedPlace.position.lng }}\r\n                        onReady={(mapProps, map) => this._mapLoaded(mapProps, map)}\r\n                        disableDefaultUI={true}\r\n                    // onBoundsChanged={this.centerMoved}\r\n                    >\r\n                        {markers}\r\n                        {loggedInUser && <Marker\r\n                            name={'Your position'}\r\n                            position={userPos.position}\r\n                            icon={{\r\n                                url: loggedInUser.imgUrl,\r\n                                // anchor: new this.props.google.maps.Point(32, 32),\r\n                                scaledSize: new this.props.google.maps.Size(50, 50),\r\n                                origin: new this.props.google.maps.Point(0, 0),\r\n                                anchor: new this.props.google.maps.Point(17, 34),\r\n                            }}\r\n                        />}\r\n                        <InfoWindow\r\n                            marker={this.state.activeMarker}\r\n                            visible={this.state.showingInfoWindow}\r\n                            onClose={this.onClose}\r\n                        >\r\n                            <div>\r\n                                <h2>{this.state.selectedPlace.title}</h2>\r\n                                <h3>Capacity: {this.state.selectedPlace.currMembers} / {this.state.selectedPlace.capacity}</h3>\r\n                            </div>\r\n                        </InfoWindow>\r\n                    </Map>\r\n                    {isPopupShow &&\r\n                        <div className=\"jam-popup\">\r\n                            <div className=\"details-con\">\r\n                                <div className=\"map-thumb-wrapper\" onClick={() => this.props.history.push(`jam/${jam._id}`)}>\r\n                                    <img src={jam.imgUrl} alt=\"jam-thumbnail\" />\r\n                                </div>\r\n                                <JamNavbar\r\n                                history={this.props.history}\r\n                                user={this.props.loggedInUser}\r\n                                jam={jam}\r\n                                updateJamGoing={this.props.updateJamGoing}\r\n                                isUserAdmin={false}\r\n                                showBasicActionsOnly={true}\r\n                            />\r\n                                <h3 className=\"title-style\">Details</h3>\r\n                                <p><span className=\"icon-style\"><HourglassEmptyRoundedIcon /></span><span className=\"details-style\">{jam.capacity - jam.usersGoing.length} Slots Available</span></p>\r\n                                <p><span className=\"icon-style\"><PeopleAltRoundedIcon /></span> <span className=\"details-style\">{jam.usersGoing.length} People going</span></p>\r\n                                <p><span className=\"icon-style\"><EmojiPeopleRoundedIcon /></span> <span className=\"details-style\">Created by <Link to={\"/user/\" + jam.createdBy._id} > {jam.createdBy.fullname}</Link></span></p>\r\n                                <p><span className=\"icon-style\"><RoomOutlinedIcon /></span> <span className=\"details-style\">{jam.location.address}, {jam.location.city}</span></p>\r\n                                <p><span className=\"icon-style\"><AccessTimeRoundedIcon /></span> <span className=\"details-style\">{this.timeFormatter()}</span></p>\r\n                                <div className=\"description-con\">\r\n                                    <h3 className=\"title-style\">Description</h3>\r\n                                    <p>{jam.description}</p>\r\n                                </div>\r\n                                <ul className=\"jam-card-tags flex\">{jam.tags.map((tag, idx) => {\r\n                                    return <li key={idx}>{tag}</li>\r\n                                })}\r\n                                </ul>\r\n                            </div>\r\n                        </div>\r\n                    }\r\n                </section>\r\n            </>\r\n        );\r\n    }\r\n}\r\n\r\nconst mapStateToProps = (state) => {\r\n    return {\r\n        jams: state.jamModule.jams,\r\n        users: state.userModule.users,\r\n        loggedInUser: state.userModule.loggedInUser\r\n    };\r\n};\r\nconst mapDispatchToProps = {\r\n    loadJams,\r\n    loadUsers,\r\n    updateJamGoing\r\n};\r\n\r\nexport const JamExplore = GoogleApiWrapper({\r\n    apiKey: \"AIzaSyBTd-r9ES9me88-mTQasKgom191cNMihjY\",\r\n})(connect(mapStateToProps, mapDispatchToProps)(_JamExplore));\r\n\r\n{/* <div className=\"jams-explore-container\">\r\n                <div className=\"jams-explore-filter flex column\">\r\n                    <h1>Filter Jams</h1>\r\n                    <div className=\"filter-inputs\">\r\n                        <input type=\"text\" name=\"name\" id=\"\"/>\r\n                        <select name=\"filterByInst\">\r\n                            <option value=\"\">By Instrument Missing</option>\r\n                            <option value=\"\">Singer</option>\r\n                            <option value=\"\">Guitar</option>\r\n                            <option value=\"\">Drums</option>\r\n                            <option value=\"\">Bass</option>\r\n                            <option value=\"\">Keyboard</option>\r\n                        </select>\r\n                        <select name=\"filterByRegion\">\r\n                            <option value=\"\">By Region</option>\r\n                            <option value=\"\">North</option>\r\n                            <option value=\"\">Center</option>\r\n                            <option value=\"\">South</option>\r\n                        </select>\r\n                    </div>\r\n                </div>\r\n                <ul className=\"jams-explore-list\">\r\n                    {jams.map((jam) => (\r\n                        <JamPreview key={jam._id} jam={jam}/>\r\n                    ))}\r\n                </ul>\r\n            </div> */}","C:\\Users\\moreh\\OneDrive\\שולחן העבודה\\Sprint 4\\jammit\\frontend\\src\\pages\\JamCreate.jsx",[],"C:\\Users\\moreh\\OneDrive\\שולחן העבודה\\Sprint 4\\jammit\\frontend\\src\\cmps\\Header.jsx",["227","228"],"import React, { Component } from 'react'\r\nimport { withRouter, NavLink, Link } from 'react-router-dom'\r\nimport { connect } from 'react-redux'\r\nimport { logout } from '../store/actions/userActions.js'\r\n\r\nclass _Header extends Component {\r\n\r\n    // onAvatarClick = (userId)=> {\r\n    //     this.props.history.push(`user/${userId}`)\r\n    //   }\r\n\r\n    render() {\r\n        const {loggedInUser} = this.props;\r\n        console.log(loggedInUser,'logdinuser')\r\n        return <header>\r\n            \r\n            <div className=\"logo fs40\">\r\n                <NavLink to=\"/\">\r\n                    Jameet\r\n                    <span className=\"fs20\"> people&music</span>\r\n                </NavLink>\r\n            </div>\r\n            \r\n            <div className=\"flex nav-right-side white\">\r\n                {/* {loggedInUser ? <div className=\"user-greet flex align-center white\">\r\n                    <Link to={`user/${loggedInUser._id}`}><h2>Welcome {loggedInUser.fullname.split(' ')[0]}</h2></Link>\r\n                    <span onClick={()=>this.props.logout()}>Sign out</span></div>\r\n                    : <div className=\"user-greet flex align-center\">Welcome Guest</div>} */}\r\n                <nav className=\"fs24\">\r\n                    <NavLink to=\"/search\">Jams</NavLink>\r\n                    <NavLink to=\"/members\">Members</NavLink>\r\n                {loggedInUser ? <div className=\"loggedin-avatar flex fs12\">\r\n                <img src={loggedInUser.imgUrl} className=\"cursor-pointer\" onClick={()=>this.props.history.push(`/user/${loggedInUser._id}`)}/>\r\n                    {/* <Link to={`user/${loggedInUser._id}`}></Link> */}\r\n                    {/* <span onClick={()=>this.props.logout()}>Sign out</span> */}\r\n                    </div>\r\n                    : <div className=\"user-greet flex align-center\">Hi Guest</div>}\r\n                  {/* { loggedInUser ? <span className=\"cursor-pointer\" onClick={()=>this.props.logout()}>Sign out</span> :<NavLink to=\"/login\">Login</NavLink> } */}\r\n                </nav>\r\n            </div>\r\n            \r\n        </header>\r\n    }\r\n\r\n}\r\nconst mapStateToProps = state => {\r\n    return {\r\n        loggedInUser: state.userModule.loggedInUser\r\n    }\r\n}\r\nconst mapDispatchToProps = {\r\n    logout\r\n}\r\n\r\n\r\nexport const Header = withRouter(connect(mapStateToProps, mapDispatchToProps)(_Header))",["229","230"],"C:\\Users\\moreh\\OneDrive\\שולחן העבודה\\Sprint 4\\jammit\\frontend\\src\\store\\reducers\\index.js",[],"C:\\Users\\moreh\\OneDrive\\שולחן העבודה\\Sprint 4\\jammit\\frontend\\src\\cmps\\UserList.jsx",[],"C:\\Users\\moreh\\OneDrive\\שולחן העבודה\\Sprint 4\\jammit\\frontend\\src\\cmps\\JamScroll.jsx",[],"C:\\Users\\moreh\\OneDrive\\שולחן העבודה\\Sprint 4\\jammit\\frontend\\src\\store\\actions\\userActions.js",[],"C:\\Users\\moreh\\OneDrive\\שולחן העבודה\\Sprint 4\\jammit\\frontend\\src\\services\\authService.js",[],"C:\\Users\\moreh\\OneDrive\\שולחן העבודה\\Sprint 4\\jammit\\frontend\\src\\store\\actions\\jamActions.js",[],"C:\\Users\\moreh\\OneDrive\\שולחן העבודה\\Sprint 4\\jammit\\frontend\\src\\cmps\\JamList.jsx",[],"C:\\Users\\moreh\\OneDrive\\שולחן העבודה\\Sprint 4\\jammit\\frontend\\src\\cmps\\JamPreview.jsx",["231"],"import LocationOnIcon from '@material-ui/icons/LocationOn';\r\nimport {instIcons} from '../assets/img/inst-icons/icons.js'\r\nimport { Link } from \"react-router-dom\";\r\nimport LocationOnOutlinedIcon from '@material-ui/icons/LocationOnOutlined';\r\nexport function JamPreview({ jam }) {\r\n\r\n    function showIcons (){\r\n\r\n        return instIcons.map(icon=>{\r\n            const user = jam.usersGoing.find(user => {\r\n                console.log(jam, user.playing);\r\n                return user.playing.some(inst=>{\r\n                    const instName = Object.keys(icon)[0]\r\n                    return instName === inst\r\n                })\r\n            })\r\n            if (user) return <img className=\"inst-icon\" src={Object.values(icon)[0]} alt=\"instrument\"/>\r\n        })\r\n    }\r\n    const slotsLeft = jam.capacity - jam.usersGoing.length\r\n    \r\n    return (\r\n        <Link to={`/jam/${jam._id}`}><li className=\"jam-card flex column\">\r\n            <div className=\"thumb-wrapper flex column pos-relative\">\r\n                <img className=\"jam-thumb\" src={jam.imgUrl} alt=\"jam-thumbnail\"/>\r\n                <div className=\"inst-icons-wrapper\">\r\n                    {showIcons()}\r\n                </div>\r\n            </div>\r\n            <h2>{jam.title}</h2>\r\n            <div className=\"jam-card-content flex\">\r\n                <div className=\"date-wrapper\">\r\n                    <div className=\"date-month\">\r\n                        {new Intl.DateTimeFormat('il', { month: 'short' }).format(new Date(jam.startsAt))}\r\n                    </div>\r\n                    <div className=\"date-day\">\r\n                        \r\n                        {new Date(jam.startsAt).toLocaleString('he-IL',{day: '2-digit'})}\r\n                    </div>\r\n                </div>\r\n                <div className=\"jam-details-wrapper\">         \r\n                    <ul className=\"jam-card-tags flex\">{jam.tags.map((tag, idx) => {\r\n                        return <li key={idx}>{tag}</li> })}\r\n                    </ul>\r\n                    <div className=\"going-wrapper flex\">\r\n                        <div>\r\n                            <p><LocationOnOutlinedIcon style={{ fontSize: 15 }}/>{jam.location.city}</p>\r\n                        </div>\r\n                        <span className={slotsLeft < 5 ? 'red' : 'green'}>\r\n                                {jam.usersGoing.length}/{jam.capacity} Slots Free\r\n                        </span>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        </li></Link> \r\n    );\r\n}","C:\\Users\\moreh\\OneDrive\\שולחן העבודה\\Sprint 4\\jammit\\frontend\\src\\services\\userService.js",[],"C:\\Users\\moreh\\OneDrive\\שולחן העבודה\\Sprint 4\\jammit\\frontend\\src\\cmps\\UserPreview.jsx",["232","233","234"],"import { useHistory } from \"react-router-dom\";\r\nimport LocationOnIcon from '@material-ui/icons/LocationOn';\r\nimport {instIcons} from '../assets/img/inst-icons/icons.js'\r\n\r\nexport function UserPreview({ user }) {\r\n\r\n    function showIcons() {\r\n        return instIcons.map(icon=>{\r\n            const talent = user.talents.find(talent=>{\r\n                return (talent === Object.keys(icon)[0])\r\n            })\r\n            if (talent) return <img className=\"user-inst-icon\" src={Object.values(icon)[0]} alt=\"instrument\"/>\r\n        })\r\n    }\r\n\r\n    const history = useHistory()\r\n    return (\r\n        <li className=\"user-card flex column\" onClick={()=>history.push(`/user/${user._id}`)}>\r\n            <div className=\"thumb flex column pos-relative\">\r\n                <div className=\"img-wrapper flex justify-center\">\r\n                    <img className=\"user-card thumb\" src={user.imgUrl} className=\"userThumb\" alt=\"user-thumbnail\"/>\r\n                    <div className=\"inst-icons-wrapper\">\r\n                        {showIcons()}\r\n                    </div>\r\n                </div>\r\n            </div>\r\n            <div className=\"user-card-content flex column\">\r\n                <h2>{user.username}</h2>\r\n                <ul className=\"user-card-tags flex\">{user.tags.map((tag, idx) => {\r\n                    if (idx < 3) return <li key={idx}>{tag}</li> })}\r\n                </ul>\r\n                <p><LocationOnIcon/>{user.location.city}</p>\r\n            </div>\r\n        </li>\r\n    );\r\n}","C:\\Users\\moreh\\OneDrive\\שולחן העבודה\\Sprint 4\\jammit\\frontend\\src\\services\\utilService.js",[],"C:\\Users\\moreh\\OneDrive\\שולחן העבודה\\Sprint 4\\jammit\\frontend\\src\\services\\jamService.js",["235"],"import { httpService } from './httpService'\r\n// import { storageService } from './asyncStorageService'\r\nimport userService from './userService'\r\n// import { utilService } from './utilService'\r\n// import { userService } from './userService'\r\n\r\nexport const jamService = {\r\n    query,\r\n    getById,\r\n    updateJamGoing,\r\n    save\r\n}\r\n\r\nfunction query() {\r\n    // var queryStr = (!filterBy) ? '' : `?name=${filterBy.name}&sort=${sortBy}`\r\n    return httpService.get(`jam`)\r\n    // return jams;\r\n}\r\n\r\nfunction save(jam) {\r\n    return httpService.post(`jam`, jam)\r\n}\r\n\r\nfunction getById(jamId) {\r\n    // return jams.find(jam => jam._id === jamId)\r\n    // return storageService.get('jam', jamId)\r\n    return httpService.get(`jam/${jamId}`)\r\n}\r\n\r\n\r\nfunction updateJamGoing(jamId, user, isGoing) {\r\n    //UPDATE THE SERVER USER IS NOT GOING\r\n    // jams.find(jam => jam._id === jamId).usersGoing.push(user);\r\n     return httpService.put(`jam/${jamId}/isGoing`, {user:  {_id: user._id, fullname: user.fullname, imgUrl: user.imgUrl, playing: user.playing} , isGoing: isGoing})\r\n  \r\n}\r\n\r\n\r\n\r\n\r\n\r\n\r\n","C:\\Users\\moreh\\OneDrive\\שולחן העבודה\\Sprint 4\\jammit\\frontend\\src\\store\\reducers\\userReducer.js",[],"C:\\Users\\moreh\\OneDrive\\שולחן העבודה\\Sprint 4\\jammit\\frontend\\src\\store\\reducers\\reviewReducer.js",[],"C:\\Users\\moreh\\OneDrive\\שולחן העבודה\\Sprint 4\\jammit\\frontend\\src\\store\\reducers\\systemReducer.js",[],"C:\\Users\\moreh\\OneDrive\\שולחן העבודה\\Sprint 4\\jammit\\frontend\\src\\store\\reducers\\jamReducer.js",[],"C:\\Users\\moreh\\OneDrive\\שולחן העבודה\\Sprint 4\\jammit\\frontend\\src\\assets\\img\\inst-icons\\icons.js",[],"C:\\Users\\moreh\\OneDrive\\שולחן העבודה\\Sprint 4\\jammit\\frontend\\src\\cmps\\MapContainer.jsx",[],["236","237"],"C:\\Users\\moreh\\OneDrive\\שולחן העבודה\\Sprint 4\\jammit\\frontend\\src\\cmps\\JamUserPreview.jsx",[],"C:\\Users\\moreh\\OneDrive\\שולחן העבודה\\Sprint 4\\jammit\\frontend\\src\\cmps\\JamGoingModal.jsx",[],"C:\\Users\\moreh\\OneDrive\\שולחן העבודה\\Sprint 4\\jammit\\frontend\\src\\cmps\\JamDetailsNavbar.jsx",[],"C:\\Users\\moreh\\OneDrive\\שולחן העבודה\\Sprint 4\\jammit\\frontend\\src\\cmps\\JamCreateForm.jsx",[],"C:\\Users\\moreh\\OneDrive\\שולחן העבודה\\Sprint 4\\jammit\\frontend\\src\\services\\httpService.js",[],"C:\\Users\\moreh\\OneDrive\\שולחן העבודה\\Sprint 4\\jammit\\frontend\\src\\cmps\\HeroSection.jsx",[],"C:\\Users\\moreh\\OneDrive\\שולחן העבודה\\Sprint 4\\jammit\\frontend\\src\\cmps\\MainNav.jsx",["238"],"import { withRouter, NavLink } from 'react-router-dom'\r\nimport { connect } from 'react-redux'\r\nimport { logout } from '../store/actions/userActions.js'\r\nimport React, { Component } from 'react'\r\nimport { mainNavService } from '../services/mainNavService.js'\r\n\r\nclass _MainNav extends Component {\r\n\r\n\r\n    componentDidMount() {\r\n        console.log(this.props.location.pathname, 'componentDidMount');\r\n        console.log(this.props ,'props componentDidMount');\r\n        mainNavService.setHomePageNavStyle()\r\n    }\r\n\r\n    componentDidUpdate() {\r\n        // let {locationPathName }= this.props.location.pathname\r\n        if( this.props.location.pathname !== '/'){\r\n            console.log(this.props.location.pathname, 'otherpathname');\r\n            mainNavService.setNavStyle()\r\n        }else{\r\n            console.log(this.props.location.pathname, 'homepagepathname');\r\n            console.log(this.props.location, 'homepagepathname');\r\n            mainNavService.setHomePageNavStyle()\r\n        }\r\n    }\r\n\r\n    render() {\r\n        const { loggedInUser } = this.props;\r\n        return (\r\n            <nav className=\"navbar\">\r\n                <div className=\"logo fs30\">\r\n                    <NavLink to=\"/\">Jameet<span className=\"fs20\"> people&music</span></NavLink>\r\n                </div>\r\n                <div>\r\n                    <NavLink to=\"/search\" className=\"jams-nav-link\">Jams</NavLink>\r\n                    <NavLink to=\"/members\" className=\"members-nav-link\">Members</NavLink>\r\n                    {loggedInUser && <div className=\"loggedin-avatar flex fs12\">\r\n                        <img src={loggedInUser.imgUrl} className=\"cursor-pointer\" onClick={() => this.props.history.push(`/user/${loggedInUser._id}`)} />\r\n                    </div>\r\n                    }\r\n                </div>\r\n            </nav>\r\n        )\r\n    }\r\n}\r\nconst mapStateToProps = state => {\r\n    return {\r\n        loggedInUser: state.userModule.loggedInUser\r\n    }\r\n}\r\nconst mapDispatchToProps = {\r\n    logout\r\n}\r\n\r\n\r\nexport const MainNav = withRouter(connect(mapStateToProps, mapDispatchToProps)(_MainNav))\r\n","C:\\Users\\moreh\\OneDrive\\שולחן העבודה\\Sprint 4\\jammit\\frontend\\src\\services\\mainNavService.js",[],"C:\\Users\\moreh\\OneDrive\\שולחן העבודה\\Sprint 4\\jammit\\frontend\\src\\cmps\\LoginModal.jsx",[],"C:\\Users\\moreh\\OneDrive\\שולחן העבודה\\Sprint 4\\jammit\\frontend\\src\\cmps\\UserProfile\\UserInfo.jsx",["239","240","241"],"import ChatRoundedIcon from '@material-ui/icons/ChatRounded';\r\nimport FavoriteBorderRoundedIcon from '@material-ui/icons/FavoriteBorderRounded';\r\nimport LocationOnOutlinedIcon from '@material-ui/icons/LocationOnOutlined';\r\nimport FavoriteRoundedIcon from '@material-ui/icons/FavoriteRounded';\r\nimport AddRoundedIcon from '@material-ui/icons/AddRounded';\r\nimport { useHistory } from 'react-router';\r\n\r\n\r\nexport function UserInfo({user, followToggle, onFollowIconClick, isUserAdmin}) {\r\n    const history = useHistory()\r\n    return (\r\n        <div className=\"user-left-box flex column\">\r\n            <div className=\"user-basic-info\">\r\n                <div className=\"user-img\">\r\n                    <img src={user.imgUrl} />\r\n                </div>\r\n                <div className=\"user-tags-name flex column\">\r\n                    <span className=\"user-stage-name fs30\">{user.username}</span>\r\n                    <div className=\"user-location\">\r\n                    <LocationOnOutlinedIcon style={{ fontSize: 15 }} className=\"location-icon\" />\r\n                    <span>{user.location.city}</span>\r\n                    </div>\r\n                    <ul className=\"user-tags flex\">{user.tags.map((tag, idx) => {\r\n                            return <li key={idx}>{tag}</li> })}\r\n                    </ul>\r\n                </div>\r\n            </div>\r\n            <div className=\"user-about\">\r\n                <span>{user.about}</span>\r\n            </div>\r\n            {!isUserAdmin && <div className=\"reaction-icon\">\r\n                <ChatRoundedIcon style={{fontSize: 40}}/>\r\n                {!followToggle ? <FavoriteBorderRoundedIcon style={{fontSize: 40}} onClick={()=>onFollowIconClick()}/>\r\n                : <FavoriteRoundedIcon style={{fontSize: 40}} onClick={()=>onFollowIconClick()}/>}  \r\n            </div>}\r\n        </div>\r\n        \r\n    )\r\n}","C:\\Users\\moreh\\OneDrive\\שולחן העבודה\\Sprint 4\\jammit\\frontend\\src\\cmps\\UserProfile\\UserTalents.jsx",["242","243"],"export function UserTalents({user}) {\r\n    return (\r\n        <div className=\"user-right-box flex column\">\r\n            <div className=\"top-card\">\r\n              <h1>Talents</h1>\r\n            <div className=\"user-talents \">\r\n              <ul className=\"flex  user-tags\">{user.talents.map((talent, idx) => {\r\n                return <li   key={idx}>{talent}</li>\r\n              })}</ul>\r\n            </div>\r\n            </div>\r\n               <div className=\"followers bottom-card\">\r\n                <h1>Followers</h1>\r\n              {user.followers.slice(0, 3).map((follower, idx) => {\r\n                return <img className=\"follower-avatar\" src={follower.imgUrl} key={idx} />\r\n              })}\r\n            </div> \r\n            <div className=\"following bottom-card\">\r\n                <h1>Following</h1>\r\n              {user.following.slice(0, 3).map((follow, idx) => {\r\n                return <img className=\"following-avatar\" src={follow.imgUrl} key={idx} />\r\n              })}\r\n            </div>\r\n        </div>\r\n    )\r\n}","C:\\Users\\moreh\\OneDrive\\שולחן העבודה\\Sprint 4\\jammit\\frontend\\src\\pages\\UserSection.jsx",["244","245"],"import React, { Component } from \"react\";\r\nimport { connect } from \"react-redux\";\r\nimport { loadUsers } from \"../store/actions/userActions\";\r\nimport { loadJams } from \"../store/actions/jamActions\";\r\nimport { UserInfo } from \"../cmps/UserProfile/UserInfo\";\r\nimport { UserTalents } from \"../cmps/UserProfile/UserTalents\";\r\nimport { JamList } from \"../cmps/JamList\";\r\nimport { UserList } from \"../cmps/UserList\";\r\nimport { JamCreate } from \"./JamCreate\";\r\nimport { JamScroll } from \"../cmps/JamScroll\";\r\n\r\nclass _UserSection extends Component {\r\n\r\n    state = {\r\n        activeTab : 'events'\r\n    }\r\n\r\n    componentDidMount() {\r\n        this.props.loadJams()\r\n        this.props.loadUsers()\r\n    }\r\n\r\n    onTabChoose = (tab)=> {\r\n        this.setState({activeTab: tab})\r\n    }\r\n\r\n    filterJamsByInst = () => {\r\n        return this.props.jams.filter((jam) => {\r\n            const user = jam.usersGoing.find((user) => {\r\n                return user.playing.some((inst) => {\r\n                    return inst === this.props.loggedInUser.talents[0];\r\n                });\r\n            });\r\n            if (!user) return jam;\r\n        });\r\n    };\r\n\r\n    filterMembersByFollow = () => {\r\n        return this.props.users.filter((user) => {\r\n            return user.followers.find(\r\n                (user) => user._id === this.props.loggedInUser._id\r\n            );\r\n        });\r\n    };\r\n\r\n    filterJamsByRegion = () => {\r\n        return this.props.jams.filter((jam) => {\r\n            return (\r\n                jam.location.region === this.props.loggedInUser.location.region\r\n            );\r\n        });\r\n    };\r\n\r\n    filterUserCreatedJams = () => {\r\n        return this.props.jams.filter(jam => jam.createdBy._id === this.props.loggedInUser._id)\r\n    }\r\n\r\n    render() {\r\n        const { jams, loggedInUser } = this.props\r\n        const { activeTab } = this.state\r\n        if (jams.length === 0 ) return <h2>loading...</h2>\r\n        return (\r\n            \r\n            <main className=\"main-content user-section flex\">\r\n                <div className=\"user-details-aside flex column\">\r\n                    <UserInfo user={loggedInUser} isUserAdmin={true} />\r\n                    <UserTalents user={loggedInUser} isUserAdmin={true} />\r\n                    <button onClick={()=>this.onTabChoose('create')}>Start A New Jam</button>\r\n                </div>\r\n                <div className=\"filtered-jams section\">\r\n                    <div className=\"user-section-toolbar\">\r\n                        <ul className=\"toolbar-left\">\r\n                            <li onClick={()=>this.onTabChoose('events')} className={activeTab === 'events' ? 'active' : ''}>Explore Jams</li>\r\n                            <li onClick={()=>this.onTabChoose('members')} className={activeTab === 'members' ? 'active' : ''}>Members</li>\r\n                            <li onClick={()=>this.onTabChoose('manage')} className={activeTab === 'manage' ? 'active' : ''}>Manage Your Jams</li>\r\n                        </ul>\r\n                        \r\n                        \r\n                    </div>\r\n                   {activeTab === 'events' && <div>\r\n                        <h1>Jams Without {loggedInUser.talents[0]}</h1>\r\n                        <JamList jams={this.filterJamsByInst()} />\r\n                        <h1>Jams Around {loggedInUser.location.region} Region</h1>\r\n                        <JamList jams={this.filterJamsByRegion()} />\r\n                    </div>}\r\n                    {activeTab === 'members' && <div>\r\n                        <h1>Members You Follow</h1>\r\n                        <UserList users={this.filterMembersByFollow()}/>\r\n                    </div>}\r\n                    {activeTab === 'manage' && this.filterUserCreatedJams().length > 0 && \r\n                        <div>\r\n                            <h1>Jams Dashboard</h1>\r\n                            <JamList users={this.this.filterUserCreatedJams()}/>\r\n                    </div>}\r\n                    {activeTab === 'manage' && <h1>You haven't created any jams yet... </h1>\r\n                    }\r\n                    {activeTab === 'create' &&\r\n                        <div>\r\n                            <JamCreate/>\r\n                        </div>\r\n                    }\r\n                </div>\r\n          </main>\r\n       )\r\n    }\r\n}\r\nconst mapStateToProps = (state) => {\r\n    return {\r\n        jams: state.jamModule.jams,\r\n        users: state.userModule.users,\r\n        loggedInUser: state.userModule.loggedInUser,\r\n    };\r\n};\r\nconst mapDispatchToProps = {\r\n    loadJams,\r\n    loadUsers,\r\n};\r\n\r\nexport const UserSection = connect(mapStateToProps, mapDispatchToProps)(_UserSection);","C:\\Users\\moreh\\OneDrive\\שולחן העבודה\\Sprint 4\\jammit\\frontend\\src\\cmps\\InviteModal.jsx",[],"C:\\Users\\moreh\\OneDrive\\שולחן העבודה\\Sprint 4\\jammit\\frontend\\src\\cmps\\InviteFriends.jsx",[],"C:\\Users\\moreh\\OneDrive\\שולחן העבודה\\Sprint 4\\jammit\\frontend\\src\\cmps\\LoaderSpinner.jsx",[],["246","247"],"C:\\Users\\moreh\\OneDrive\\שולחן העבודה\\Sprint 4\\jammit\\frontend\\src\\cmps\\StaticMap.jsx",["248"],"C:\\Users\\moreh\\OneDrive\\שולחן העבודה\\Sprint 4\\jammit\\frontend\\src\\pages\\JamsList.jsx",[],"C:\\Users\\moreh\\OneDrive\\שולחן העבודה\\Sprint 4\\jammit\\frontend\\src\\cmps\\JamChat.jsx",[],"C:\\Users\\moreh\\OneDrive\\שולחן העבודה\\Sprint 4\\jammit\\frontend\\src\\services\\socketService.js",[],{"ruleId":"249","replacedBy":"250"},{"ruleId":"251","replacedBy":"252"},{"ruleId":"253","severity":1,"message":"254","line":10,"column":10,"nodeType":"255","messageId":"256","endLine":10,"endColumn":17},{"ruleId":"253","severity":1,"message":"254","line":10,"column":10,"nodeType":"255","messageId":"256","endLine":10,"endColumn":17},{"ruleId":"253","severity":1,"message":"257","line":11,"column":10,"nodeType":"255","messageId":"256","endLine":11,"endColumn":18},{"ruleId":"253","severity":1,"message":"258","line":3,"column":8,"nodeType":"255","messageId":"256","endLine":3,"endColumn":23},{"ruleId":"253","severity":1,"message":"259","line":92,"column":34,"nodeType":"255","messageId":"256","endLine":92,"endColumn":45},{"ruleId":"253","severity":1,"message":"260","line":6,"column":10,"nodeType":"255","messageId":"256","endLine":6,"endColumn":20},{"ruleId":"253","severity":1,"message":"258","line":12,"column":8,"nodeType":"255","messageId":"256","endLine":12,"endColumn":23},{"ruleId":"261","severity":1,"message":"262","line":297,"column":1,"nodeType":"263","messageId":"264","endLine":323,"endColumn":23},{"ruleId":"253","severity":1,"message":"265","line":2,"column":31,"nodeType":"255","messageId":"256","endLine":2,"endColumn":35},{"ruleId":"266","severity":1,"message":"267","line":33,"column":17,"nodeType":"268","endLine":33,"endColumn":143},{"ruleId":"249","replacedBy":"269"},{"ruleId":"251","replacedBy":"270"},{"ruleId":"271","severity":1,"message":"272","line":9,"column":34,"nodeType":"273","messageId":"274","endLine":9,"endColumn":36},{"ruleId":"271","severity":1,"message":"272","line":8,"column":34,"nodeType":"273","messageId":"274","endLine":8,"endColumn":36},{"ruleId":"275","severity":1,"message":"276","line":21,"column":72,"nodeType":"277","endLine":21,"endColumn":93},{"ruleId":"271","severity":1,"message":"272","line":31,"column":83,"nodeType":"273","messageId":"274","endLine":31,"endColumn":85},{"ruleId":"253","severity":1,"message":"278","line":3,"column":8,"nodeType":"255","messageId":"256","endLine":3,"endColumn":19},{"ruleId":"249","replacedBy":"279"},{"ruleId":"251","replacedBy":"280"},{"ruleId":"266","severity":1,"message":"267","line":24,"column":17,"nodeType":"268","endLine":24,"endColumn":143},{"ruleId":"253","severity":1,"message":"281","line":5,"column":8,"nodeType":"255","messageId":"256","endLine":5,"endColumn":22},{"ruleId":"253","severity":1,"message":"282","line":10,"column":11,"nodeType":"255","messageId":"256","endLine":10,"endColumn":18},{"ruleId":"266","severity":1,"message":"267","line":15,"column":21,"nodeType":"268","endLine":15,"endColumn":46},{"ruleId":"266","severity":1,"message":"267","line":15,"column":24,"nodeType":"268","endLine":15,"endColumn":91},{"ruleId":"266","severity":1,"message":"267","line":21,"column":24,"nodeType":"268","endLine":21,"endColumn":90},{"ruleId":"253","severity":1,"message":"283","line":10,"column":10,"nodeType":"255","messageId":"256","endLine":10,"endColumn":19},{"ruleId":"271","severity":1,"message":"284","line":28,"column":45,"nodeType":"273","messageId":"274","endLine":28,"endColumn":47},{"ruleId":"249","replacedBy":"285"},{"ruleId":"251","replacedBy":"286"},{"ruleId":"266","severity":1,"message":"267","line":9,"column":17,"nodeType":"268","endLine":9,"endColumn":219},"no-native-reassign",["287"],"no-negated-in-lhs",["288"],"no-unused-vars","'JamList' is defined but never used.","Identifier","unusedVar","'UserList' is defined but never used.","'RoomRoundedIcon' is defined but never used.","'isUserAdmin' is assigned a value but never used.","'JamPreview' is defined but never used.","no-lone-blocks","Block is redundant.","BlockStatement","redundantBlock","'Link' is defined but never used.","jsx-a11y/alt-text","img elements must have an alt prop, either with meaningful text, or an empty string for decorative images.","JSXOpeningElement",["287"],["288"],"array-callback-return","Array.prototype.map() expects a value to be returned at the end of arrow function.","ArrowFunctionExpression","expectedAtEnd","react/jsx-no-duplicate-props","No duplicate props allowed","JSXAttribute","'userService' is defined but never used.",["287"],["288"],"'AddRoundedIcon' is defined but never used.","'history' is assigned a value but never used.","'JamScroll' is defined but never used.","Array.prototype.filter() expects a value to be returned at the end of arrow function.",["287"],["288"],"no-global-assign","no-unsafe-negation"]