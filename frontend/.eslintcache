[{"C:\\Users\\moreh\\OneDrive\\שולחן העבודה\\Sprint 4\\jammit\\frontend\\src\\index.js":"1","C:\\Users\\moreh\\OneDrive\\שולחן העבודה\\Sprint 4\\jammit\\frontend\\src\\serviceWorkerRegistration.js":"2","C:\\Users\\moreh\\OneDrive\\שולחן העבודה\\Sprint 4\\jammit\\frontend\\src\\reportWebVitals.js":"3","C:\\Users\\moreh\\OneDrive\\שולחן העבודה\\Sprint 4\\jammit\\frontend\\src\\store\\store.js":"4","C:\\Users\\moreh\\OneDrive\\שולחן העבודה\\Sprint 4\\jammit\\frontend\\src\\App.jsx":"5","C:\\Users\\moreh\\OneDrive\\שולחן העבודה\\Sprint 4\\jammit\\frontend\\src\\pages\\Home.jsx":"6","C:\\Users\\moreh\\OneDrive\\שולחן העבודה\\Sprint 4\\jammit\\frontend\\src\\pages\\UserProfile.jsx":"7","C:\\Users\\moreh\\OneDrive\\שולחן העבודה\\Sprint 4\\jammit\\frontend\\src\\pages\\LoginSignup.jsx":"8","C:\\Users\\moreh\\OneDrive\\שולחן העבודה\\Sprint 4\\jammit\\frontend\\src\\pages\\MembersList.jsx":"9","C:\\Users\\moreh\\OneDrive\\שולחן העבודה\\Sprint 4\\jammit\\frontend\\src\\pages\\JamDetails.jsx":"10","C:\\Users\\moreh\\OneDrive\\שולחן העבודה\\Sprint 4\\jammit\\frontend\\src\\pages\\JamExplore.jsx":"11","C:\\Users\\moreh\\OneDrive\\שולחן העבודה\\Sprint 4\\jammit\\frontend\\src\\pages\\JamCreate.jsx":"12","C:\\Users\\moreh\\OneDrive\\שולחן העבודה\\Sprint 4\\jammit\\frontend\\src\\cmps\\Header.jsx":"13","C:\\Users\\moreh\\OneDrive\\שולחן העבודה\\Sprint 4\\jammit\\frontend\\src\\store\\reducers\\index.js":"14","C:\\Users\\moreh\\OneDrive\\שולחן העבודה\\Sprint 4\\jammit\\frontend\\src\\cmps\\UserList.jsx":"15","C:\\Users\\moreh\\OneDrive\\שולחן העבודה\\Sprint 4\\jammit\\frontend\\src\\cmps\\JamScroll.jsx":"16","C:\\Users\\moreh\\OneDrive\\שולחן העבודה\\Sprint 4\\jammit\\frontend\\src\\store\\actions\\userActions.js":"17","C:\\Users\\moreh\\OneDrive\\שולחן העבודה\\Sprint 4\\jammit\\frontend\\src\\services\\authService.js":"18","C:\\Users\\moreh\\OneDrive\\שולחן העבודה\\Sprint 4\\jammit\\frontend\\src\\store\\actions\\jamActions.js":"19","C:\\Users\\moreh\\OneDrive\\שולחן העבודה\\Sprint 4\\jammit\\frontend\\src\\cmps\\JamList.jsx":"20","C:\\Users\\moreh\\OneDrive\\שולחן העבודה\\Sprint 4\\jammit\\frontend\\src\\cmps\\JamPreview.jsx":"21","C:\\Users\\moreh\\OneDrive\\שולחן העבודה\\Sprint 4\\jammit\\frontend\\src\\services\\userService.js":"22","C:\\Users\\moreh\\OneDrive\\שולחן העבודה\\Sprint 4\\jammit\\frontend\\src\\cmps\\UserPreview.jsx":"23","C:\\Users\\moreh\\OneDrive\\שולחן העבודה\\Sprint 4\\jammit\\frontend\\src\\services\\utilService.js":"24","C:\\Users\\moreh\\OneDrive\\שולחן העבודה\\Sprint 4\\jammit\\frontend\\src\\services\\jamService.js":"25","C:\\Users\\moreh\\OneDrive\\שולחן העבודה\\Sprint 4\\jammit\\frontend\\src\\store\\reducers\\userReducer.js":"26","C:\\Users\\moreh\\OneDrive\\שולחן העבודה\\Sprint 4\\jammit\\frontend\\src\\store\\reducers\\reviewReducer.js":"27","C:\\Users\\moreh\\OneDrive\\שולחן העבודה\\Sprint 4\\jammit\\frontend\\src\\store\\reducers\\systemReducer.js":"28","C:\\Users\\moreh\\OneDrive\\שולחן העבודה\\Sprint 4\\jammit\\frontend\\src\\store\\reducers\\jamReducer.js":"29","C:\\Users\\moreh\\OneDrive\\שולחן העבודה\\Sprint 4\\jammit\\frontend\\src\\assets\\img\\inst-icons\\icons.js":"30","C:\\Users\\moreh\\OneDrive\\שולחן העבודה\\Sprint 4\\jammit\\frontend\\src\\cmps\\MapContainer.jsx":"31","C:\\Users\\moreh\\OneDrive\\שולחן העבודה\\Sprint 4\\jammit\\frontend\\src\\cmps\\JamUserPreview.jsx":"32","C:\\Users\\moreh\\OneDrive\\שולחן העבודה\\Sprint 4\\jammit\\frontend\\src\\cmps\\JamGoingModal.jsx":"33","C:\\Users\\moreh\\OneDrive\\שולחן העבודה\\Sprint 4\\jammit\\frontend\\src\\cmps\\JamDetailsNavbar.jsx":"34","C:\\Users\\moreh\\OneDrive\\שולחן העבודה\\Sprint 4\\jammit\\frontend\\src\\cmps\\JamCreateForm.jsx":"35","C:\\Users\\moreh\\OneDrive\\שולחן העבודה\\Sprint 4\\jammit\\frontend\\src\\services\\httpService.js":"36","C:\\Users\\moreh\\OneDrive\\שולחן העבודה\\Sprint 4\\jammit\\frontend\\src\\cmps\\HeroSection.jsx":"37","C:\\Users\\moreh\\OneDrive\\שולחן העבודה\\Sprint 4\\jammit\\frontend\\src\\cmps\\MainNav.jsx":"38","C:\\Users\\moreh\\OneDrive\\שולחן העבודה\\Sprint 4\\jammit\\frontend\\src\\services\\mainNavService.js":"39","C:\\Users\\moreh\\OneDrive\\שולחן העבודה\\Sprint 4\\jammit\\frontend\\src\\cmps\\LoginModal.jsx":"40","C:\\Users\\moreh\\OneDrive\\שולחן העבודה\\Sprint 4\\jammit\\frontend\\src\\pages\\ForYou.jsx":"41","C:\\Users\\moreh\\OneDrive\\שולחן העבודה\\Sprint 4\\jammit\\frontend\\src\\cmps\\UserProfile\\UserInfo.jsx":"42","C:\\Users\\moreh\\OneDrive\\שולחן העבודה\\Sprint 4\\jammit\\frontend\\src\\cmps\\UserProfile\\UserTalents.jsx":"43","C:\\Users\\moreh\\OneDrive\\שולחן העבודה\\Sprint 4\\jammit\\frontend\\src\\pages\\UserSection.jsx":"44"},{"size":935,"mtime":1610550371936,"results":"45","hashOfConfig":"46"},{"size":5201,"mtime":1610550371942,"results":"47","hashOfConfig":"46"},{"size":377,"mtime":1610550371940,"results":"48","hashOfConfig":"46"},{"size":323,"mtime":1610550371960,"results":"49","hashOfConfig":"46"},{"size":1318,"mtime":1611062258598,"results":"50","hashOfConfig":"46"},{"size":1882,"mtime":1611062258675,"results":"51","hashOfConfig":"46"},{"size":2453,"mtime":1611045468566,"results":"52","hashOfConfig":"46"},{"size":4878,"mtime":1610979314998,"results":"53","hashOfConfig":"46"},{"size":1326,"mtime":1610724880451,"results":"54","hashOfConfig":"46"},{"size":8234,"mtime":1611045468684,"results":"55","hashOfConfig":"46"},{"size":8829,"mtime":1611062258680,"results":"56","hashOfConfig":"46"},{"size":1790,"mtime":1610890606431,"results":"57","hashOfConfig":"46"},{"size":2326,"mtime":1610956368351,"results":"58","hashOfConfig":"46"},{"size":396,"mtime":1610550371955,"results":"59","hashOfConfig":"46"},{"size":278,"mtime":1610808500930,"results":"60","hashOfConfig":"46"},{"size":1432,"mtime":1611062258652,"results":"61","hashOfConfig":"46"},{"size":1574,"mtime":1610550371953,"results":"62","hashOfConfig":"46"},{"size":1596,"mtime":1610612281805,"results":"63","hashOfConfig":"46"},{"size":1499,"mtime":1610890606442,"results":"64","hashOfConfig":"46"},{"size":303,"mtime":1610724416141,"results":"65","hashOfConfig":"46"},{"size":2604,"mtime":1610995473783,"results":"66","hashOfConfig":"46"},{"size":1900,"mtime":1611045468601,"results":"67","hashOfConfig":"46"},{"size":1494,"mtime":1611062258655,"results":"68","hashOfConfig":"46"},{"size":1052,"mtime":1610660112295,"results":"69","hashOfConfig":"46"},{"size":13280,"mtime":1611049237826,"results":"70","hashOfConfig":"46"},{"size":737,"mtime":1610550371959,"results":"71","hashOfConfig":"46"},{"size":669,"mtime":1610550371957,"results":"72","hashOfConfig":"46"},{"size":322,"mtime":1610550371958,"results":"73","hashOfConfig":"46"},{"size":1239,"mtime":1610890606446,"results":"74","hashOfConfig":"46"},{"size":349,"mtime":1610756332721,"results":"75","hashOfConfig":"46"},{"size":1047,"mtime":1610999702021,"results":"76","hashOfConfig":"46"},{"size":654,"mtime":1610986492151,"results":"77","hashOfConfig":"46"},{"size":2948,"mtime":1610994915998,"results":"78","hashOfConfig":"46"},{"size":2390,"mtime":1611047347964,"results":"79","hashOfConfig":"46"},{"size":5355,"mtime":1610890606428,"results":"80","hashOfConfig":"46"},{"size":1081,"mtime":1610550371944,"results":"81","hashOfConfig":"46"},{"size":978,"mtime":1610995473782,"results":"82","hashOfConfig":"46"},{"size":2095,"mtime":1610995473789,"results":"83","hashOfConfig":"46"},{"size":1588,"mtime":1610995541796,"results":"84","hashOfConfig":"46"},{"size":1728,"mtime":1610994979078,"results":"85","hashOfConfig":"46"},{"size":2600,"mtime":1611062258659,"results":"86","hashOfConfig":"46"},{"size":1931,"mtime":1610995473793,"results":"87","hashOfConfig":"46"},{"size":722,"mtime":1610995473793,"results":"88","hashOfConfig":"46"},{"size":2388,"mtime":1611062258684,"results":"89","hashOfConfig":"46"},{"filePath":"90","messages":"91","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"92"},"14pi29",{"filePath":"93","messages":"94","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"92"},{"filePath":"95","messages":"96","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"92"},{"filePath":"97","messages":"98","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"92"},{"filePath":"99","messages":"100","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"101","messages":"102","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"103","usedDeprecatedRules":"92"},{"filePath":"104","messages":"105","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"106","usedDeprecatedRules":"92"},{"filePath":"107","messages":"108","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"92"},{"filePath":"109","messages":"110","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"92"},{"filePath":"111","messages":"112","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"113","usedDeprecatedRules":"92"},{"filePath":"114","messages":"115","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"116","usedDeprecatedRules":"92"},{"filePath":"117","messages":"118","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"92"},{"filePath":"119","messages":"120","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"121","usedDeprecatedRules":"92"},{"filePath":"122","messages":"123","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"92"},{"filePath":"124","messages":"125","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"92"},{"filePath":"126","messages":"127","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"92"},{"filePath":"128","messages":"129","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"92"},{"filePath":"130","messages":"131","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"92"},{"filePath":"132","messages":"133","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"92"},{"filePath":"134","messages":"135","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"92"},{"filePath":"136","messages":"137","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"138","usedDeprecatedRules":"92"},{"filePath":"139","messages":"140","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"92"},{"filePath":"141","messages":"142","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"143","usedDeprecatedRules":"92"},{"filePath":"144","messages":"145","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"92"},{"filePath":"146","messages":"147","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"148","usedDeprecatedRules":"92"},{"filePath":"149","messages":"150","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"92"},{"filePath":"151","messages":"152","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"92"},{"filePath":"153","messages":"154","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"92"},{"filePath":"155","messages":"156","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"92"},{"filePath":"157","messages":"158","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"92"},{"filePath":"159","messages":"160","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"92"},{"filePath":"161","messages":"162","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"92"},{"filePath":"163","messages":"164","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"92"},{"filePath":"165","messages":"166","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"92"},{"filePath":"167","messages":"168","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"92"},{"filePath":"169","messages":"170","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"92"},{"filePath":"171","messages":"172","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"92"},{"filePath":"173","messages":"174","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"175","usedDeprecatedRules":"92"},{"filePath":"176","messages":"177","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"92"},{"filePath":"178","messages":"179","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"92"},{"filePath":"180","messages":"181","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"182","usedDeprecatedRules":"92"},{"filePath":"183","messages":"184","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"185","usedDeprecatedRules":"92"},{"filePath":"186","messages":"187","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"188","usedDeprecatedRules":"92"},{"filePath":"189","messages":"190","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},"C:\\Users\\moreh\\OneDrive\\שולחן העבודה\\Sprint 4\\jammit\\frontend\\src\\index.js",[],["191","192"],"C:\\Users\\moreh\\OneDrive\\שולחן העבודה\\Sprint 4\\jammit\\frontend\\src\\serviceWorkerRegistration.js",[],"C:\\Users\\moreh\\OneDrive\\שולחן העבודה\\Sprint 4\\jammit\\frontend\\src\\reportWebVitals.js",[],"C:\\Users\\moreh\\OneDrive\\שולחן העבודה\\Sprint 4\\jammit\\frontend\\src\\store\\store.js",[],"C:\\Users\\moreh\\OneDrive\\שולחן העבודה\\Sprint 4\\jammit\\frontend\\src\\App.jsx",[],"C:\\Users\\moreh\\OneDrive\\שולחן העבודה\\Sprint 4\\jammit\\frontend\\src\\pages\\Home.jsx",["193"],"import React, { Component } from 'react'\r\nimport { connect } from 'react-redux'\r\nimport { loadJams } from '../store/actions/jamActions.js'\r\nimport { loadUsers } from '../store/actions/userActions.js'\r\nimport { UserList } from '../cmps/UserList.jsx'\r\nimport { JamScroll } from '../cmps/JamScroll.jsx'\r\nimport { HeroSection } from '../cmps/HeroSection.jsx'\r\n\r\nclass _Home extends Component {\r\n  state = {\r\n    \r\n  }\r\n  componentDidMount() {\r\n    this.props.loadJams()\r\n    this.props.loadUsers()\r\n  }\r\n  onJamClick = (jamId)=> {\r\n    this.props.history.push(`jam/${jamId}`)\r\n  }\r\n\r\n  scrollDown = ()=> {\r\n    \r\n  }\r\n\r\n  filterMembersByFollow = () =>{\r\n    return this.props.users.filter(user=> {\r\n      return user.followers.find(user=> user._id === this.props.loggedInUser._id)\r\n    })\r\n  }\r\n\r\n  filterJamsByInst = ()=> {\r\n    return this.props.jams.filter(jam=>{\r\n      const user = jam.usersGoing.find(user=> {\r\n        return user.playing.some(inst=>{\r\n          return inst === this.props.loggedInUser.talents[0]\r\n        })\r\n      })\r\n      if (!user) return jam\r\n    })\r\n  }\r\n\r\n  filterJamsByRegion = ()=> {\r\n    return this.props.jams.filter(jam=>{\r\n      return jam.location.region === this.props.loggedInUser.location.region\r\n    })\r\n  }\r\n\r\n  render() {\r\n    const { jams, users, loggedInUser } = this.props\r\n    if (jams.length === 0 || users.length === 0) return <h2>Loading...</h2>\r\n    return ( \r\n      <div className=\"home\">\r\n        <HeroSection onDownScrollClick={this.scrollDown}/>\r\n        \r\n        <main className=\"main-content flex space-between\">\r\n        {loggedInUser ? \r\n        <div className=\"user-filtered-container\">\r\n           <div className=\"inst-filtered section\"><h1>Jams Without {loggedInUser.talents[0]}</h1>\r\n            <JamScroll jams={this.filterJamsByInst()} onJamClick={this.onJamClick}/>\r\n          </div>\r\n          <div className=\"region-filtered section\"><h1>Jams Around {loggedInUser.location.region} Region</h1>\r\n            <JamScroll jams={this.filterJamsByRegion()} onJamClick={this.onJamClick}/>\r\n          </div>\r\n        </div>\r\n          :\r\n        <div className=\"user-filtered-container\">\r\n          <div className=\"jams section\">\r\n            <h1>Most Popular Jams</h1>\r\n            <JamScroll jams={jams} onJamClick={this.onJamClick}/>\r\n          </div>\r\n          <div className=\"jams section\">\r\n            <h1>Recently Added Jams</h1>\r\n            <JamScroll jams={jams} onJamClick={this.onJamClick}/>\r\n          </div>\r\n        </div>\r\n        }\r\n      {loggedInUser && loggedInUser.following.length > 0 ?\r\n        <div className=\"members-container\">\r\n        <div className=\"members-list-preview\">\r\n        <h1>Members You Follow</h1>\r\n          <UserList users={this.filterMembersByFollow()}/>\r\n        </div>\r\n      </div>\r\n        :\r\n        <div className=\"members-container\">\r\n          <div className=\"members-list-preview\">\r\n          <h1>Featured Members</h1>\r\n            <UserList users={users}/>\r\n          </div>\r\n        </div>\r\n      }\r\n        </main>\r\n      </div>\r\n    )\r\n  }\r\n}\r\n\r\nconst mapStateToProps = state => {\r\n  return {\r\n    jams: state.jamModule.jams,\r\n    users: state.userModule.users,\r\n    loggedInUser: state.userModule.loggedInUser\r\n  }\r\n}\r\nconst mapDispatchToProps = {\r\n  loadJams,\r\n  loadUsers,\r\n}\r\n\r\nexport const Home = connect(mapStateToProps, mapDispatchToProps)(_Home)\r\n","C:\\Users\\moreh\\OneDrive\\שולחן העבודה\\Sprint 4\\jammit\\frontend\\src\\pages\\UserProfile.jsx",["194","195","196"],"import React, { Component } from 'react'\r\nimport { connect } from 'react-redux'\r\nimport { userService } from '../services/userService'\r\nimport { loadUsers } from '../store/actions/userActions'\r\nimport { loadJams } from '../store/actions/jamActions'\r\nimport ChatRoundedIcon from '@material-ui/icons/ChatRounded';\r\nimport FavoriteBorderRoundedIcon from '@material-ui/icons/FavoriteBorderRounded';\r\nimport LocationOnOutlinedIcon from '@material-ui/icons/LocationOnOutlined';\r\nimport FavoriteRoundedIcon from '@material-ui/icons/FavoriteRounded';\r\nimport AddRoundedIcon from '@material-ui/icons/AddRounded';\r\nimport { JamPreview } from '../cmps/JamPreview'\r\nimport { JamScroll } from '../cmps/JamScroll'\r\n\r\nclass _UserProfile extends Component {\r\n\r\n  state = {\r\n    user: null,\r\n    currUser: false,\r\n    followToggle:false\r\n  }\r\n\r\n  // async componentDidMount() {\r\n  //   const user = await userService.getById(this.props.match.params.id)\r\n  //   this.setState({user})\r\n  // }\r\n  onFollowIconClick =()=>{\r\n    const followToggle = this.state\r\n    console.log(followToggle, 'followToggleonFollowIconClick');\r\n    this.setState({followToggle: !this.state.followToggle})\r\n\r\n  }\r\n\r\n  componentDidMount() {\r\n    const user = userService.getById(this.props.match.params.id)\r\n    // console.log('userDits cmp didM', user);\r\n    this.setState({ user })\r\n    // this.props.loadUsers()\r\n    this.props.loadJams()\r\n  }\r\n\r\n  onJamClick = (jamId) => {\r\n    this.props.history.push(`../jam/${jamId}`)\r\n  }\r\n\r\n  findSelectedJams = () => {\r\n    return this.props.jams.filter(jam => {\r\n      return jam.usersGoing.find(userGoing => {\r\n        return userGoing._id === this.state.user._id\r\n      })\r\n\r\n    })\r\n  }\r\n\r\n  render() {\r\n    const { user } = this.state\r\n    const { jams } = this.props\r\n    const {followToggle } = this.state\r\n    // if (!user) return <div>Loding..</div>\r\n    if (jams.length === 0 || !user) return <h2>Loading...</h2>\r\n    return (\r\n      <>\r\n        <section className=\"user-box flex justify-center\">\r\n\r\n          <div className=\"user-left-box flex column\">\r\n\r\n            <div className=\"user-basic-info flex\">\r\n\r\n              <div className=\"user-img\">\r\n                <img src={user.imgUrl} />\r\n              </div>\r\n\r\n              <div className=\"user-tags-name flex column justify-center\">\r\n                <span className=\"user-stage-name fs30\">{user.username}</span>\r\n                <br />\r\n                <div className=\"user-location\">\r\n                  <LocationOnOutlinedIcon className=\"location-icon\" />\r\n                  <span>{user.location.city}</span>\r\n                </div>\r\n                <ul >{user.tags.map((tag, idx) => {\r\n                  return <li className=\"tags fs12\" key={idx}>{tag}</li>\r\n                })}</ul>\r\n              </div>\r\n\r\n            </div>\r\n\r\n            <div className=\"user-about\">\r\n              <span>{user.about}</span>\r\n            </div>\r\n\r\n            {/* <div className=\"followers\">\r\n              {user.followers.map((follower, idx) => {\r\n                return <img className=\"follower-avatar\" src={follower.imgUrl} key={idx} />\r\n              })}\r\n            </div> */}\r\n\r\n            <div className=\"reaction-icon\">\r\n              <ChatRoundedIcon style={{fontSize: 40}}/>\r\n              {!followToggle ? <FavoriteBorderRoundedIcon style={{fontSize: 40}} onClick={()=>this.onFollowIconClick()}/>\r\n               : <FavoriteRoundedIcon style={{fontSize: 40}} onClick={()=>this.onFollowIconClick()}/>}\r\n              \r\n              <AddRoundedIcon onClick={()=>this.props.history.push(\"/jam/create\")} style={{fontSize: 40}} />\r\n            </div>\r\n\r\n          </div>\r\n\r\n          <div className=\"user-right-box flex column\">\r\n            <div className=\"top-card\">\r\n              <h1>Talents</h1>\r\n            <div className=\"user-talents\">\r\n              <ul className=\"flex column\">{user.talents.map((talent, idx) => {\r\n                return <li key={idx}>{talent}</li>\r\n              })}</ul>\r\n            </div>\r\n            </div>\r\n            {/* <div className=\"bottom-card\"> */}\r\n               <div className=\"followers bottom-card\">\r\n                <h1>Followers</h1>\r\n              {user.followers.map((follower, idx) => {\r\n                return <img className=\"follower-avatar\" src={follower.imgUrl} key={idx} />\r\n              })}\r\n            </div>\r\n            {/* </div> */}\r\n\r\n          </div>\r\n        </section>\r\n\r\n        <section className=\"user-jams-list\">\r\n              <h1>Jams Attending</h1>\r\n              <div>\r\n                <JamScroll jams={this.findSelectedJams()} onJamClick={this.onJamClick}/>\r\n              </div>\r\n        </section>\r\n      </>\r\n\r\n    )\r\n  }\r\n}\r\n\r\n\r\nconst mapStateToProps = state => {\r\n  return {\r\n    jams: state.jamModule.jams,\r\n    users: state.userModule.users,\r\n    // loggedInUser: state.userModule.loggedInUser\r\n  }\r\n}\r\nconst mapDispatchToProps = {\r\n  loadJams,\r\n  loadUsers,\r\n}\r\n\r\nexport const UserProfile = connect(mapStateToProps, mapDispatchToProps)(_UserProfile)\r\n\r\n\r\n","C:\\Users\\moreh\\OneDrive\\שולחן העבודה\\Sprint 4\\jammit\\frontend\\src\\pages\\LoginSignup.jsx",[],"C:\\Users\\moreh\\OneDrive\\שולחן העבודה\\Sprint 4\\jammit\\frontend\\src\\pages\\MembersList.jsx",[],"C:\\Users\\moreh\\OneDrive\\שולחן העבודה\\Sprint 4\\jammit\\frontend\\src\\pages\\JamDetails.jsx",["197"],"import React, { Component } from 'react'\r\nimport { jamService } from '../services/jamService'\r\nimport RoomRoundedIcon from '@material-ui/icons/RoomRounded';\r\nimport AccessTimeRoundedIcon from '@material-ui/icons/AccessTimeRounded';\r\nimport PeopleAltRoundedIcon from '@material-ui/icons/PeopleAltRounded';\r\nimport EmojiPeopleRoundedIcon from '@material-ui/icons/EmojiPeopleRounded';\r\nimport HomeIcon from '@material-ui/icons/Home';\r\nimport { MapContainer } from '../cmps/MapContainer';\r\nimport { JamUserPreview } from '../cmps/JamUserPreview';\r\nimport { utilService } from '../services/utilService';\r\nimport { Link } from 'react-router-dom';\r\nimport { JamNavbar } from '../cmps/JamDetailsNavbar';\r\nimport JamGoingListModal from '../cmps/JamGoingModal';\r\nimport { connect } from 'react-redux';\r\nimport { updateJamGoing, loadJams, saveJam } from '../store/actions/jamActions.js';\r\n// import { jamGoingListModal } from '../cmps/JamGoingModal'\r\n// import { loadJams } from '../store/actions/jamActions'\r\nimport HourglassEmptyRoundedIcon from '@material-ui/icons/HourglassEmptyRounded';\r\n\r\nconst emptyJam = {\r\n    title: \"\",\r\n    description: \"\",\r\n    imgUrl: \"http://some-img\",\r\n    capacity: null,\r\n    location: {\r\n        region: \"\",\r\n        city: \"\",\r\n        address: \"\",\r\n        lat: null,\r\n        lng: null\r\n    },\r\n    createdBy: {},\r\n    startsAt: null,\r\n    tags: [],\r\n    createdAt: null,\r\n    usersGoing: []\r\n}\r\n\r\nclass _JamDetails extends Component {\r\n    state = {\r\n        jam: null,\r\n        isUserAdmin: false,\r\n        isEditMode: false\r\n    }\r\n\r\n\r\n    async componentDidMount() {\r\n        this.props.loadJams()\r\n        if (this.props.isEditMode) {\r\n            this.setState({ jam: emptyJam, isEditMode: true, isUserAdmin: true })\r\n        }\r\n        else {\r\n            const jam = await jamService.getById(this.props.match.params.id);\r\n            console.log(jam);\r\n            this.setState({ jam }, () => {\r\n                this.checkIfUserHost()\r\n            })\r\n        }\r\n    }\r\n\r\n    componentWillReceiveProps(props){\r\n        if (props.isSubmit) {\r\n            const miniUser = {}\r\n            miniUser._id = this.props.loggedInUser._id\r\n            miniUser.fullname = this.props.loggedInUser.fullname\r\n            miniUser.imgUrl = this.props.loggedInUser.imgUrl\r\n            miniUser.playing = this.props.loggedInUser.talents\r\n            this.props.saveJam(this.state.jam, miniUser)\r\n            this.props.jamSaved()\r\n        }\r\n        this.setState({jam: props.jam})\r\n    }\r\n\r\n    componentDidUpdate(prevProps) {\r\n        if (this.state.isEditMode) return\r\n        if (this.props.jams !== prevProps.jams) {\r\n            this.setState({ jam: this.props.jams.find(jam => jam._id === this.props.match.params.id) });\r\n        }\r\n    }\r\n\r\n    checkIfUserHost = () => {\r\n        if (!this.props.loggedInUser) return\r\n        if (this.props.loggedInUser._id === this.state.jam.createdBy._id) {\r\n            this.setState({ isUserAdmin: true })\r\n        }\r\n    }\r\n\r\n    render() {\r\n        const { jam, isEditMode, isUserAdmin } = this.state\r\n        return (\r\n            <section className=\"jam-details\">\r\n                {!this.state.jam && <div> Loading... </div>}\r\n                {this.state.jam &&\r\n                    <div className=\"page-con\">\r\n                        <div className=\"jam-title-img-con\">\r\n                            {isUserAdmin && <button className=\"jam-save-btn\"\r\n                                onClick={() => {\r\n                                    if (this.state.isEditMode) this.onSaveChanges()\r\n                                    this.setState({ isEditMode: !isEditMode })\r\n                                }}\r\n                            >\r\n                                {isEditMode ? \"Save Changes\" : \"Edit Details\"}\r\n                            </button>}\r\n                            <h1 className=\"jam-title\">{this.state.jam.title}</h1>\r\n                        </div>\r\n                        {!this.state.isEditMode &&  <div>\r\n                            <JamNavbar\r\n                                history={this.props.history}\r\n                                user={this.props.loggedInUser}\r\n                                jam={this.state.jam}\r\n                                updateJamGoing={this.props.updateJamGoing}\r\n                                isUserAdmin={this.state.isUserAdmin}\r\n                            />\r\n                        </div>}\r\n                        <div className=\"page-content\">\r\n                            <div className=\"left-page-details\">\r\n                                <div className=\"details-con\">\r\n                                    <h3 className=\"title-style\">Details</h3>\r\n                                    <p><span className=\"icon-style\"><HourglassEmptyRoundedIcon/></span><span className=\"details-style\">{this.state.jam.capacity - this.state.jam.usersGoing.length} Slots Available</span></p>\r\n                                    <p><span className=\"icon-style\"><PeopleAltRoundedIcon /></span> <span className=\"details-style\">{this.state.jam.usersGoing.length} People going</span></p>\r\n                                    {!isEditMode && <p><span className=\"icon-style\"><EmojiPeopleRoundedIcon /></span> <span className=\"details-style\">Created by <Link to={\"/user/\" + this.state.jam.createdBy._id} > {this.state.jam.createdBy.fullname}</Link></span></p>}\r\n                                    <p><span className=\"icon-style\"><RoomRoundedIcon /></span> <span className=\"details-style\">{this.state.jam.location.address}, {this.state.jam.location.city}</span></p>\r\n                                    <p><span className=\"icon-style\"><AccessTimeRoundedIcon /></span> <span className=\"details-style\">{utilService.getFormattedDate(this.state.jam.startsAt)}</span></p>\r\n                                    <div className=\"description-con\">\r\n                                        <h3 className=\"title-style\">Description</h3>\r\n                                        <p>{this.state.jam.description}</p>\r\n                                    </div>\r\n                                   \r\n                                    </div>\r\n                                    <div className=\"tags-jam-list\">\r\n                                    <div className=\"jam-tags\">\r\n                                        <ul className=\"jam-card-tags flex\">{jam.tags.map((tag, idx) => {\r\n                                            return <li key={idx}>{tag}</li>\r\n                                        })}\r\n                                        </ul>\r\n                                    </div>\r\n                                    </div>\r\n                                  \r\n                              \r\n                            \r\n\r\n                            </div>\r\n                            <div className=\"left-page-con\">\r\n                            <div className=\"location-con\">\r\n                                <h3 className=\"title-style\">Location</h3>\r\n                                <div><MapContainer lat={this.state.jam.location.lat} lng={this.state.jam.location.lng}/></div>\r\n                            </div>\r\n                            {!isEditMode && <div className=\"users-going-con-section\">\r\n                                    <ul className=\"users-going-con\">\r\n                                        {this.state.jam.usersGoing.slice(0, 3).map(function (user, index) {\r\n                                            return <JamUserPreview key={index} user={user} />\r\n                                        })}\r\n\r\n                                    </ul>\r\n                                    <div className=\"users-going-actions\"> <JamGoingListModal usersGoing={this.state.jam.usersGoing} /> </div>\r\n                                </div>}\r\n                                </div>\r\n                        </div>\r\n                    </div>}\r\n            </section>\r\n        )\r\n    }\r\n}\r\n\r\n\r\nconst mapStateToProps = state => {\r\n    return {\r\n        loggedInUser: state.userModule.loggedInUser,\r\n        jams: state.jamModule.jams\r\n    }\r\n}\r\nconst mapDispatchToProps = {\r\n    loadJams,\r\n    saveJam,\r\n    updateJamGoing\r\n}\r\n\r\nexport const JamDetails = connect(mapStateToProps, mapDispatchToProps)(_JamDetails)","C:\\Users\\moreh\\OneDrive\\שולחן העבודה\\Sprint 4\\jammit\\frontend\\src\\pages\\JamExplore.jsx",["198","199","200"],"import React, { Component } from \"react\";\r\nimport { Map, GoogleApiWrapper, Marker, InfoWindow } from \"google-maps-react\";\r\nimport { connect } from \"react-redux\";\r\nimport { loadJams } from \"../store/actions/jamActions.js\";\r\nimport { loadUsers } from \"../store/actions/userActions.js\";\r\nimport jamThumb from \"../assets/img/jam-thumb.jpg\"\r\nimport { JamScroll } from \"../cmps/JamScroll.jsx\";\r\nimport { JamList } from \"../cmps/JamList.jsx\";\r\nimport { JamPreview } from \"../cmps/JamPreview.jsx\";\r\nimport jamMarker from \"../assets/img/green-marker.png\"\r\nimport GpsFixedIcon from '@material-ui/icons/GpsFixed';\r\n\r\n\r\n\r\nconst mapStyles = {\r\n    width: \"50%\",\r\n    height: \"100%\",\r\n};\r\n\r\n// const containerStyle = {\r\n//     position: 'static',  \r\n//     width: '100%',\r\n//     height: '100%'\r\n// }\r\n\r\nconst mapStyle = [\r\n    {\r\n      featureType: 'landscape.man_made',\r\n      elementType: 'geometry.fill',\r\n      stylers: [\r\n        {\r\n          color: '#dceafa'\r\n        }\r\n      ]\r\n    },\r\n    {\r\n        elementType: \"labels.text\",\r\n        stylers: [\r\n            {\r\n                visibility: \"off\"\r\n            }\r\n        ]\r\n    },\r\n    {\r\n        featureType: \"road.highway\",\r\n        elementType: \"labels\",\r\n        stylers: [\r\n            {\r\n                visibility: \"on\"\r\n            }\r\n        ]\r\n    },\r\n    {\r\n        featureType: \"road.arterial\",\r\n        elementType: \"labels.text\",\r\n        stylers: [\r\n            {\r\n                visibility: \"on\"\r\n            }\r\n        ]\r\n    },\r\n    {\r\n        featureType: \"road.local\",\r\n        elementType: \"labels.text\",\r\n        stylers: [\r\n            {\r\n                visibility: \"on\"\r\n            }\r\n        ]\r\n    },\r\n    ]\r\nclass _JamExplore extends Component {\r\n    state = {\r\n        markers: null,\r\n        userPos: null,\r\n        mapZoom: 14,\r\n        showingInfoWindow: false, // Hides or shows the InfoWindow\r\n        activeMarker: {}, // Shows the active marker upon click\r\n        selectedPlace: null, // Shows the InfoWindow to the selected place upon a marker\r\n    };\r\n    mapRef = React.createRef();\r\n    componentDidMount() {\r\n        this.props.loadJams()\r\n        navigator.geolocation.getCurrentPosition(pos =>{\r\n            const userPos = {position: {lat: null, lng: null}}\r\n            userPos.position.lat = pos.coords.latitude\r\n            userPos.position.lng = pos.coords.longitude\r\n            this.setState({selectedPlace: userPos, userPos: userPos})\r\n            return pos.coords\r\n        })\r\n        this.setState({markers: this.displayMarkers()})\r\n    }\r\n\r\n    onMarkerClick = (props, marker) => {\r\n        console.log('props', props);\r\n        \r\n        this.setState({\r\n            activeMarker: marker,\r\n            showingInfoWindow: true,\r\n            selectedPlace: props,\r\n            mapZoom: 17\r\n        });\r\n    }\r\n\r\n    onJamCenter = (jamId) => {\r\n        const marker  = this.state.markers.find(marker => {\r\n            return marker.key === jamId\r\n        })\r\n        const props = marker.props\r\n        this.setState({\r\n            selectedPlace: props,\r\n            mapZoom: 17\r\n        });\r\n    }\r\n\r\n    onJamClick = (jamId) => {\r\n        this.props.history.push(`jam/${jamId}`)\r\n    }\r\n\r\n    onClose = props => {\r\n        if (this.state.showingInfoWindow) {\r\n          this.setState({\r\n            showingInfoWindow: false,\r\n            activeMarker: null\r\n          });\r\n        }\r\n      };\r\n    displayMarkers = () => {\r\n        return this.props.jams.map(jam => {\r\n                return  <Marker key={jam._id} \r\n                    position={{\r\n                        lat: jam.location.lat,\r\n                        lng: jam.location.lng\r\n                    }} \r\n                    onMousedown={this.onMarkerClick}\r\n                    name={jam.title}\r\n                    currMembers={jam.usersGoing.length}\r\n                    capacity={jam.capacity}\r\n                    icon={{\r\n                        url: jamMarker,\r\n                        anchor: new this.props.google.maps.Point(32,32),\r\n                        scaledSize:  new this.props.google.maps.Size(50,50)\r\n                    }}\r\n                />\r\n            });\r\n    }\r\n      \r\n    //   centerMoved(mapProps, map) {\r\n    //       console.log(map.center.lat());\r\n          \r\n    //   }\r\n    _mapLoaded(mapProps, map) {\r\n        map.setOptions({\r\n           styles: mapStyle\r\n        })\r\n    }    \r\n\r\n    render() {\r\n        const { jams, loggedInUser } = this.props\r\n        const {userPos, selectedPlace, mapZoom, markers} = this.state\r\n        if (!selectedPlace || jams.length === 0) return <h2>Loading...</h2>\r\n        console.log(userPos);\r\n        return (\r\n            <>\r\n            <section className=\"flex explore-container pos-relative\">\r\n                {/* <h1 className=\"jams-explore-title\">Jams In Current Area</h1> */}\r\n                {/* <JamScroll jams={this.props.jams} onJamClick={this.onJamClick}/> */}\r\n                <button onClick={()=>{\r\n                    const selectedPlaceCopy = {...selectedPlace}\r\n                    selectedPlaceCopy.position.lat = userPos.position.lat\r\n                    selectedPlaceCopy.position.lng = userPos.position.lng\r\n                    this.setState({selectedPlace: selectedPlaceCopy, mapZoom: 15})\r\n                    }}><GpsFixedIcon style={{fontSize: 40}}/></button>\r\n                <Map\r\n                    ref={this.mapRef}\r\n                    // containerStyle={containerStyle}\r\n                    google={this.props.google}\r\n                    zoom={mapZoom}\r\n                    style={mapStyles}\r\n                    // centerAroundCurrentLocation={true}\r\n                    initialCenter={{lat: selectedPlace.position.lat, lng: selectedPlace.position.lng}}\r\n                    center={{lat: selectedPlace.position.lat, lng: selectedPlace.position.lng}}\r\n                    onReady={(mapProps, map) => this._mapLoaded(mapProps, map)}\r\n                    disableDefaultUI= {true}\r\n                    // onBoundsChanged={this.centerMoved}\r\n                >\r\n                {markers}\r\n                {loggedInUser && <Marker\r\n                    name={'Your position'}\r\n                    position={userPos.position}\r\n                    icon={{\r\n                    url: loggedInUser.imgUrl,\r\n                    anchor: new this.props.google.maps.Point(32,32),\r\n                    scaledSize:  new this.props.google.maps.Size(50,50)\r\n                    }}\r\n                    />}\r\n                <InfoWindow\r\n                marker={this.state.activeMarker}\r\n                visible={this.state.showingInfoWindow}\r\n                onClose={this.onClose}\r\n              >\r\n                <div>\r\n                    <h2>{this.state.selectedPlace.name}</h2>\r\n                    <h3>Capacity: {this.state.selectedPlace.currMembers} / {this.state.selectedPlace.capacity}</h3>\r\n                </div>\r\n                </InfoWindow>\r\n            </Map>\r\n            <div className=\"jams-explore-container\">\r\n                <div className=\"jams-explore-filter flex column\">\r\n                    <h1>Filter Jams</h1>\r\n                    <div className=\"filter-inputs\">\r\n                        <input type=\"text\" name=\"name\" id=\"\"/>\r\n                        <select name=\"filterByInst\">\r\n                            <option value=\"\">By Instrument Missing</option>\r\n                            <option value=\"\">Singer</option>\r\n                            <option value=\"\">Guitar</option>\r\n                            <option value=\"\">Drums</option>\r\n                            <option value=\"\">Bass</option>\r\n                            <option value=\"\">Keyboard</option>\r\n                        </select>\r\n                        <select name=\"filterByRegion\">\r\n                            <option value=\"\">By Region</option>\r\n                            <option value=\"\">North</option>\r\n                            <option value=\"\">Center</option>\r\n                            <option value=\"\">South</option>\r\n                        </select>\r\n                    </div>\r\n                </div>\r\n                <ul className=\"jams-explore-list\">\r\n                    {jams.map((jam) => (\r\n                        <JamPreview key={jam._id} jam={jam} onJamClick={this.onJamClick}/>\r\n                    ))}\r\n                </ul>\r\n            </div>\r\n            {/* <JamList jams={jams} onJamClick={this.onJamClick}/> */}\r\n            </section>\r\n            </>\r\n        );\r\n    }\r\n}\r\n\r\nconst mapStateToProps = (state) => {\r\n    return {\r\n        jams: state.jamModule.jams,\r\n        users: state.userModule.users,\r\n        loggedInUser: state.userModule.loggedInUser \r\n    };\r\n};\r\nconst mapDispatchToProps = {\r\n    loadJams,\r\n    loadUsers,\r\n};\r\n\r\nexport const JamExplore = GoogleApiWrapper({\r\n    apiKey: \"AIzaSyBTd-r9ES9me88-mTQasKgom191cNMihjY\",\r\n})(connect(mapStateToProps, mapDispatchToProps)(_JamExplore));\r\n","C:\\Users\\moreh\\OneDrive\\שולחן העבודה\\Sprint 4\\jammit\\frontend\\src\\pages\\JamCreate.jsx",[],"C:\\Users\\moreh\\OneDrive\\שולחן העבודה\\Sprint 4\\jammit\\frontend\\src\\cmps\\Header.jsx",["201","202"],"import React, { Component } from 'react'\r\nimport { withRouter, NavLink, Link } from 'react-router-dom'\r\nimport { connect } from 'react-redux'\r\nimport { logout } from '../store/actions/userActions.js'\r\n\r\nclass _Header extends Component {\r\n\r\n    // onAvatarClick = (userId)=> {\r\n    //     this.props.history.push(`user/${userId}`)\r\n    //   }\r\n\r\n    render() {\r\n        const {loggedInUser} = this.props;\r\n        console.log(loggedInUser,'logdinuser')\r\n        return <header>\r\n            \r\n            <div className=\"logo fs40\">\r\n                <NavLink to=\"/\">\r\n                    Jameet\r\n                    <span className=\"fs20\"> people&music</span>\r\n                </NavLink>\r\n            </div>\r\n            \r\n            <div className=\"flex nav-right-side white\">\r\n                {/* {loggedInUser ? <div className=\"user-greet flex align-center white\">\r\n                    <Link to={`user/${loggedInUser._id}`}><h2>Welcome {loggedInUser.fullname.split(' ')[0]}</h2></Link>\r\n                    <span onClick={()=>this.props.logout()}>Sign out</span></div>\r\n                    : <div className=\"user-greet flex align-center\">Welcome Guest</div>} */}\r\n                <nav className=\"fs24\">\r\n                    <NavLink to=\"/search\">Jams</NavLink>\r\n                    <NavLink to=\"/members\">Members</NavLink>\r\n                {loggedInUser ? <div className=\"loggedin-avatar flex fs12\">\r\n                <img src={loggedInUser.imgUrl} className=\"cursor-pointer\" onClick={()=>this.props.history.push(`/user/${loggedInUser._id}`)}/>\r\n                    {/* <Link to={`user/${loggedInUser._id}`}></Link> */}\r\n                    {/* <span onClick={()=>this.props.logout()}>Sign out</span> */}\r\n                    </div>\r\n                    : <div className=\"user-greet flex align-center\">Hi Guest</div>}\r\n                  {/* { loggedInUser ? <span className=\"cursor-pointer\" onClick={()=>this.props.logout()}>Sign out</span> :<NavLink to=\"/login\">Login</NavLink> } */}\r\n                </nav>\r\n            </div>\r\n            \r\n        </header>\r\n    }\r\n\r\n}\r\nconst mapStateToProps = state => {\r\n    return {\r\n        loggedInUser: state.userModule.loggedInUser\r\n    }\r\n}\r\nconst mapDispatchToProps = {\r\n    logout\r\n}\r\n\r\n\r\nexport const Header = withRouter(connect(mapStateToProps, mapDispatchToProps)(_Header))","C:\\Users\\moreh\\OneDrive\\שולחן העבודה\\Sprint 4\\jammit\\frontend\\src\\store\\reducers\\index.js",[],"C:\\Users\\moreh\\OneDrive\\שולחן העבודה\\Sprint 4\\jammit\\frontend\\src\\cmps\\UserList.jsx",[],"C:\\Users\\moreh\\OneDrive\\שולחן העבודה\\Sprint 4\\jammit\\frontend\\src\\cmps\\JamScroll.jsx",[],"C:\\Users\\moreh\\OneDrive\\שולחן העבודה\\Sprint 4\\jammit\\frontend\\src\\store\\actions\\userActions.js",[],"C:\\Users\\moreh\\OneDrive\\שולחן העבודה\\Sprint 4\\jammit\\frontend\\src\\services\\authService.js",[],"C:\\Users\\moreh\\OneDrive\\שולחן העבודה\\Sprint 4\\jammit\\frontend\\src\\store\\actions\\jamActions.js",[],"C:\\Users\\moreh\\OneDrive\\שולחן העבודה\\Sprint 4\\jammit\\frontend\\src\\cmps\\JamList.jsx",[],"C:\\Users\\moreh\\OneDrive\\שולחן העבודה\\Sprint 4\\jammit\\frontend\\src\\cmps\\JamPreview.jsx",["203","204"],"import jamThumb from \"../assets/img/jam-thumb.jpg\"\r\nimport LocationOnIcon from '@material-ui/icons/LocationOn';\r\nimport EventIcon from '@material-ui/icons/Event';\r\nimport {instIcons} from '../assets/img/inst-icons/icons.js'\r\n\r\n\r\nexport function JamPreview({ jam, onJamClick }) {\r\n\r\n    function showIcons (){\r\n        return instIcons.map(icon=>{\r\n            const user = jam.usersGoing.find(user => {\r\n                return user.playing.some(inst=>{\r\n                    const instName = Object.keys(icon)[0]\r\n                    return instName === inst\r\n                })\r\n            })\r\n            if (user) return <img className=\"inst-icon\" src={Object.values(icon)[0]} alt=\"instrument\"/>\r\n        })\r\n    }\r\n\r\n    const slotsLeft = jam.capacity - jam.usersGoing.length\r\n    \r\n    return (\r\n        <li className=\"jam-card flex column\" onClick={()=>onJamClick(jam._id)}>\r\n            <div className=\"thumb-wrapper flex column pos-relative\">\r\n                <img className=\"jam-thumb\" src=\"https://res.cloudinary.com/dhplco0k4/image/upload/v1610961691/jameet/jam1_cgx6jw.jpg\" alt=\"jam-thumbnail\"/>\r\n                <div className=\"inst-icons-wrapper\">\r\n                    {showIcons()}\r\n                </div>\r\n            </div>\r\n            <div className=\"jam-card-content flex\">\r\n                <div className=\"date-wrapper\">\r\n                    <div className=\"date-month\">\r\n                        {new Intl.DateTimeFormat('il', { month: 'short' }).format(new Date(jam.startsAt))}\r\n                    </div>\r\n                    <div className=\"date-day\">\r\n                        {new Date(jam.startsAt).toLocaleString('he-IL',{day: '2-digit'})}\r\n                    </div>\r\n                </div>\r\n                <div className=\"jam-details-wrapper\">\r\n                    <h2>{jam.title}</h2>\r\n                \r\n                    <ul className=\"jam-card-tags flex\">{jam.tags.map((tag, idx) => {\r\n                        return <li key={idx}>{tag}</li> })}\r\n                    </ul>\r\n                \r\n                    <div>\r\n                        <p><LocationOnIcon/>{jam.location.city}</p>\r\n                    </div>\r\n                    <div className=\"going-wrapper flex\">\r\n                        <span>\r\n                            {jam.usersGoing.length} People Are Going\r\n                        </span>\r\n                        <span className={slotsLeft < 10 ? 'red' : 'green'}>\r\n                              {slotsLeft} Slots Left\r\n                        </span>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        </li>\r\n    );\r\n}","C:\\Users\\moreh\\OneDrive\\שולחן העבודה\\Sprint 4\\jammit\\frontend\\src\\services\\userService.js",[],"C:\\Users\\moreh\\OneDrive\\שולחן העבודה\\Sprint 4\\jammit\\frontend\\src\\cmps\\UserPreview.jsx",["205","206","207"],"import { useHistory } from \"react-router-dom\";\r\nimport LocationOnIcon from '@material-ui/icons/LocationOn';\r\nimport {instIcons} from '../assets/img/inst-icons/icons.js'\r\n\r\nexport function UserPreview({ user }) {\r\n\r\n    function showIcons() {\r\n        return instIcons.map(icon=>{\r\n            const talent = user.talents.find(talent=>{\r\n                return (talent === Object.keys(icon)[0])\r\n            })\r\n            if (talent) return <img className=\"user-inst-icon\" src={Object.values(icon)[0]} alt=\"instrument\"/>\r\n        })\r\n    }\r\n\r\n    const history = useHistory()\r\n    return (\r\n        <li className=\"user-card flex column\" onClick={()=>history.push(`/user/${user._id}`)}>\r\n            <div className=\"thumb flex column pos-relative\">\r\n                <div className=\"img-wrapper flex justify-center\">\r\n                    <img className=\"user-card thumb\" src={user.imgUrl} className=\"userThumb\" alt=\"user-thumbnail\"/>\r\n                    <div className=\"inst-icons-wrapper\">\r\n                        {showIcons()}\r\n                    </div>\r\n                </div>\r\n            </div>\r\n            <div className=\"user-card-content flex column\">\r\n                <h2>{user.username}</h2>\r\n                <ul className=\"user-card-tags flex\">{user.tags.map((tag, idx) => {\r\n                    if (idx < 3) return <li key={idx}>{tag}</li> })}\r\n                </ul>\r\n                <p><LocationOnIcon/>{user.location.city}</p>\r\n            </div>\r\n        </li>\r\n    );\r\n}","C:\\Users\\moreh\\OneDrive\\שולחן העבודה\\Sprint 4\\jammit\\frontend\\src\\services\\utilService.js",[],"C:\\Users\\moreh\\OneDrive\\שולחן העבודה\\Sprint 4\\jammit\\frontend\\src\\services\\jamService.js",["208","209"],"import { httpService } from './httpService'\r\n// import { storageService } from './asyncStorageService'\r\nimport userService from './userService'\r\n// import { utilService } from './utilService'\r\n// import { userService } from './userService'\r\n\r\n\r\nvar jams = [\r\n    {\r\n        \"_id\": \"e501\",\r\n        \"title\": \"Jam shel Magnivim\",\r\n        \"description\": \"Bring your own booze and cool down\",\r\n        \"imgUrl\": \"http://some-img\",\r\n        \"capacity\": 12,\r\n        \"location\": {\r\n            \"region\": \"Center\",\r\n            \"city\": \"Tel Aviv\",\r\n            \"address\": \"Hayarkon 30\",\r\n            \"lat\": 32.085300,\r\n            \"lng\": 34.781769\r\n        },\r\n        \"createdBy\": {\r\n            \"_id\": \"u104\",\r\n            \"fullname\": \"Haim Romano\",\r\n            \"imgUrl\": \"https://avataaars.io/?avatarStyle=Circle&topType=WinterHat1&accessoriesType=Blank&hatColor=PastelYellow&facialHairType=MoustacheMagnum&facialHairColor=Blonde&clotheType=Hoodie&clotheColor=Black&eyeType=Default&eyebrowType=Default&mouthType=Default&skinColor=Tanned\"\r\n        },\r\n        \"startsAt\": 12122212134,\r\n        \"tags\": [\"60's\", \"70's\", \"Blues\", \"Rock\"],\r\n        \"createdAt\": 121221453343,\r\n        \"msgs\": [\r\n            {\r\n                txt: \"See you all there!\",\r\n                sentBy: \"haim\"\r\n            }\r\n        ],\r\n        \"usersGoing\": [\r\n            {\r\n                \"_id\": \"u104\",\r\n                \"fullname\": \"Haim Romano\",\r\n                \"imgUrl\": \"https://avataaars.io/?avatarStyle=Circle&topType=WinterHat1&accessoriesType=Blank&hatColor=PastelYellow&facialHairType=MoustacheMagnum&facialHairColor=Blonde&clotheType=Hoodie&clotheColor=Black&eyeType=Default&eyebrowType=Default&mouthType=Default&skinColor=Tanned\",\r\n                \"playing\": [\"Electric-Guitar\"]\r\n            },\r\n            {\r\n                \"_id\": \"u103\",\r\n                \"fullname\": \"Rami Fortis\",\r\n                \"imgUrl\": \"https://avataaars.io/?avatarStyle=Circle&topType=ShortHairTheCaesar&accessoriesType=Round&hairColor=Auburn&facialHairType=Blank&clotheType=GraphicShirt&clotheColor=Pink&graphicType=Skull&eyeType=Wink&eyebrowType=RaisedExcited&mouthType=Grimace&skinColor=Pale\",\r\n                \"playing\": [\"Bass \", \", Singer\"]\r\n            }\r\n        ]\r\n    },\r\n    {\r\n        \"_id\": \"e502\",\r\n        \"title\": \"Karaoke Arsim\",\r\n        \"description\": \"Yalla Happy!! Good time!\",\r\n        \"imgUrl\": \"http://some-img\",\r\n        \"capacity\": 200,\r\n        \"location\": {\r\n            \"region\": \"Center\",\r\n            \"city\": \"Bat Yam\",\r\n            \"address\": \"Nisenbaum 38\",\r\n            \"lat\": 32.016499,\r\n            \"lng\": 34.750278\r\n        },\r\n        \"createdBy\": {\r\n            \"_id\": \"u102\",\r\n            \"fullname\": \"Moshik Afia\",\r\n            \"imgUrl\": \"https://avataaars.io/?avatarStyle=Circle&topType=ShortHairDreads01&accessoriesType=Blank&hairColor=Blonde&facialHairType=BeardLight&facialHairColor=BrownDark&clotheType=BlazerSweater&eyeType=EyeRoll&eyebrowType=FlatNatural&mouthType=Smile&skinColor=Light\"\r\n        },\r\n        \"startsAt\": 56822212134,\r\n        \"tags\": [\"Meditternean\", \"Happy\"],\r\n        \"createdAt\": 121221453343,\r\n        \"msgs\": [\r\n            {\r\n                txt: \"Yesssss!\",\r\n                sentBy: \"moshik\"\r\n            }\r\n        ],\r\n        \"usersGoing\": [\r\n            {\r\n                \"_id\": \"u102\",\r\n                \"fullname\": \"Moshik Afia\",\r\n                \"imgUrl\": \"https://avataaars.io/?avatarStyle=Circle&topType=ShortHairDreads01&accessoriesType=Blank&hairColor=Blonde&facialHairType=BeardLight&facialHairColor=BrownDark&clotheType=BlazerSweater&eyeType=EyeRoll&eyebrowType=FlatNatural&mouthType=Smile&skinColor=Light\",\r\n                \"playing\": [\"Singer\", \", Electric-Guitar\"]\r\n            },\r\n            {\r\n                \"_id\": \"u101\",\r\n                \"fullname\": \"Tomer Yosef\",\r\n                \"imgUrl\": \"https://avataaars.io/?avatarStyle=Circle&topType=Hat&accessoriesType=Blank&facialHairType=BeardMedium&facialHairColor=BrownDark&clotheType=CollarSweater&clotheColor=Gray02&eyeType=Default&eyebrowType=Default&mouthType=Smile&skinColor=Light\",\r\n                \"playing\": [\"Drums \", \", Singer\"]\r\n            }\r\n        ]\r\n    },\r\n    {\r\n        \"_id\": \"e503\",\r\n        \"title\": \"Jazz Blues and Booze\",\r\n        \"description\": \"Let's play some of that good ol' blues\",\r\n        \"imgUrl\": \"http://some-img\",\r\n        \"capacity\": 9,\r\n        \"location\": {\r\n            \"region\": \"North\",\r\n            \"city\": \"Haifa\",\r\n            \"address\": \"Hakarish 23\",\r\n            \"lat\": 32.794044,\r\n            \"lng\": 34.989571\r\n        },\r\n        \"createdBy\": {\r\n            \"_id\": \"u103\",\r\n            \"fullname\": \"Rami Fortis\",\r\n            \"imgUrl\": \"https://avataaars.io/?avatarStyle=Circle&topType=ShortHairTheCaesar&accessoriesType=Round&hairColor=Auburn&facialHairType=Blank&clotheType=GraphicShirt&clotheColor=Pink&graphicType=Skull&eyeType=Wink&eyebrowType=RaisedExcited&mouthType=Grimace&skinColor=Pale\"\r\n        },\r\n        \"startsAt\": 56872212134,\r\n        \"tags\": [\"Blues\", \"Jazz\"],\r\n        \"createdAt\": 121221453343,\r\n        \"msgs\": [\r\n            {\r\n                txt: \"Great\",\r\n                sentBy: \"rami\"\r\n            }\r\n        ],\r\n        \"usersGoing\": [\r\n            {\r\n                \"_id\": \"u103\",\r\n                \"fullname\": \"Rami Fortis\",\r\n                \"imgUrl\": \"https://avataaars.io/?avatarStyle=Circle&topType=ShortHairTheCaesar&accessoriesType=Round&hairColor=Auburn&facialHairType=Blank&clotheType=GraphicShirt&clotheColor=Pink&graphicType=Skull&eyeType=Wink&eyebrowType=RaisedExcited&mouthType=Grimace&skinColor=Pale\",\r\n                \"playing\": [\"Electric-Guitar\"]\r\n            }\r\n        ]\r\n    },\r\n    {\r\n        \"_id\": \"e504\",\r\n        \"title\": \"The Great Gig in the Sky\",\r\n        \"description\": \"Lucy in the sky with diamonds\",\r\n        \"imgUrl\": \"http://some-img\",\r\n        \"capacity\": 15,\r\n        \"location\": {\r\n            \"region\": \"South\",\r\n            \"city\": \"Mitzpe Ramon\",\r\n            \"address\": \"Habanai 24a\",\r\n            \"lat\": 30.612890,\r\n            \"lng\": 34.803082\r\n        },\r\n        \"createdBy\": {\r\n            \"_id\": \"u108\",\r\n            \"fullname\": \"Idan Raichel\",\r\n            \"imgUrl\": \"https://avataaars.io/?avatarStyle=Circle&topType=Turban&accessoriesType=Wayfarers&hatColor=Black&facialHairType=BeardLight&facialHairColor=Platinum&clotheType=ShirtCrewNeck&clotheColor=PastelYellow&eyeType=Side&eyebrowType=Default&mouthType=Tongue&skinColor=Black\"\r\n        },\r\n        \"startsAt\": Date.now()-90000,\r\n        \"tags\": [\"World\", \"Ethnic\"],\r\n        \"createdAt\": 121221453343,\r\n        \"msgs\": [\r\n            {\r\n                txt: \"Welcome!\",\r\n                sentBy: \"shimon\"\r\n            }\r\n        ],\r\n        \"usersGoing\": [\r\n            {\r\n                \"_id\": \"u108\",\r\n                \"fullname\": \"Idan Raichel\",\r\n                \"imgUrl\": \"https://avataaars.io/?avatarStyle=Circle&topType=Turban&accessoriesType=Wayfarers&hatColor=Black&facialHairType=BeardLight&facialHairColor=Platinum&clotheType=ShirtCrewNeck&clotheColor=PastelYellow&eyeType=Side&eyebrowType=Default&mouthType=Tongue&skinColor=Black\",\r\n                \"playing\": [\"Keyboard\"]\r\n            }\r\n        ]\r\n    },\r\n    {\r\n        \"_id\": \"e505\",\r\n        \"title\": \"Lucid Dreams\",\r\n        \"description\": \"Let's all get together and jammm...\",\r\n        \"imgUrl\": \"http://some-img\",\r\n        \"capacity\": 5,\r\n        \"location\": {\r\n            \"region\": \"Center\",\r\n            \"city\": \"Jerusalem\",\r\n            \"address\": \"Agripas 16\",\r\n            \"lat\": 31.768318,\r\n            \"lng\": 35.213711\r\n        },\r\n        \"createdBy\": {\r\n            \"_id\": \"u107\",\r\n            \"fullname\": \"Kobi Oz\",\r\n            \"imgUrl\": \"https://avataaars.io/?avatarStyle=Circle&topType=NoHair&accessoriesType=Blank&hairColor=Blonde&facialHairType=MoustacheMagnum&facialHairColor=BlondeGolden&clotheType=BlazerSweater&eyeType=Close&eyebrowType=RaisedExcitedNatural&mouthType=Eating&skinColor=Pale\"\r\n        },\r\n        \"startsAt\": Date.now()-1000000,\r\n        \"tags\": [\"Electronic\", \"Freestyle\"],\r\n        \"createdAt\": 121221453343,\r\n        \"msgs\": [\r\n            {\r\n                txt: \"Welcome!\",\r\n                sentBy: \"david\"\r\n            }\r\n        ],\r\n        \"usersGoing\": [\r\n            {\r\n                \"_id\": \"u107\",\r\n                \"fullname\": \"Kobi Oz\",\r\n                \"imgUrl\": \"https://avataaars.io/?avatarStyle=Circle&topType=NoHair&accessoriesType=Blank&hairColor=Blonde&facialHairType=MoustacheMagnum&facialHairColor=BlondeGolden&clotheType=BlazerSweater&eyeType=Close&eyebrowType=RaisedExcitedNatural&mouthType=Eating&skinColor=Pale\",\r\n                \"playing\": [\"Singer\"]\r\n            },\r\n            {\r\n                \"_id\": \"u103\",\r\n                \"fullname\": \"Rami Fortis\",\r\n                \"imgUrl\": \"https://avataaars.io/?avatarStyle=Circle&topType=ShortHairTheCaesar&accessoriesType=Round&hairColor=Auburn&facialHairType=Blank&clotheType=GraphicShirt&clotheColor=Pink&graphicType=Skull&eyeType=Wink&eyebrowType=RaisedExcited&mouthType=Grimace&skinColor=Pale\",\r\n                \"playing\": [\"Electric-Guitar\"]\r\n            },\r\n            {\r\n                \"_id\": \"u104\",\r\n                \"fullname\": \"Daniel Salomon\",\r\n                \"imgUrl\": \"https://avataaars.io/?avatarStyle=Circle&topType=LongHairCurly&accessoriesType=Wayfarers&hairColor=Black&facialHairType=BeardMagestic&facialHairColor=BrownDark&clotheType=GraphicShirt&clotheColor=White&graphicType=Bat&eyeType=Happy&eyebrowType=UnibrowNatural&mouthType=Disbelief&skinColor=DarkBrown\",\r\n                \"playing\": [\"Keyboard\"]\r\n            }\r\n        ]\r\n    },\r\n    {\r\n        \"_id\": \"e506\",\r\n        \"title\": \"Old Eretz Israel\",\r\n        \"description\": \"Only oldies but goldies\",\r\n        \"imgUrl\": \"http://some-img\",\r\n        \"capacity\": 13,\r\n        \"location\": {\r\n            \"region\": \"North\",\r\n            \"city\": \"Afula\",\r\n            \"address\": \"Agripas 16\",\r\n            \"lat\": 32.609692,\r\n            \"lng\": 35.287731\r\n        },\r\n        \"createdBy\": {\r\n            \"_id\": \"u105\",\r\n            \"fullname\": \"Yehoram Gaon\",\r\n            \"imgUrl\": \"https://avataaars.io/?avatarStyle=Circle&topType=ShortHairShortCurly&accessoriesType=Blank&hatColor=PastelGreen&hairColor=Red&facialHairType=MoustacheMagnum&facialHairColor=Platinum&clotheType=BlazerSweater&clotheColor=PastelGreen&eyeType=Wink&eyebrowType=UnibrowNatural&mouthType=Disbelief&skinColor=Light\",\r\n        },\r\n        \"startsAt\": Date.now()-1000000,\r\n        \"tags\": [\"Oldies\", \"Folk\"],\r\n        \"createdAt\": 121221453343,\r\n        \"msgs\": [\r\n            {\r\n                txt: \"Welcome!\",\r\n                sentBy: \"david\"\r\n            }\r\n        ],\r\n        \"usersGoing\": [\r\n            {\r\n                \"_id\": \"u105\",\r\n                \"fullname\": \"Yehoram Gaon\",\r\n                \"imgUrl\": \"https://avataaars.io/?avatarStyle=Circle&topType=ShortHairShortCurly&accessoriesType=Blank&hatColor=PastelGreen&hairColor=Red&facialHairType=MoustacheMagnum&facialHairColor=Platinum&clotheType=BlazerSweater&clotheColor=PastelGreen&eyeType=Wink&eyebrowType=UnibrowNatural&mouthType=Disbelief&skinColor=Light\",\r\n                \"playing\": [\"Singer\"]\r\n            },\r\n            {\r\n                \"_id\": \"u103\",\r\n                \"fullname\": \"Rami Fortis\",\r\n                \"imgUrl\": \"https://avataaars.io/?avatarStyle=Circle&topType=ShortHairTheCaesar&accessoriesType=Round&hairColor=Auburn&facialHairType=Blank&clotheType=GraphicShirt&clotheColor=Pink&graphicType=Skull&eyeType=Wink&eyebrowType=RaisedExcited&mouthType=Grimace&skinColor=Pale\",\r\n                \"playing\": [\"Electric-Guitar\"]\r\n            },\r\n            {\r\n                \"_id\": \"u104\",\r\n                \"fullname\": \"Daniel Salomon\",\r\n                \"imgUrl\": \"https://avataaars.io/?avatarStyle=Circle&topType=LongHairCurly&accessoriesType=Wayfarers&hairColor=Black&facialHairType=BeardMagestic&facialHairColor=BrownDark&clotheType=GraphicShirt&clotheColor=White&graphicType=Bat&eyeType=Happy&eyebrowType=UnibrowNatural&mouthType=Disbelief&skinColor=DarkBrown\",\r\n                \"playing\": [\"Keyboard\"]\r\n            },\r\n            {\r\n                \"_id\": \"u101\",\r\n                \"fullname\": \"Tomer Yosef\",\r\n                \"imgUrl\": \"https://avataaars.io/?avatarStyle=Circle&topType=Hat&accessoriesType=Blank&facialHairType=BeardMedium&facialHairColor=BrownDark&clotheType=CollarSweater&clotheColor=Gray02&eyeType=Default&eyebrowType=Default&mouthType=Smile&skinColor=Light\",\r\n                \"playing\": [\"Drums\"]\r\n            }\r\n        ]\r\n    }\r\n]\r\n\r\nexport const jamService = {\r\n    query,\r\n    getById,\r\n    updateJamGoing,\r\n    save\r\n}\r\n\r\nfunction query() {\r\n    // var queryStr = (!filterBy) ? '' : `?name=${filterBy.name}&sort=${sortBy}`\r\n    return httpService.get(`jam`)\r\n    // return jams;\r\n}\r\n\r\nfunction save(jam) {\r\n    return httpService.post(`jam`, jam)\r\n}\r\n\r\nfunction getById(jamId) {\r\n    // return jams.find(jam => jam._id === jamId)\r\n    // return storageService.get('jam', jamId)\r\n    return httpService.get(`jam/${jamId}`)\r\n}\r\n\r\n\r\nfunction updateJamGoing(jamId, user) {\r\n    //UPDATE THE SERVER USER IS NOT GOING\r\n    // jams.find(jam => jam._id === jamId).usersGoing.push(user);\r\n     //return httpService.put(`jam/${jamId}`, user)\r\n  \r\n}\r\n\r\n\r\n\r\n\r\n\r\n\r\n","C:\\Users\\moreh\\OneDrive\\שולחן העבודה\\Sprint 4\\jammit\\frontend\\src\\store\\reducers\\userReducer.js",[],"C:\\Users\\moreh\\OneDrive\\שולחן העבודה\\Sprint 4\\jammit\\frontend\\src\\store\\reducers\\reviewReducer.js",[],"C:\\Users\\moreh\\OneDrive\\שולחן העבודה\\Sprint 4\\jammit\\frontend\\src\\store\\reducers\\systemReducer.js",[],"C:\\Users\\moreh\\OneDrive\\שולחן העבודה\\Sprint 4\\jammit\\frontend\\src\\store\\reducers\\jamReducer.js",[],"C:\\Users\\moreh\\OneDrive\\שולחן העבודה\\Sprint 4\\jammit\\frontend\\src\\assets\\img\\inst-icons\\icons.js",[],"C:\\Users\\moreh\\OneDrive\\שולחן העבודה\\Sprint 4\\jammit\\frontend\\src\\cmps\\MapContainer.jsx",[],"C:\\Users\\moreh\\OneDrive\\שולחן העבודה\\Sprint 4\\jammit\\frontend\\src\\cmps\\JamUserPreview.jsx",[],"C:\\Users\\moreh\\OneDrive\\שולחן העבודה\\Sprint 4\\jammit\\frontend\\src\\cmps\\JamGoingModal.jsx",[],"C:\\Users\\moreh\\OneDrive\\שולחן העבודה\\Sprint 4\\jammit\\frontend\\src\\cmps\\JamDetailsNavbar.jsx",[],"C:\\Users\\moreh\\OneDrive\\שולחן העבודה\\Sprint 4\\jammit\\frontend\\src\\cmps\\JamCreateForm.jsx",[],"C:\\Users\\moreh\\OneDrive\\שולחן העבודה\\Sprint 4\\jammit\\frontend\\src\\services\\httpService.js",[],"C:\\Users\\moreh\\OneDrive\\שולחן העבודה\\Sprint 4\\jammit\\frontend\\src\\cmps\\HeroSection.jsx",[],"C:\\Users\\moreh\\OneDrive\\שולחן העבודה\\Sprint 4\\jammit\\frontend\\src\\cmps\\MainNav.jsx",["210"],"import { withRouter, NavLink } from 'react-router-dom'\r\nimport { connect } from 'react-redux'\r\nimport { logout } from '../store/actions/userActions.js'\r\nimport React, { Component } from 'react'\r\nimport { mainNavService } from '../services/mainNavService.js'\r\n\r\nclass _MainNav extends Component {\r\n\r\n\r\n    componentDidMount() {\r\n        console.log(this.props.location.pathname, 'componentDidMount');\r\n        console.log(this.props ,'props componentDidMount');\r\n        mainNavService.setHomePageNavStyle()\r\n    }\r\n\r\n    componentDidUpdate() {\r\n        // let {locationPathName }= this.props.location.pathname\r\n        if( this.props.location.pathname !== '/'){\r\n            console.log(this.props.location.pathname, 'otherpathname');\r\n            mainNavService.setNavStyle()\r\n        }else{\r\n            console.log(this.props.location.pathname, 'homepagepathname');\r\n            console.log(this.props.location, 'homepagepathname');\r\n            mainNavService.setHomePageNavStyle()\r\n        }\r\n    }\r\n\r\n    render() {\r\n        const { loggedInUser } = this.props;\r\n        return (\r\n            <nav className=\"navbar\">\r\n                <div className=\"logo fs30\">\r\n                    <NavLink to=\"/\">Jameet<span className=\"fs20\"> people&music</span></NavLink>\r\n                </div>\r\n                <div>\r\n                    <NavLink to=\"/search\" className=\"jams-nav-link\">Jams</NavLink>\r\n                    <NavLink to=\"/members\" className=\"members-nav-link\">Members</NavLink>\r\n                    {loggedInUser && <div className=\"loggedin-avatar flex fs12\">\r\n                        <img src={loggedInUser.imgUrl} className=\"cursor-pointer\" onClick={() => this.props.history.push(`/user/${loggedInUser._id}`)} />\r\n                    </div>\r\n                    }\r\n                </div>\r\n            </nav>\r\n        )\r\n    }\r\n}\r\nconst mapStateToProps = state => {\r\n    return {\r\n        loggedInUser: state.userModule.loggedInUser\r\n    }\r\n}\r\nconst mapDispatchToProps = {\r\n    logout\r\n}\r\n\r\n\r\nexport const MainNav = withRouter(connect(mapStateToProps, mapDispatchToProps)(_MainNav))\r\n","C:\\Users\\moreh\\OneDrive\\שולחן העבודה\\Sprint 4\\jammit\\frontend\\src\\services\\mainNavService.js",[],"C:\\Users\\moreh\\OneDrive\\שולחן העבודה\\Sprint 4\\jammit\\frontend\\src\\cmps\\LoginModal.jsx",[],"C:\\Users\\moreh\\OneDrive\\שולחן העבודה\\Sprint 4\\jammit\\frontend\\src\\pages\\ForYou.jsx",["211","212","213"],"import React, { Component } from \"react\";\r\nimport { connect } from \"react-redux\";\r\nimport { userService } from \"../services/userService\";\r\nimport { loadUsers } from \"../store/actions/userActions\";\r\nimport { loadJams } from \"../store/actions/jamActions\";\r\nimport { UserInfo } from \"../cmps/UserProfile/UserInfo\";\r\nimport { UserTalents } from \"../cmps/UserProfile/UserTalents\";\r\nimport { JamScroll } from \"../cmps/JamScroll\";\r\n\r\nclass _ForYou extends Component {\r\n    \r\n    state = {}\r\n\r\n    filterMembersByFollow = () => {\r\n        return this.props.users.filter((user) => {\r\n            return user.followers.find(\r\n                (user) => user._id === this.props.loggedInUser._id\r\n            );\r\n        });\r\n    };\r\n\r\n    filterJamsByInst = () => {\r\n        return this.props.jams.filter((jam) => {\r\n            const user = jam.usersGoing.find((user) => {\r\n                return user.playing.some((inst) => {\r\n                    return inst === this.props.loggedInUser.talents[0];\r\n                });\r\n            });\r\n            if (!user) return jam;\r\n        });\r\n    };\r\n\r\n    filterJamsByRegion = () => {\r\n        return this.props.jams.filter((jam) => {\r\n            return (\r\n                jam.location.region === this.props.loggedInUser.location.region\r\n            );\r\n        });\r\n    };\r\n    render() {\r\n        const { loggedInUser } = this.props;\r\n        if (!loggedInUser) return <h2>Loading...</h2>;\r\n        return (\r\n            <div className=\"for-you-section\">\r\n                <ul className=\"jam-details-navbar\">\r\n                    <div className=\"navbar-left\">\r\n                        <li>About</li>\r\n                        <li>Events</li>\r\n                    </div>\r\n                </ul>\r\n                <div className=\"for-you-content flex\">\r\n                    <div className=\"profile-container-side flex column\">\r\n                        <UserInfo user={loggedInUser} isUserAdmin={true} />\r\n                        <UserTalents user={loggedInUser} isUserAdmin={true} />\r\n                    </div>\r\n                    \r\n                </div>\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nconst mapStateToProps = (state) => {\r\n    return {\r\n        jams: state.jamModule.jams,\r\n        users: state.userModule.users,\r\n        loggedInUser: state.userModule.loggedInUser,\r\n    };\r\n};\r\nconst mapDispatchToProps = {\r\n    loadJams,\r\n    loadUsers,\r\n};\r\n\r\nexport const ForYou = connect(mapStateToProps, mapDispatchToProps)(_ForYou);\r\n","C:\\Users\\moreh\\OneDrive\\שולחן העבודה\\Sprint 4\\jammit\\frontend\\src\\cmps\\UserProfile\\UserInfo.jsx",["214"],"import ChatRoundedIcon from '@material-ui/icons/ChatRounded';\r\nimport FavoriteBorderRoundedIcon from '@material-ui/icons/FavoriteBorderRounded';\r\nimport LocationOnOutlinedIcon from '@material-ui/icons/LocationOnOutlined';\r\nimport FavoriteRoundedIcon from '@material-ui/icons/FavoriteRounded';\r\nimport AddRoundedIcon from '@material-ui/icons/AddRounded';\r\nimport { useHistory } from 'react-router';\r\n\r\n\r\nexport function UserInfo({user, followToggle, onFollowIconClick, isUserAdmin}) {\r\n    const history = useHistory()\r\n    return (\r\n        <div className=\"user-left-box flex column\">\r\n            <div className=\"user-basic-info flex\">\r\n                <div className=\"user-img\">\r\n                    <img src={user.imgUrl} />\r\n                </div>\r\n                <div className=\"user-tags-name flex column\">\r\n                    <span className=\"user-stage-name fs30\">{user.username}</span>\r\n                    <div className=\"user-location\">\r\n                    <LocationOnOutlinedIcon className=\"location-icon\" />\r\n                    <span>{user.location.city}</span>\r\n                    </div>\r\n                    <ul className=\"user-tags flex\">{user.tags.map((tag, idx) => {\r\n                            return <li key={idx}>{tag}</li> })}\r\n                    </ul>\r\n                </div>\r\n            </div>\r\n            <div className=\"user-about\">\r\n                <span>{user.about}</span>\r\n            </div>\r\n            {!isUserAdmin && <div className=\"reaction-icon\">\r\n                <ChatRoundedIcon style={{fontSize: 40}}/>\r\n                {!followToggle ? <FavoriteBorderRoundedIcon style={{fontSize: 40}} onClick={()=>onFollowIconClick()}/>\r\n                : <FavoriteRoundedIcon style={{fontSize: 40}} onClick={()=>onFollowIconClick()}/>}  \r\n                <AddRoundedIcon onClick={()=>history.push(\"/jam/create\")} style={{fontSize: 40}} />\r\n            </div>}\r\n        </div>\r\n        \r\n    )\r\n}","C:\\Users\\moreh\\OneDrive\\שולחן העבודה\\Sprint 4\\jammit\\frontend\\src\\cmps\\UserProfile\\UserTalents.jsx",["215"],"export function UserTalents({user}) {\r\n    return (\r\n        <div className=\"user-right-box flex column\">\r\n            <div className=\"top-card\">\r\n              <h1>Talents</h1>\r\n            <div className=\"user-talents\">\r\n              <ul className=\"flex column\">{user.talents.map((talent, idx) => {\r\n                return <li key={idx}>{talent}</li>\r\n              })}</ul>\r\n            </div>\r\n            </div>\r\n               <div className=\"followers bottom-card\">\r\n                <h1>Followers</h1>\r\n              {user.followers.map((follower, idx) => {\r\n                return <img className=\"follower-avatar\" src={follower.imgUrl} key={idx} />\r\n              })}\r\n            </div>\r\n        </div>\r\n    )\r\n}","C:\\Users\\moreh\\OneDrive\\שולחן העבודה\\Sprint 4\\jammit\\frontend\\src\\pages\\UserSection.jsx",["216"],{"ruleId":"217","replacedBy":"218"},{"ruleId":"219","replacedBy":"220"},{"ruleId":"221","severity":1,"message":"222","line":27,"column":38,"nodeType":"223","messageId":"224","endLine":27,"endColumn":40},{"ruleId":"225","severity":1,"message":"226","line":9,"column":10,"nodeType":"227","messageId":"228","endLine":9,"endColumn":20},{"ruleId":"229","severity":1,"message":"230","line":59,"column":17,"nodeType":"231","endLine":59,"endColumn":42},{"ruleId":"229","severity":1,"message":"230","line":106,"column":24,"nodeType":"231","endLine":106,"endColumn":91},{"ruleId":"225","severity":1,"message":"232","line":7,"column":8,"nodeType":"227","messageId":"228","endLine":7,"endColumn":16},{"ruleId":"225","severity":1,"message":"233","line":6,"column":8,"nodeType":"227","messageId":"228","endLine":6,"endColumn":16},{"ruleId":"225","severity":1,"message":"234","line":7,"column":10,"nodeType":"227","messageId":"228","endLine":7,"endColumn":19},{"ruleId":"225","severity":1,"message":"235","line":8,"column":10,"nodeType":"227","messageId":"228","endLine":8,"endColumn":17},{"ruleId":"225","severity":1,"message":"236","line":2,"column":31,"nodeType":"227","messageId":"228","endLine":2,"endColumn":35},{"ruleId":"229","severity":1,"message":"230","line":33,"column":17,"nodeType":"231","endLine":33,"endColumn":143},{"ruleId":"225","severity":1,"message":"233","line":1,"column":8,"nodeType":"227","messageId":"228","endLine":1,"endColumn":16},{"ruleId":"221","severity":1,"message":"237","line":10,"column":34,"nodeType":"223","messageId":"224","endLine":10,"endColumn":36},{"ruleId":"221","severity":1,"message":"237","line":8,"column":34,"nodeType":"223","messageId":"224","endLine":8,"endColumn":36},{"ruleId":"238","severity":1,"message":"239","line":21,"column":72,"nodeType":"240","endLine":21,"endColumn":93},{"ruleId":"221","severity":1,"message":"237","line":31,"column":83,"nodeType":"223","messageId":"224","endLine":31,"endColumn":85},{"ruleId":"225","severity":1,"message":"241","line":3,"column":8,"nodeType":"227","messageId":"228","endLine":3,"endColumn":19},{"ruleId":"225","severity":1,"message":"242","line":8,"column":5,"nodeType":"227","messageId":"228","endLine":8,"endColumn":9},{"ruleId":"229","severity":1,"message":"230","line":24,"column":17,"nodeType":"231","endLine":24,"endColumn":143},{"ruleId":"225","severity":1,"message":"241","line":3,"column":10,"nodeType":"227","messageId":"228","endLine":3,"endColumn":21},{"ruleId":"225","severity":1,"message":"234","line":8,"column":10,"nodeType":"227","messageId":"228","endLine":8,"endColumn":19},{"ruleId":"221","severity":1,"message":"222","line":23,"column":45,"nodeType":"223","messageId":"224","endLine":23,"endColumn":47},{"ruleId":"229","severity":1,"message":"230","line":15,"column":21,"nodeType":"231","endLine":15,"endColumn":46},{"ruleId":"229","severity":1,"message":"230","line":15,"column":24,"nodeType":"231","endLine":15,"endColumn":91},{"ruleId":"221","severity":1,"message":"222","line":21,"column":45,"nodeType":"223","messageId":"224","endLine":21,"endColumn":47},"no-native-reassign",["243"],"no-negated-in-lhs",["244"],"array-callback-return","Array.prototype.filter() expects a value to be returned at the end of arrow function.","ArrowFunctionExpression","expectedAtEnd","no-unused-vars","'JamPreview' is defined but never used.","Identifier","unusedVar","jsx-a11y/alt-text","img elements must have an alt prop, either with meaningful text, or an empty string for decorative images.","JSXOpeningElement","'HomeIcon' is defined but never used.","'jamThumb' is defined but never used.","'JamScroll' is defined but never used.","'JamList' is defined but never used.","'Link' is defined but never used.","Array.prototype.map() expects a value to be returned at the end of arrow function.","react/jsx-no-duplicate-props","No duplicate props allowed","JSXAttribute","'userService' is defined but never used.","'jams' is assigned a value but never used.","no-global-assign","no-unsafe-negation"]